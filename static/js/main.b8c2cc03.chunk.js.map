{"version":3,"sources":["Pages/Shared.js","Pages/homeimages/plus.svg","Pages/homeimages/qs.svg","Pages/homeimages/dijkstra.svg","Pages/Home.js","Pages/icons/BackArrow.svg","Pages/Algorithms.js","Pages/DataStructures.js","Pages/datastructures/linkedlist/LinkedList.js","Pages/datastructures/array/ArrayElement.js","Pages/datastructures/array/ArrayVis.js","Pages/algorithms/binarysearch/ArrayElement.js","Pages/algorithms/binarysearch/BinarySearch.js","Pages/algorithms/quicksort/ArrayElement.js","Pages/algorithms/quicksort/QuickSort.js","Pages/algorithms/bfs/ArrayElement.js","Pages/algorithms/bfs/BFS.js","Pages/algorithms/dijkstra/Dijkstra.js","App.js","index.js"],"names":["media","TopWrapper","styled","div","Title","h1","Item","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","id","transform","width","height","fill","d","SvgPlus","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","ForwardRef","SvgQs","cx","cy","rx","ry","r","SvgDijkstra","HomeWrapper","BodyWrapper","HomeTitle","IconHolder","DataStructures","BackLink","as","Link","to","url","style","backgroundColor","colour","description","Home","position","top","left","SvgBackArrow","AlgorithmsWrapper","ItemRow","DataType","opacity","Algorithms","DataStructuresWrapper","paddingLeft","ItemRowDescription","ItemRowContent","InputValue","input","AddButton","MinusButton","ControlHolder","SketchHolder","StaticPosition","Info","BFS","holderRef","useRef","screenRef","useState","globalWidth","setGlobalWidth","globalHeight","setGlobalHeight","nodeLink","setNodeLink","nodeValue","setNodeValue","nodeID","setNodeID","nodeX","setNodeX","nodeY","setNodeY","looper","setLooper","changer","setChanger","isRendered","setIsRendered","frameWidth","setFrameWidth","frameHeight","setFrameHeight","useEffect","current","getBoundingClientRect","Node","x","y","value","next","bgColour","Math","floor","random","temp","j","console","log","windowResized","p5","resizeCanvas","windowHeight","draw","clear","noStroke","currX","currY","color","ellipse","strokeWeight","stroke","line","textSize","text","a","sleep","splice","ms","Promise","resolve","setTimeout","mouseWheel","event","mouseX","mouseY","m","_mouseWheelDeltaY","mouseCurrentY","setMouseCurrentY","className","onLoad","setup","canvasParentRef","window","scrollTo","behavior","createCanvas","parent","mouseDragged","document","documentElement","scrollTop","innerWidth","onscroll","body","overflow","mousePressed","mouseReleased","placeholder","onChange","onClick","addNode","removeNode","ElementWrapper","ElementBackground","Container","ArrayElement","ArrayHolder","ArrayPosHolder","ArrayVis","arrayLink","setArrayLink","positionLink","setPositionLink","arrayValue","setArrayValue","arrayPosition","setArrayPosition","indexToChange","setIndexToChange","arrayID","setArrayID","shouldChange","setShouldChange","movementIterator","setMovementIterator","arrayTransform","handleUpdate","index","newArrayLink","display","flexDirection","map","Fragment","movement","findIndex","array","textColour","marginLeft","elementState","backgroundImage","foreground","textInsert","background","TextInsert","BinarySearch","elementTextColour","found","setFound","binarySearchFunction","low","high","mid","updateColours","changeArrayFromInput","QuickSort","quickSortFunction","partition","pi","pivot","swap","c","highlightColours","textAlign","minHeight","maxHeight","Instruction","h2","secondLinks","setNodesSet","addEventListener","adjacencyMatrix","centerNode","setCenterNode","centerIndex","setCenterIndex","initialR","screenWidth","screenHeight","nodeLinkTemp","protection","isCenter","isOverlapping","otherNode","b","sqrt","push","linkMaker","numConnections","nodeIndex","distance","smallest","nodeToAdd","indexToAdd","distanceToAdd","prevNodes","prevDist","doneBefore","w","k","parseInt","dist","abs","activeNode","closestIndex","secondIndex","closestDistance","toStart","toEnd","lineLength","currIndex","active","toFind","setToFind","s","visited","queue","shift","order","n","reverse","findParent","currentCenter","currentCenterIndex","breadthFirstSearch","Dijkstra","matrixLoaded","setMatrixLoaded","animationTimer","costMatrix","connections","triangle","startValue","distFromStart","minValue","minNode","adj","f","isMovingObject","dijkstras","App","path","exact","component","LinkedList","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b8c2cc03.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const media = {\n  mobile: \"@media(max-width: 1024px)\",\n};\n\nexport const TopWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-grow: 0.1;\n  background-color: white; /*previously peachpuff*/\n  align-items: center;\n  justify-content: flex-start;\n\n  svg {\n    padding-left: 5%;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: calc(5vh + 1vw);\n  color: black;\n  padding-left: 5%;\n  ${media.mobile} {\n  }\n`;\n\nexport const Item = styled.div`\n  min-width: 300px;\n\n  width: 30vw;\n  height: auto;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n  margin-bottom: 1vh;\n  text-decoration: none;\n  text-align: center;\n\n  h1 {\n    font-size: calc(6vh + 1vw);\n    font-weight: bolder;\n    color: white;\n    margin-left: 2vw;\n    margin-right: 2vw;\n  }\n  p {\n    font-size: calc(1vh+1vw);\n    font-weight: bolder;\n    color: white;\n\n    margin-left: 1vw;\n    margin-right: 1vw;\n    margin-bottom: 5vh;\n\n    text-align: left;\n    line-height: 1.5;\n    text-justify: inter-word;\n    ${media.mobile} {\n    }\n  }\n\n  ${media.mobile} {\n    width: 90vw;\n    border-radius: 8vh;\n  }\n`;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group_2\",\n  \"data-name\": \"Group 2\",\n  transform: \"translate(-249.304 65.455) rotate(-21)\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_15\",\n  \"data-name\": \"Rectangle 15\",\n  width: 210.436,\n  height: 35.612,\n  transform: \"translate(207 156.412)\",\n  fill: \"#85deda\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_16\",\n  \"data-name\": \"Rectangle 16\",\n  width: 210.436,\n  height: 35.612,\n  transform: \"translate(330.024 69) rotate(90)\",\n  fill: \"#85deda\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"Path_25\",\n  \"data-name\": \"Path 25\",\n  d: \"M0,0H32.375V87.412H0Z\",\n  transform: \"translate(330.024 69)\",\n  fill: \"#78ceca\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_18\",\n  \"data-name\": \"Rectangle 18\",\n  width: 32.375,\n  height: 87.412,\n  transform: \"translate(330.024 192.024)\",\n  fill: \"#78ceca\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_19\",\n  \"data-name\": \"Rectangle 19\",\n  width: 32.375,\n  height: 35.612,\n  transform: \"translate(417.436 156.412)\",\n  fill: \"#78ceca\"\n}));\n\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 239.446,\n    height: 220.824,\n    viewBox: \"0 0 239.446 220.824\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.7e902115.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group_14\",\n  \"data-name\": \"Group 14\",\n  transform: \"translate(-412.909 -4.071) rotate(-31)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group_13\",\n  \"data-name\": \"Group 13\",\n  transform: \"translate(208.29 -233.65)\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_46\",\n  \"data-name\": \"Rectangle 46\",\n  width: 29,\n  height: 95,\n  transform: \"translate(55 652)\",\n  fill: \"#e2a3ea\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_47\",\n  \"data-name\": \"Rectangle 47\",\n  width: 29,\n  height: 149,\n  transform: \"translate(84 598)\",\n  fill: \"#e2a3ea\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_48\",\n  \"data-name\": \"Rectangle 48\",\n  width: 29,\n  height: 186,\n  transform: \"translate(113 561)\",\n  fill: \"#e2a3ea\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_49\",\n  \"data-name\": \"Rectangle 49\",\n  width: 29,\n  height: 120,\n  transform: \"translate(142 627)\",\n  fill: \"#e2a3ea\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_50\",\n  \"data-name\": \"Rectangle 50\",\n  width: 29,\n  height: 219,\n  transform: \"translate(171 528)\",\n  fill: \"#e2a3ea\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_51\",\n  \"data-name\": \"Rectangle 51\",\n  width: 29,\n  height: 161,\n  transform: \"translate(200 586)\",\n  fill: \"#e2a3ea\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_52\",\n  \"data-name\": \"Rectangle 52\",\n  width: 29,\n  height: 120,\n  transform: \"translate(229 627)\",\n  fill: \"#e2a3ea\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_53\",\n  \"data-name\": \"Rectangle 53\",\n  width: 29,\n  height: 211,\n  transform: \"translate(258 536)\",\n  fill: \"#e2a3ea\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_54\",\n  \"data-name\": \"Rectangle 54\",\n  width: 29,\n  height: 87,\n  transform: \"translate(287 660)\",\n  fill: \"#e2a3ea\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group_12\",\n  \"data-name\": \"Group 12\",\n  transform: \"translate(179 -234)\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_46-2\",\n  \"data-name\": \"Rectangle 46\",\n  width: 29,\n  height: 95,\n  transform: \"translate(55 652)\",\n  fill: \"#f7b7ff\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_47-2\",\n  \"data-name\": \"Rectangle 47\",\n  width: 29,\n  height: 149,\n  transform: \"translate(84 598)\",\n  fill: \"#f7b7ff\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_48-2\",\n  \"data-name\": \"Rectangle 48\",\n  width: 29,\n  height: 186,\n  transform: \"translate(113 561)\",\n  fill: \"#f7b7ff\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_49-2\",\n  \"data-name\": \"Rectangle 49\",\n  width: 29,\n  height: 120,\n  transform: \"translate(142 627)\",\n  fill: \"#f7b7ff\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_50-2\",\n  \"data-name\": \"Rectangle 50\",\n  width: 29,\n  height: 219,\n  transform: \"translate(171 528)\",\n  fill: \"#f7b7ff\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_51-2\",\n  \"data-name\": \"Rectangle 51\",\n  width: 29,\n  height: 161,\n  transform: \"translate(200 586)\",\n  fill: \"#f7b7ff\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_52-2\",\n  \"data-name\": \"Rectangle 52\",\n  width: 29,\n  height: 120,\n  transform: \"translate(229 627)\",\n  fill: \"#f7b7ff\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_53-2\",\n  \"data-name\": \"Rectangle 53\",\n  width: 29,\n  height: 211,\n  transform: \"translate(258 536)\",\n  fill: \"#f7b7ff\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_54-2\",\n  \"data-name\": \"Rectangle 54\",\n  width: 29,\n  height: 87,\n  transform: \"translate(287 660)\",\n  fill: \"#f7b7ff\"\n})));\n\nfunction SvgQs(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 300.89,\n    height: 315.137,\n    viewBox: \"0 0 300.89 315.137\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQs);\nexport default __webpack_public_path__ + \"static/media/qs.1eb71eb6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group_24\",\n  \"data-name\": \"Group 24\",\n  transform: \"matrix(0.891, 0.454, -0.454, 0.891, -81.914, -515.186)\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_2\",\n  \"data-name\": \"Rectangle 2\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(0.719, 0.695, -0.695, 0.719, 518.635, 363.046)\",\n  fill: \"#bcffc6\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  id: \"Ellipse_2\",\n  \"data-name\": \"Ellipse 2\",\n  cx: 38.5,\n  cy: 39,\n  rx: 38.5,\n  ry: 39,\n  transform: \"translate(370 440.258)\",\n  fill: \"#bcffc6\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_1\",\n  \"data-name\": \"Rectangle 1\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(0.719, 0.695, -0.695, 0.719, 509.287, 359.93)\",\n  fill: \"#99f4a1\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_11\",\n  \"data-name\": \"Rectangle 11\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-0.695, 0.719, -0.719, -0.695, 523.484, 573.883)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_12\",\n  \"data-name\": \"Rectangle 12\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-0.695, 0.719, -0.719, -0.695, 526.6, 589.463)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Ellipse_1\",\n  \"data-name\": \"Ellipse 1\",\n  cx: 39,\n  cy: 39,\n  r: 39,\n  transform: \"translate(356 440.258)\",\n  fill: \"#99f4a1\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Ellipse_9\",\n  \"data-name\": \"Ellipse 9\",\n  cx: 39,\n  cy: 39,\n  r: 39,\n  transform: \"translate(481 340.258)\",\n  fill: \"#bcffc6\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_7\",\n  \"data-name\": \"Rectangle 7\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(0.017, 1, -1, 0.017, 723.086, 372.423)\",\n  fill: \"#bcffc6\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_8\",\n  \"data-name\": \"Rectangle 8\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(0.017, 1, -1, 0.017, 718.68, 363.61)\",\n  fill: \"#99f4a1\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_13\",\n  \"data-name\": \"Rectangle 13\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-0.695, 0.719, -0.719, -0.695, 632.543, 489.752)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_14\",\n  \"data-name\": \"Rectangle 14\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-0.695, 0.719, -0.719, -0.695, 635.659, 505.332)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Ellipse_10\",\n  \"data-name\": \"Ellipse 10\",\n  cx: 39,\n  cy: 39,\n  r: 39,\n  transform: \"translate(467 340.258)\",\n  fill: \"#99f4a1\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  id: \"Ellipse_11\",\n  \"data-name\": \"Ellipse 11\",\n  cx: 39,\n  cy: 38.5,\n  rx: 39,\n  ry: 38.5,\n  transform: \"translate(481 540.258)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_3\",\n  \"data-name\": \"Rectangle 3\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(0.719, 0.695, -0.695, 0.719, 621.462, 465.872)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_4\",\n  \"data-name\": \"Rectangle 4\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(0.719, 0.695, -0.695, 0.719, 612.114, 462.757)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  id: \"Ellipse_12\",\n  \"data-name\": \"Ellipse 12\",\n  cx: 39,\n  cy: 38.5,\n  rx: 39,\n  ry: 38.5,\n  transform: \"translate(467 540.258)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  id: \"Ellipse_13\",\n  \"data-name\": \"Ellipse 13\",\n  cx: 38.5,\n  cy: 39,\n  rx: 38.5,\n  ry: 39,\n  transform: \"translate(589 440.258)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_15\",\n  \"data-name\": \"Rectangle 15\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-0.695, 0.719, -0.719, -0.695, 744.717, 586.347)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_16\",\n  \"data-name\": \"Rectangle 16\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-0.695, 0.719, -0.719, -0.695, 747.833, 601.927)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Ellipse_14\",\n  \"data-name\": \"Ellipse 14\",\n  cx: 39,\n  cy: 39,\n  r: 39,\n  transform: \"translate(575 440.258)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Ellipse_21\",\n  \"data-name\": \"Ellipse 21\",\n  cx: 39,\n  cy: 39,\n  r: 39,\n  transform: \"translate(700 340.258)\",\n  fill: \"#bcffc6\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_17\",\n  \"data-name\": \"Rectangle 17\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-0.695, 0.719, -0.719, -0.695, 860.008, 483.52)\",\n  fill: \"#bcffc6\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_18\",\n  \"data-name\": \"Rectangle 18\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-0.695, 0.719, -0.719, -0.695, 863.124, 499.1)\",\n  fill: \"#99f4a1\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_9\",\n  \"data-name\": \"Rectangle 9\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-1, 0.017, -0.017, -1, 729.108, 575.796)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_10\",\n  \"data-name\": \"Rectangle 10\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(-1, 0.017, -0.017, -1, 737.922, 571.389)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  id: \"Ellipse_22\",\n  \"data-name\": \"Ellipse 22\",\n  cx: 38.5,\n  cy: 39,\n  rx: 38.5,\n  ry: 39,\n  transform: \"translate(684 340.258)\",\n  fill: \"#99f4a1\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  id: \"Ellipse_23\",\n  \"data-name\": \"Ellipse 23\",\n  cx: 39,\n  cy: 38.5,\n  rx: 39,\n  ry: 38.5,\n  transform: \"translate(700 540.258)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_5\",\n  \"data-name\": \"Rectangle 5\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(0.719, 0.695, -0.695, 0.719, 839.58, 465.872)\",\n  fill: \"#fcb5b5\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle_6\",\n  \"data-name\": \"Rectangle 6\",\n  width: 12.464,\n  height: 183.842,\n  transform: \"matrix(0.719, 0.695, -0.695, 0.719, 830.232, 462.757)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Ellipse_24\",\n  \"data-name\": \"Ellipse 24\",\n  cx: 38.5,\n  cy: 38.5,\n  r: 38.5,\n  transform: \"translate(684 540.258)\",\n  fill: \"#f08181\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Ellipse_25\",\n  \"data-name\": \"Ellipse 25\",\n  cx: 39,\n  cy: 39,\n  r: 39,\n  transform: \"translate(808 440.258)\",\n  fill: \"#bcffc6\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Ellipse_26\",\n  \"data-name\": \"Ellipse 26\",\n  cx: 39,\n  cy: 39,\n  r: 39,\n  transform: \"translate(791 440.258)\",\n  fill: \"#99f4a1\"\n}));\n\nfunction SvgDijkstra(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 507.645,\n    height: 388,\n    viewBox: \"0 0 507.645 388\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDijkstra);\nexport default __webpack_public_path__ + \"static/media/dijkstra.6b5b012f.svg\";\nexport { ForwardRef as ReactComponent };","import { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { TopWrapper, media } from \"./Shared\";\n\nimport { ReactComponent as Plus } from \"./homeimages/plus.svg\";\nimport { ReactComponent as QS } from \"./homeimages/qs.svg\";\nimport { ReactComponent as Dijkstra } from \"./homeimages/dijkstra.svg\";\n\nconst HomeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: transparent;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BodyWrapper = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    margin-top: 10vh;\n  }\n`;\n\nconst HomeTitle = styled.h1`\n  font-size: 6vh;\n  color: black;\n  padding-left: 5%;\n`;\n\nconst Item = styled.div`\n  min-width: 600px;\n  min-height: 250px;\n  width: 30vw;\n  height: auto;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n  margin-bottom: 1vh;\n  text-decoration: none;\n  text-align: center;\n\n  h1 {\n    font-size: calc(6vh + 1vw);\n    font-weight: bolder;\n    color: white;\n    margin-left: 2vw;\n    margin-right: 2vw;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin-left: 2vw;\n    margin-right: 2vw;\n    margin-bottom: 2vh;\n    margin-top: 2vh;\n    transform: translateY(-30%);\n    text-align: justify;\n    text-justify: inter-word;\n  }\n\n  ${media.mobile} {\n    min-width: 150px;\n    min-height: 100px;\n    width: 90vw;\n    border-radius: 8vh;\n  }\n`;\n\nconst IconHolder = styled.div`\n  position: absolute;\n\n  animation: bob 3s infinite ease;\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    display: none;\n  }\n`;\n\nfunction DataStructures(props) {\n  return (\n    <Item\n      BackLink\n      as={Link}\n      to={props.url}\n      style={{ backgroundColor: props.colour }}\n    >\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction Algorithms() {\n  return (\n    <Item\n      as={Link}\n      to=\"/algorithms\"\n      style={{ backgroundColor: \"#6DD3CE\", textDecoration: \"none\" }}\n    >\n      <p style={{ paddingLeft: \"10%\" }}>algorithms</p>\n    </Item>\n  );\n}\n\nfunction Home() {\n  return (\n    <HomeWrapper>\n      <TopWrapper>\n        <HomeTitle>adsref.cc</HomeTitle>\n        <IconHolder>\n          <Plus style={{ position: \"absolute\", top: \"60vh\", left: \"10vw\" }} />\n          <QS style={{ position: \"absolute\", top: \"10vh\", left: \"10vw\" }} />\n          <Dijkstra\n            style={{ position: \"absolute\", top: \"20vh\", left: \"68vw\" }}\n          />\n        </IconHolder>\n      </TopWrapper>\n      <BodyWrapper>\n        <DataStructures url=\"/algorithms\" colour=\"#85DEDA\" title=\"algorithms\" />\n        <DataStructures\n          url=\"/datastructures\"\n          colour=\"#8CE278\"\n          title=\"data structures\"\n        />\n      </BodyWrapper>\n    </HomeWrapper>\n  );\n}\n\nexport default Home;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(-15.458 -48.309)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.108.833,44.35,0a3.878,3.878,0,0,1,3.941,4.037,4.28,4.28,0,0,1-4.107,4.2L3.942,9.073A3.878,3.878,0,0,1,0,5.036,4.28,4.28,0,0,1,4.108.833Z\",\n  transform: \"translate(15.459 72.455) rotate(-30)\",\n  fill: \"#67f3ff\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3.942,0,44.184.833a4.28,4.28,0,0,1,4.107,4.2A3.878,3.878,0,0,1,44.35,9.073L4.108,8.241A4.28,4.28,0,0,1,0,4.038,3.878,3.878,0,0,1,3.942,0Z\",\n  transform: \"translate(19.996 69.151) rotate(30)\",\n  fill: \"#67f3ff\"\n}));\n\nfunction SvgBackArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 46.36,\n    height: 52.846,\n    viewBox: \"0 0 46.36 52.846\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBackArrow);\nexport default __webpack_public_path__ + \"static/media/BackArrow.87ec3327.svg\";\nexport { ForwardRef as ReactComponent };","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"./icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media, Item } from \"./Shared\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  height: 100%;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst ItemRow = styled.div`\n  width: 66%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nfunction DataType(props) {\n  return (\n    <Item\n      BackLink\n      as={Link}\n      to={props.url}\n      style={{ backgroundColor: props.colour, opacity: props.opacity }}\n    >\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction Algorithms() {\n  return (\n    <AlgorithmsWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>algorithms</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRow>\n          <DataType\n            url=\"/binarysearch\"\n            colour=\"#7CED61\"\n            title=\"binary search\"\n            description={\n              <div>\n                <p>\n                  a simple searching algorithm for arrays to find a given\n                  element\n                </p>\n              </div>\n            }\n          />\n\n          <DataType\n            url=\"/quicksort\"\n            colour=\"#D586F8\"\n            title=\"quick sort\"\n            description={\n              <div>\n                <p>\n                  an efficient sorting algorithm for arrays to order elements\n                  from low to high\n                </p>\n              </div>\n            }\n          />\n          <DataType\n            url=\"/dijkstra\"\n            colour=\"#6BEBD8\"\n            title=\"dijkstra's algorithm\"\n            description={\n              <div>\n                <p>\n                  an efficient algorithm for finding the shortest path between\n                  nodes when the distances between them are known\n                </p>\n              </div>\n            }\n          />\n          <DataType\n            url=\"/bfs\"\n            colour=\"#FFE26A\"\n            title=\"BFS\"\n            description={\n              <div>\n                <p>\n                  an efficient algorithm for finding the shortest path between\n                  nodes when the distances between them aren't specified\n                </p>\n              </div>\n            }\n          />\n          <DataType\n            colour=\"#40B8ED\"\n            title=\"bubble sort\"\n            opacity=\"0.3\"\n            description={\n              <div>\n                <p>coming soon... </p>\n              </div>\n            }\n          />\n          <DataType\n            colour=\"#FFA5B2\"\n            title=\"bucket sort\"\n            opacity=\"0.5\"\n            description={\n              <div>\n                <p>coming soon... </p>\n              </div>\n            }\n          />\n        </ItemRow>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default Algorithms;\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"./icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media, Item } from \"./Shared\";\n\nconst DataStructuresWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  height: 100%;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst ItemRow = styled.div`\n  width: 66%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n`;\n\nfunction DataType(props) {\n  return (\n    <Item\n      BackLink\n      as={Link}\n      to={props.url}\n      style={{ backgroundColor: props.colour, opacity: props.opacity }}\n    >\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction DataStructures() {\n  return (\n    <DataStructuresWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/\" style={{ paddingLeft: \"2%\" }}>\n          <BackArrow />\n        </BackLink>\n\n        <Title>data structures</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRow>\n          <DataType\n            colour=\"#F76146\"\n            title=\"array\"\n            url=\"/array\"\n            description={\n              <div>\n                <p>\n                  \"arrays store elements containing data right next to each\n                  other (contiguously) in computer memory, making them ideal for\n                  storing data you will be accessing regularly \"\n                </p>\n              </div>\n            }\n          />\n          <DataType\n            colour=\"#40B8ED\"\n            opacity=\"0.3\"\n            title=\"vector\"\n            description={\n              <div>\n                <p>\"coming soon... \"</p>\n              </div>\n            }\n          />\n          <DataType\n            colour=\"#7CED61\"\n            url=\"/linkedlist\"\n            title=\"linked list\"\n            description={\n              <div>\n                <p>\n                  \"linked lists store data in nodes that are allocated random\n                  addresses in memory. this means inserting/removing data is\n                  fast, but accessing is slow\"\n                </p>\n              </div>\n            }\n          />\n          <DataType\n            colour=\"#FFA5B2\"\n            title=\"binary tree\"\n            opacity=\"0.5\"\n            description={\n              <div>\n                <p>\"coming soon... \"</p>\n              </div>\n            }\n          />\n          <DataType\n            colour=\"#FFE26A\"\n            opacity=\"0.5\"\n            title=\"red black tree\"\n            description={\n              <div>\n                <p>\"coming soon... \"</p>\n              </div>\n            }\n          />\n        </ItemRow>\n      </BodyWrapper>\n    </DataStructuresWrapper>\n  );\n}\n\nexport default DataStructures;\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media, Item } from \"../../Shared\";\n\nimport React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport Sketch from \"react-p5\";\nimport p5 from \"p5\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: flex-start;\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n\n  margin-right: 10%;\n  min-width: 40vw;\n  max-width: 40vw;\n  min-height: 100vh;\n  max-height: 100vh;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    min-width: 100%;\n\n    min-height: 47vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #78fc59;\n  border-radius: 4vh;\n\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst BFSHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n\n  background-color: red;\n  height: 45vh;\n  width: 38vw;\n  padding-top: 2vh;\n\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst BFSRow = styled.div`\n  display: grid;\n\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n`;\n\nconst ControlHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  min-height: 12vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  background-color: transparent;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: blue;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nconst SketchHolder = styled.div`\n  min-width: 40vw;\n  max-width: 40vw;\n  min-height: 70vh;\n  max-height: 70vh;\n  background-color: transparent;\n\n  ${media.mobile} {\n    min-width: 100vw;\n    max-width: 100vw;\n    max-height: 40vh;\n    min-height: 40vh;\n  }\n`;\n\nconst StaticPosition = styled.div`\n  position: fixed;\n  ${media.mobile} {\n    margin-top: inherit;\n    position: relative;\n  }\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction BFS() {\n  const holderRef = useRef();\n  const screenRef = useRef();\n  //Frame\n  const [globalWidth, setGlobalWidth] = useState(0);\n  const [globalHeight, setGlobalHeight] = useState(0);\n\n  //Nodes\n  const [nodeLink, setNodeLink] = useState([]);\n  const [nodeValue, setNodeValue] = useState(37);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeNext, setNodeNext] = useState(null);\n  const [nodeX, setNodeX] = useState(200);\n  const [nodeY, setNodeY] = useState(200);\n  const [looper, setLooper] = useState(0);\n  const [changer, setChanger] = useState(0);\n  const [isRendered, setIsRendered] = useState(0);\n\n  //let frameWidth = holderRef.current.getBoundingClientRect().width;\n  //let frameHeight = holderRef.current.getBoundingClientRect().height;\n\n  const [frameWidth, setFrameWidth] = useState(0);\n  const [frameHeight, setFrameHeight] = useState(0);\n\n  const a = useEffect(() => {\n    if (holderRef.current.getBoundingClientRect().width > 0) {\n      setFrameWidth(holderRef.current.getBoundingClientRect().width);\n      setFrameHeight(holderRef.current.getBoundingClientRect().height);\n\n      for (let i = 0; i < nodeLink.length; i++) {\n        nodeLink[i].r = (frameHeight + frameWidth) / 15;\n      }\n    }\n  }, [holderRef.current, isRendered]);\n\n  const createNodes = useEffect(() => {\n    if (looper < 3) {\n      var Node = {\n        x: nodeX,\n        y: nodeY,\n        value: nodeValue,\n        id: nodeID,\n        r: (frameHeight + frameWidth) / 15,\n        next: null,\n        colour: \"#72ff98\",\n        bgColour: \"#9bffb6\",\n      };\n\n      setNodeLink([...nodeLink, Node]);\n\n      if (looper < 2) {\n        setChanger(changer + 1);\n      }\n    }\n  }, [looper]);\n\n  const updateValues = useEffect(() => {\n    setNodeValue(Math.floor(Math.random() * 99));\n    if (looper % 2 != 0) {\n      setNodeX(nodeX + globalWidth / 10);\n    } else {\n      setNodeX(nodeX - globalWidth / 10);\n    }\n    setNodeY(nodeY + globalHeight / 8);\n    setNodeID(nodeID + 1);\n\n    setLooper(looper + 1);\n  }, [changer]);\n\n  const setNexts = useEffect(() => {\n    if (looper > 2) {\n      let temp = [...nodeLink];\n\n      for (let j = 0; j < nodeLink.length - 1; j++) {\n        temp[j].next = temp[j + 1];\n      }\n\n      setNodeLink(temp);\n    }\n  }, [looper]);\n\n  console.log(nodeLink);\n\n  const [alreadyDone, setAlreadyDone] = useState(0);\n\n  function setup(p5, canvasParentRef) {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n\n    p5.createCanvas(frameWidth, frameHeight).parent(canvasParentRef);\n\n    //Finding node closest to center;\n    setIsRendered(1);\n  }\n\n  const fixPositions = useEffect(() => {}, [isRendered]);\n\n  function test() {}\n\n  function windowResized(p5) {\n    /*\n    //Just fix holderref properties pls\n    if (holderRef.current.getBoundingClientRect().width > 1000) {\n      p5.resizeCanvas(\n        holderRef.current.getBoundingClientRect().width,\n        holderRef.current.getBoundingClientRect().height * 0.8\n      );\n      p5.resizeCanvas(\n        holderRef.getBoundingClientRect().width,\n        holderRef.current.getBoundingClientRect().height * 0.8\n      );\n    } else {\n    }*/\n\n    p5.resizeCanvas(\n      holderRef.current.getBoundingClientRect().width,\n      holderRef.current.getBoundingClientRect().height\n    );\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      nodeLink[i].r =\n        (holderRef.current.getBoundingClientRect().height +\n          holderRef.current.getBoundingClientRect().width) /\n        15;\n    }\n\n    setGlobalHeight(p5.windowHeight);\n    console.log(\"resize\");\n  }\n\n  let draw = (p5) => {\n    p5.clear();\n    p5.noStroke();\n\n    if (isRendered == 1) {\n      let newXY = [...nodeLink];\n      let currX = frameWidth / 2;\n      let currY = (frameHeight * 0.8) / 8;\n\n      for (let i = 0; i < nodeLink.length; i++) {\n        nodeLink[i].x = currX;\n        nodeLink[i].y = currY;\n        nodeLink[i].r = (frameHeight + frameWidth) / 15;\n\n        if (i % 2 == 0) {\n          currX -= frameWidth / 10;\n          setNodeX(currX);\n          console.log(\"Even!\");\n        } else {\n          currX += frameWidth / 10;\n          console.log(\"Odd!\");\n          setNodeX(currX);\n        }\n\n        currY += frameHeight / 8;\n        setNodeY(currY);\n      }\n      setIsRendered(2);\n    }\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      //Background Circle\n      p5.fill(p5.color(nodeLink[i].bgColour));\n      p5.ellipse(\n        nodeLink[i].x + nodeLink[i].r / 6,\n        nodeLink[i].y,\n        nodeLink[i].r,\n        nodeLink[i].r\n      );\n\n      //Foreground line\n      if (nodeLink[i].next) {\n        p5.strokeWeight(20);\n        p5.stroke(\"#72ff98\");\n        p5.line(\n          nodeLink[i].x,\n          nodeLink[i].y,\n          nodeLink[i].next.x,\n          nodeLink[i].next.y\n        );\n      }\n      p5.noStroke();\n\n      //Background line\n      if (nodeLink[i].next) {\n        p5.strokeWeight(20);\n        p5.stroke(\"#9bffb6\");\n        p5.line(\n          nodeLink[i].x + nodeLink[i].next.r / 6,\n          nodeLink[i].y,\n          nodeLink[i].next.x + nodeLink[i].next.r / 6,\n          nodeLink[i].next.y\n        );\n      }\n      p5.noStroke();\n\n      //Foreground Circle\n      p5.fill(p5.color(nodeLink[i].colour));\n      p5.ellipse(nodeLink[i].x, nodeLink[i].y, nodeLink[i].r, nodeLink[i].r);\n\n      p5.textSize(nodeLink[i].r / 2);\n      p5.fill(p5.color(\"white\")).text(\n        nodeLink[i].value,\n        nodeLink[i].x - nodeLink[i].r / 4,\n        nodeLink[i].y + nodeLink[i].r / 6\n      );\n      p5.fill(p5.color(\"#72ff98\"));\n    }\n  };\n\n  function addNode() {\n    var Node = {\n      x: nodeX,\n      y: nodeY,\n      value: nodeValue,\n      id: nodeID,\n      r: (frameHeight + frameWidth) / 15,\n      next: null,\n      colour: \"#72ff98\",\n      bgColour: \"#9bffb6\",\n    };\n\n    setNodeLink([...nodeLink, Node]);\n    setChanger(changer + 1);\n  }\n\n  async function removeNode() {\n    let temp = [...nodeLink];\n    let newTemp;\n\n    console.log(\"nodeValue: \", nodeValue);\n    console.log(\"==\", nodeValue == nodeLink[1].value);\n\n    for (let i = 0; i < temp.length; i++) {\n      nodeLink[i].colour = \"#CB391E\";\n      nodeLink[i].bgColour = \"#DD4125\";\n      await sleep(1000);\n      nodeLink[i].colour = \"#72ff98\";\n      nodeLink[i].bgColour = \"#9bffb6\";\n\n      if (temp[i].value == nodeValue) {\n        nodeLink[i].colour = \"#BE57FF\";\n        nodeLink[i].bgColour = \"#AD2CFF\";\n        await sleep(1000);\n        if (i > 0) {\n          temp[i - 1].next = temp[i + 1];\n        }\n\n        for (let j = temp.length - 1; j > i; j--) {\n          temp[j].x = temp[j - 1].x;\n          temp[j].y = temp[j - 1].y;\n        }\n\n        temp.splice(i, 1);\n        setNodeLink(temp);\n        console.log(\"Index: \", i);\n        setNodeY(nodeY - globalHeight / 8);\n        //do nodex\n        break;\n      }\n    }\n  }\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function mouseWheel(event) {\n    //console.log(event);\n\n    //console.log(window.innerWidth);\n\n    if (event.mouseX > 0 && event.mouseY > 0) {\n      for (let m = 0; m < nodeLink.length; m++) {\n        nodeLink[m].y += event._mouseWheelDeltaY / 8;\n        nodeLink[m].color = \"grey\";\n\n        setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n      }\n    }\n  }\n\n  function mouseDragged(p5) {\n    console.log(p5.mouseY);\n    console.log(frameHeight);\n\n    /*\n    for (let i = 0; i < nodeLink.length; i++) {\n      if (p5.mouseY < mouseCurrentY) {\n        nodeLink[i].y += p5.mouseX / 50;\n      } else {\n        nodeLink[i].y -= p5.mouseX / 50;\n      }\n    }*/\n\n    /* for (let m = 0; m < nodeLink.length; m++) {\n      if (event.mouseY > frameHeight / 4) {\n        nodeLink[m].y += event.mouseY / 80;\n      } else {\n        nodeLink[m].y -= event.mouseY / 80;\n      }\n    }*/\n    console.log(\"TOP: \", document.documentElement.scrollTop);\n\n    if (window.innerWidth > 1000) {\n      if (p5.mouseX > 0 && p5.mouseY > 0) {\n        window.onscroll = function () {\n          document.body.style.overflow = \"hidden\";\n        };\n        for (let i = 0; i < nodeLink.length; i++) {\n          if (p5.mouseY < mouseCurrentY) {\n            nodeLink[i].y += p5.mouseX / 50;\n          } else {\n            nodeLink[i].y -= p5.mouseX / 50;\n          }\n        }\n      }\n    } else {\n      if (p5.mouseY < frameHeight) {\n        window.onscroll = function () {\n          window.scrollTo(0, 0);\n        };\n        for (let i = 0; i < nodeLink.length; i++) {\n          if (p5.mouseY < mouseCurrentY) {\n            nodeLink[i].y += p5.mouseX / 50;\n          } else {\n            nodeLink[i].y -= p5.mouseX / 50;\n          }\n        }\n      }\n    }\n\n    setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n  }\n\n  const [mouseCurrentY, setMouseCurrentY] = useState();\n\n  function mousePressed(p5) {\n    setMouseCurrentY(p5.mouseY);\n  }\n\n  function mouseReleased(p5) {\n    window.onscroll = function () {};\n  }\n\n  return (\n    <AlgorithmsWrapper\n      className=\"BFS\"\n      onLoad={() => console.log(\"Loaded!\")}\n      ref={screenRef}\n    >\n      <TopWrapper>\n        <BackLink as={Link} to=\"/datastructures\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>linked list</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description={\n              <div>\n                <p>\n                  linked lists are made up of nodes, which contain data and an\n                  address. the address 'points' to where the next node in the\n                  sequence is in memory. these addresses can be easily changed,\n                  making reording simple.\n                  <br />\n                  <br />\n                  however, this comes at the cost of a greater access cost than\n                  something like an array, as nodes are rarely right next to\n                  each other in memory.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description={\n              <div>\n                <p>\n                  linked lists are best used in applications where data will\n                  often be inserted or removed, as changing the order of\n                  elements is inexpensive.\n                  <br />\n                  <br />\n                  some web browsers store browser history with a linked list.\n                  this makes sense, as every time a website is visited, new data\n                  would need to be added, or when history is removed, data\n                  removed.\n                  <br />\n                  <br />\n                  essentially, linked lists are useful when storing data is done\n                  more frequently than accessing data\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#FFA5B2\"\n            title=\"costs\"\n            description={\n              <div>\n                <p>\n                  access element: O(n)\n                  <br />\n                  <br />\n                  search: O(n)\n                  <br />\n                  <br />\n                  insert data: O(1)\n                  <br />\n                  <br />\n                  delete data: O(1)\n                </p>\n              </div>\n            }\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          <StaticPosition>\n            <SketchHolder id=\"IRC\" ref={holderRef}>\n              {\n                // This fixes the issue of the render paradox\n                //Width of is not known until render, but conditional statement\n                //Forces rerender and fixes issue\n                frameWidth < 1 && (\n                  <Sketch\n                    setup={test}\n                    draw={draw}\n                    windowResized={windowResized}\n                    mouseWheel={mouseWheel}\n                  />\n                )\n              }\n              {frameWidth > 1 && (\n                <Sketch\n                  setup={setup}\n                  draw={draw}\n                  windowResized={windowResized}\n                  mouseWheel={mouseWheel}\n                  mouseDragged={mouseDragged}\n                  mousePressed={mousePressed}\n                  mouseReleased={mouseReleased}\n                />\n              )}\n            </SketchHolder>\n\n            <ControlHolder>\n              <InputValue\n                placeholder=\"value\"\n                onChange={(event) => setNodeValue(event.target.value)}\n              />\n\n              <AddButton onClick={() => addNode()}>\n                <p>+</p>\n              </AddButton>\n              <MinusButton onClick={() => removeNode()}>\n                <p>-</p>\n              </MinusButton>\n            </ControlHolder>\n          </StaticPosition>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default BFS;\n\n//Old Draw\n/**\n * \n * \n * let draw = (p5) => {\n    p5.background(\"rgb(0%,100%,10%)\");\n    //Color of the ball\n    p5.stroke(255);\n    p5.strokeWeight(4);\n    //Mentioning that the ball or the circle won't have filled color\n    p5.noFill();\n    //The first 2 parameters are for positioning and the next two are\n    //for size\n\n    p5.noStroke();\n    p5.fill(p5.color(\"#9bffb6\"));\n    p5.ellipse(a + 20, b, 100, 100);\n\n    p5.strokeWeight(20);\n    p5.stroke(\"#72ff98\");\n    p5.line(300, 300, 400, 400);\n    p5.noStroke();\n\n    //Circle\n    p5.fill(p5.color(\"#72ff98\"));\n    p5.ellipse(a, b, 100, 100);\n\n    p5.fill(p5.color(\"#9bffb6\"));\n    p5.ellipse(420, 400, 100, 100);\n\n    p5.fill(p5.color(\"#72ff98\"));\n    p5.ellipse(400, 400, 100, 100);\n\n    p5.strokeWeight(20);\n\n    p5.stroke(\"#72ff98\");\n    p5.line(300, 300, 400, 400);\n\n    p5.stroke(\"#9bffb6\");\n    p5.line(320, 300, 420, 400);\n    let easing = 0.05;\n\n    if (b >= 300) {\n      speed = -1 * easing;\n    }\n    if (b === 250) {\n      speed = 1 * easing;\n    }\n    b = b + speed;\n  };\n */\n\n/* Old shit\n\n let setup = (p5, canvasParentRef) => {\n    globalWidth = p5.windowWidth * 0.4;\n    globalHeight = p5.windowHeight * 0.7;\n\n    let parent = p5.createCanvas(globalWidth, globalHeight).parent(\"IRC\");\n\n    p5.background(\"#e3dac9\");\n\n    //No stroke around circle\n    p5.noStroke();\n\n    //Circle ( x, y, width, height)\n    p5.fill(p5.color(\"#72ff98\"));\n    //p5.ellipse(100, 100, 100, 100);\n\n    var xa = 0;\n\n    /* while (xa < 500) {\n      p5.ellipse(xa, 200, 25, 25);\n      xa = xa + 50;\n    }\n\n    for (let i = 0; i < 20; i++) {\n      //p5.ellipse(xa, 200, 100, 100);\n      //xa = xa + 150;\n    }\n\n    async function andrew() {\n      await sleep(1000);\n    }\n\n    console.log(\"length: \" + nodeLink.length);\n\n    for (let j = 0; j < nodeLink.length; j++) {\n      p5.ellipse(nodeLink[j].x, nodeLink[j].y, 100, 100);\n      console.log(\"Width: \" + p5.windowWidth);\n    }\n\n    p5.rect(0, 0, 55, 55, 20);\n    p5.rect(0, globalHeight, 55, 55, 20);\n    p5.rect(globalWidth, 0, 55, 55, 20);\n    p5.rect(globalWidth, globalHeight, 55, 55, 20);\n\n    // tester(p5, x, y);\n  };\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  const [x, setX] = useState(100);\n  const [y, setY] = useState(100);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeValue, setNodeValue] = useState(27);\n\n  const testarray = [1, 2, 3, 4, 5];\n\n  let draw = (p5) => {};\n\n  function tester(p5, x, y) {\n    console.log(\"CALLED!!!\");\n    // p5.ellipse(x, y, 100, 100);\n  }\n\n  const [spaceVals, setSpaceVals] = useState([]);\n\n  const initialArray = useEffect(() => {\n    setNodeLink([\n      ...nodeLink,\n      {\n        needsNewLine,\n        nodeID,\n        nodeValue,\n        x,\n        y,\n      },\n    ]);\n\n    console.log(nodeID);\n  }, [changer]);\n\n  const run10times = useEffect(() => {\n    if (changer < 9) {\n      //ellipse(x, y, 20, 20);\n\n      setChanger(changer + 1);\n      setNodeValue(nodeValue + 1);\n      setNodeID(nodeID + 1);\n\n      if (x < 100) {\n        setX(x + 100);\n      } else {\n        setX(1000);\n      }\n      setY(Math.floor(Math.random() * 500));\n    }\n  }, [nodeLink]);*/\n\n//Old centering code\n\n/*\n  let centerNode = null;\n    let centerNode2 = null;\n    let closestToZeroX = 0;\n    let closestToZeroY = 0;\n    let a;\n    let b;\n    for (let i = 0; i < nodeLinkHook.length; i++) {\n      a = nodeLinkHook[i].x - globalWidth / 2;\n      b = nodeLinkHook[i].y - (globalHeight * 0.8) / 2;\n      console.log(a);\n\n      if (closestToZeroX === 0) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      } else if (a > 0 && a <= Math.abs(closestToZeroX)) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      } else if (a < 0 && -a < Math.abs(closestToZeroX)) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      }\n\n      if (closestToZeroY === 0) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      } else if (b > 0 && b <= Math.abs(closestToZeroY)) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      } else if (b < 0 && -b < Math.abs(closestToZeroY)) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      }\n    }\n\n\n\n    let centerDecider = null;\n\n    if (centerNode.x + centerNode.y > centerNode2.x + centerNode2.y) {\n      centerDecider = centerNode;\n    } else {\n      centerDecider = centerNode2;\n    }\n\n    console.log(\"Center value: \" + centerNode.nodeValue);\n\n\n      p5.fill(p5.color(\"orange\"));\n    p5.rect(0, 0, 100, 100);\n\n    p5.fill(p5.color(\"white\")).text(centerNode.nodeValue, 0, 50);\n\n    p5.fill(p5.color(\"red\"));\n    p5.ellipse(centerNode.x, centerNode.y, centerNode.r, centerNode.r);\n    p5.fill(p5.color(\"white\")).text(\n      centerNode.nodeValue,\n      centerNode.x - centerNode.r / 4,\n      centerNode.y + centerNode.r / 6\n    );\n\n    p5.fill(p5.color(\"purple\"));\n    p5.ellipse(\n      centerDecider.x,\n      centerDecider.y,\n      centerDecider.r,\n      centerDecider.r\n    );\n    p5.fill(p5.color(\"white\")).text(\n      centerDecider.nodeValue,\n      centerDecider.x - centerDecider.r / 4,\n      centerDecider.y + centerDecider.r / 6\n    );\n\n\n    );*/\n\n//Old Connections\n\n/**\n     * let distance;\n    let smallest = 9999;\n    let nodeToAdd = null;\n    let distanceToAdd = 0;\n    let prevNodes = [];\n    let prevDist = [];\n    let doneBefore = false;\n    //trying dist;\n\n    for (let w = 0; w < numConnections - 1; w++) {\n      smallest = 9999;\n      nodeToAdd = null;\n      doneBefore = false;\n\n      for (let k = 0; k < nodeLinkHook.length; k++) {\n        //Makes sure it is not comparing against itself\n        if (k != nodeIndex) {\n          distance = parseInt(\n            p5.dist(\n              nodeLinkHook[nodeIndex].x,\n              nodeLinkHook[nodeIndex].y,\n              nodeLinkHook[k].x,\n              nodeLinkHook[k].y\n            )\n          );\n\n          //Checks if distance has been done before\n          for (let m = 0; m < prevDist.length; m++) {\n            if (distance == prevDist[m]) {\n              doneBefore = true;\n            }\n          }\n\n          //Sets smallest if not done before\n          if (Math.abs(distance) < smallest && !doneBefore) {\n            smallest = Math.abs(distance);\n            nodeToAdd = nodeLinkHook[k];\n            distanceToAdd = distance;\n          }\n        } else {\n          console.log(\"same\");\n        }\n        //End of loop\n        doneBefore = false;\n      }\n      prevNodes.push(nodeToAdd);\n      prevDist.push(distanceToAdd);\n    }\n\n    return prevNodes;\n     * \n     * \n     * * */\n","import styled from \"styled-components\";\nimport { media } from \"../../Shared\";\n\nconst ElementWrapper = styled.div`\n  width: 10vh;\n  height: 10vh;\n\n  border-radius: 3vh;\n  background-color: #6dd3ce;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  z-index: 2;\n  position: relative;\n\n  color: white;\n\n  p {\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    border-radius: 2vh;\n    p {\n      font-size: 4vh;\n    }\n  }\n`;\n\nconst ElementBackground = styled.div`\n  position: relative;\n  width: 10vh;\n  height: 10vh;\n  border-radius: 3vh;\n  background-color: #63c4bf;\n\n  z-index: 1;\n  margin-left: 2vh;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    margin-left: 1vh;\n    border-radius: 2vh;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n\n  margin-right: 4vh;\n  ${media.mobile} {\n    margin: 1vh;\n  }\n\n  animation: bob 3s infinite ease;\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n`;\n\nexport default function ArrayElement(props) {\n  return (\n    <Container>\n      <ElementWrapper>\n        <p>{props.value}</p>\n      </ElementWrapper>\n      <ElementBackground />\n    </Container>\n  );\n}\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media, Item } from \"../../Shared\";\nimport ArrayElement from \"./ArrayElement\";\nimport React, { useState, useEffect } from \"react\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  /*height: auto;*/\n\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n\n  s ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: flex-start;\n  justify-content: space-evenly;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n\n  height: auto;\n\n  margin-left: 10%;\n  width: 100vw;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  height: auto;\n  margin-right: 10%;\n  width: 100vw;\n  margin-top: 10vh;\n\n  justify-content: center;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    height: 60vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: auto;\n  height: 10vh;\n  background-color: #78fc59;\n  border-radius: 4vh;\n  margin-left: 1vw;\n  margin-right: 1vw;\n  align-items: center;\n  align-self: center;\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    height: 6vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst ArrayHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  background-color: transparent;\n  height: auto;\n  width: 38vw;\n  padding-top: 2vh;\n\n  align-items: center;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst ControlHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-auto-rows: 1fr;\n  position: relative;\n  height: 12vh;\n  margin-bottom: 2vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  margin-top: 2vh;\n  background-color: transparent;\n  border-radius: 2vh;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 0vh;\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst StaticPosition = styled.div`\n  position: fixed;\n  margin-top: 40vh;\n  ${media.mobile} {\n    margin-top: inherit;\n    position: relative;\n  }\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction ArrayVis() {\n  const [arrayLink, setArrayLink] = useState([]);\n  const [positionLink, setPositionLink] = useState([]);\n  const [arrayValue, setArrayValue] = useState(10);\n  const [arrayPosition, setArrayPosition] = useState(0);\n  const [arrayRotation, setArrayRotation] = useState(\"\");\n  const [arrayMovement, setArrayMovement] = useState(\"\");\n  const [indexToChange, setIndexToChange] = useState(null);\n  const [arrayID, setArrayID] = useState(0);\n  const [shouldChange, setShouldChange] = useState(0);\n\n  //For Links Between\n\n  const movementMap = [\n    \"translate(0vh, -4vh) rotate(20deg)\",\n    \"translate(-6vh, -4vh) rotate(-20deg)\",\n    /* \"translate(6vh, -4vh) rotate(-20deg)\",\n    \"translate(5vh, -4vh) rotate(200deg)\",*/\n  ];\n\n  //1 and 3 are the same\n  const arrayMovementMap = [\"translate(5vh, 0vh) \", \" translate(-5vh, 0vh) \"];\n\n  //Will run through 3 possible states\n  const [movementIterator, setMovementIterator] = useState(0);\n  const [transform, setTransform] = useState(movementMap[movementIterator]);\n\n  const [arrayTransform, setArrayTransform] = useState(\n    arrayMovementMap[movementIterator]\n  );\n\n  const [changer, setChanger] = useState(0);\n\n  const initialArray = useEffect(() => {\n    setArrayLink([\n      ...arrayLink,\n      {\n        arrayValue,\n        arrayID,\n      },\n    ]);\n\n    setPositionLink([\n      ...positionLink,\n      {\n        arrayValue,\n        arrayID,\n      },\n    ]);\n\n    setArrayID(arrayID + 1);\n    setMovementIterator(1);\n  }, [changer]);\n\n  const run5times = useEffect(() => {\n    if (changer == 0) {\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    }\n    if (changer < 4) {\n      setChanger(changer + 1);\n      setArrayValue(arrayValue + 1);\n    }\n  }, [arrayLink]);\n\n  function handleUpdateElement() {\n    console.log(\"Workin!\");\n    setIndexToChange(\n      //Finds where the ID is the same as the entered position\n      arrayLink.findIndex((array) => array.arrayID == arrayPosition)\n    );\n\n    console.log(\"ID: \" + arrayLink[3].arrayID);\n\n    setShouldChange(shouldChange + 1);\n  }\n\n  const changeArray = useEffect(() => {\n    console.log(\"To change: \" + indexToChange);\n    console.log(\"Position: : \" + arrayPosition);\n    //Stops from accessing undefined\n    //Should change means that it is called whenever button pressed, cause ID can be same as before\n    if (shouldChange > 0 && typeof arrayLink[indexToChange] !== \"undefined\") {\n      handleUpdate(indexToChange);\n    }\n  }, [shouldChange]);\n\n  const handleUpdate = (index) => {\n    let newArrayLink = [...arrayLink];\n    newArrayLink[index].arrayValue = arrayValue;\n    setArrayLink(newArrayLink);\n    //setArrayLink({ ...arrayLink, [array.arrayValue]: arrayValue });\n  };\n\n  return (\n    <AlgorithmsWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/datastructures\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>array</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description={\n              <div>\n                <p>\n                  arrays are a way of storing data. <br />\n                  <br />\n                  they are made up of elements, which can hold a piece of data,\n                  like a number, or even another array. <br />\n                  <br />\n                  elements are stored right next to each other in computer\n                  memory (contiguity), which means going from one element to the\n                  next is extremely fast.\n                  <br />\n                  <br />\n                  however, this also means that inserting/deleting elements\n                  cannot be done, as elements are already right next to each\n                  other.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description={\n              <div>\n                <p>\n                  arrays are best used in applications where data will often be\n                  accessed, as accessing an element is inexpensive.\n                  <br />\n                  <br />\n                  however, this comes at the cost of a greater\n                  insertion/deletion cost than something like a linked list.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#FFA5B2\"\n            title=\"costs\"\n            description={\n              <div>\n                <p>\n                  access element: O(1)\n                  <br />\n                  <br />\n                  search: O(n)\n                  <br />\n                  <br />\n                  insert data: O(n)\n                  <br />\n                  <br />\n                  delete data: O(n)\n                </p>\n              </div>\n            }\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          {/*   <Array value={10} />\n          <ArrayLine\n            rotation={\"translate(-2vh, 1vh) rotate(-20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={20} movement={\"5vw\"} />\n          <ArrayLine\n            rotation={\"translate(-3vh, 0vh) rotate(20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={30} movement={\"-5vw\"} />*/}\n          <StaticPosition>\n            <ArrayHolder>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <h1>Value:</h1>\n                <ArrayPosHolder>\n                  {arrayLink.map(({ arrayValue, arrayID }) => (\n                    <React.Fragment>\n                      <ArrayElement\n                        value={arrayValue}\n                        id={arrayID}\n                        movement={arrayTransform}\n                      />\n                    </React.Fragment>\n                  ))}\n                </ArrayPosHolder>\n                <h1>Position:</h1>\n                <ArrayPosHolder>\n                  {positionLink.map(({ arrayValue, arrayID }) => (\n                    <React.Fragment>\n                      <ArrayElement\n                        value={arrayID}\n                        id={arrayID}\n                        movement={arrayTransform}\n                      />\n                    </React.Fragment>\n                  ))}\n                </ArrayPosHolder>\n              </div>\n            </ArrayHolder>\n\n            <ControlHolder>\n              <InputValue\n                placeholder=\"value\"\n                onChange={(event) => setArrayValue(event.target.value)}\n              />\n              <InputValue\n                placeholder=\"position\"\n                onChange={(event) => setArrayPosition(event.target.value)}\n              />\n              <AddButton onClick={() => handleUpdateElement()}>\n                <p>+</p>\n              </AddButton>\n            </ControlHolder>\n          </StaticPosition>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default ArrayVis;\n","import styled from \"styled-components\";\nimport { media } from \"../../Shared\";\n\nconst ElementWrapper = styled.div`\n  width: 10vh;\n\n  height: 10vh;\n  margin-top: 1vh;\n\n  border-radius: 3vh;\n  background-color: #7c7c7c;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  z-index: 2;\n  position: relative;\n\n  color: white;\n\n  p {\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    border-radius: 2vh;\n    p {\n      font-size: 4vh;\n    }\n  }\n`;\n\nconst ElementBackground = styled.div`\n  position: relative;\n  width: 10vh;\n  height: 10vh;\n  border-radius: 3vh;\n  background-color: #a8a8a8;\n  margin-top: 1vh;\n\n  z-index: 1;\n  margin-left: 2vh;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    margin-left: 1vh;\n    border-radius: 2vh;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n\n  margin-right: 4vh;\n  ${media.mobile} {\n    margin: 1vh;\n  }\n\n  animation: bob 3s infinite ease;\n\n  p {\n    color: white;\n    font-size: 3vh;\n    font-weight: bold;\n    padding: 0px;\n    margin: 0px;\n  }\n\n  h4 {\n    color: white;\n    font-size: 3vh;\n    font-weight: bold;\n    padding: 0px;\n    margin: 0px;\n    ${media.mobile} {\n      font-size: calc(2vh + 1vw);\n    }\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n`;\n\nexport default function ArrayElement(props) {\n  console.log(props.value);\n  return (\n    <Container>\n      <p>{props.id}</p>\n\n      <h4 style={{ color: props.textColour, marginLeft: \"1vh\" }}>\n        {props.elementState}\n      </h4>\n\n      <ElementWrapper style={{ backgroundImage: props.foreground }}>\n        {props.textInsert}\n      </ElementWrapper>\n      <ElementBackground style={{ backgroundImage: props.background }} />\n    </Container>\n  );\n}\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media, Item } from \"../../Shared\";\nimport ArrayElement from \"./ArrayElement\";\nimport React, { useState, useEffect } from \"react\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: flex-start;\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-right: 10%;\n  width: 100vw;\n\n  justify-content: center;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    height: 60vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: auto;\n  height: 10vh;\n  background-color: #78fc59;\n  border-radius: 4vw;\n  margin-left: 1vh;\n  margin-right: 1vh;\n  align-items: center;\n  align-self: center;\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    height: 6vh;\n    border-radius: 2vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst ArrayHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  background-color: transparent;\n  height: auto;\n  width: 38vw;\n  padding-top: 2vh;\n\n  align-items: center;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst ControlHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-auto-rows: 1fr;\n  position: relative;\n  height: 12vh;\n  margin-bottom: 2vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  margin-top: 2vh;\n  background-color: transparent;\n  border-radius: 2vh;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: transparent;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nconst StaticPosition = styled.div`\n  position: fixed;\n  margin-top: 60vh;\n  ${media.mobile} {\n    margin-top: inherit;\n    position: relative;\n  }\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction BinarySearch() {\n  const [arrayLink, setArrayLink] = useState([]);\n  const [positionLink, setPositionLink] = useState([]);\n  const [arrayValue, setArrayValue] = useState(10);\n  const [arrayPosition, setArrayPosition] = useState(0);\n  const [indexToChange, setIndexToChange] = useState(null);\n  const [arrayID, setArrayID] = useState(0);\n  const [shouldChange, setShouldChange] = useState(0);\n\n  const [foreground, setForeground] = useState(null);\n  const [background, setBackground] = useState(null);\n  const [elementState, setElementState] = useState(null);\n  const [elementTextColour, setElementTextColour] = useState(null);\n\n  const [found, setFound] = useState(null);\n\n  //For Links Between\n\n  const movementMap = [\n    \"translate(0vh, -4vh) rotate(20deg)\",\n    \"translate(-6vh, -4vh) rotate(-20deg)\",\n    /* \"translate(6vh, -4vh) rotate(-20deg)\",\n    \"translate(5vh, -4vh) rotate(200deg)\",*/\n  ];\n\n  //1 and 3 are the same\n  const arrayMovementMap = [\"translate(5vh, 0vh) \", \" translate(-5vh, 0vh) \"];\n\n  //Will run through 3 possible states\n  const [movementIterator, setMovementIterator] = useState(0);\n  const [transform, setTransform] = useState(movementMap[movementIterator]);\n\n  const [arrayTransform, setArrayTransform] = useState(\n    arrayMovementMap[movementIterator]\n  );\n\n  //For binary search:\n  /*const [middle, setMiddle] = useState(null);\n  const [low, setLow] = useState(null);\n  const [mid, setMid] = useState(null);\n  const [high, setHigh] = useState(null);*/\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  async function binarySearchFunction(array, low, high, target) {\n    if (high >= low) {\n      let mid = Math.floor(low + (high - low) / 2);\n\n      updateColours(low, mid, high);\n\n      if (array[mid].arrayValue == target) {\n        setFound(\"found at index \" + mid);\n        return;\n      }\n\n      if (array[mid].arrayValue > target) {\n        setFound(\n          array[mid].arrayValue + \" > \" + target + \" must be in first half\"\n        );\n        await sleep(4000);\n        return binarySearchFunction(array, low, mid - 1, target);\n      }\n\n      setFound(\n        array[mid].arrayValue + \" < \" + target + \", must be in second half\"\n      );\n      await sleep(4000);\n      return binarySearchFunction(array, mid + 1, high, target);\n    }\n    setFound(\"not found\");\n    return;\n  }\n\n  function updateColours(low, mid, high) {\n    let newArrayLink = [...arrayLink];\n\n    //Low\n    newArrayLink[low].foreground =\n      \"linear-gradient(to  right, #44BAB5, #44BAB5)\";\n    newArrayLink[low].background =\n      \"linear-gradient(to  right, #2D9D98, #2D9D98)\";\n    newArrayLink[low].elementState = \"low \";\n    newArrayLink[low].elementTextColour = \"#2D9D98\";\n\n    //Mid\n    newArrayLink[mid].foreground =\n      \"linear-gradient(to  right, #5ECC44, #5ECC44)\";\n    newArrayLink[mid].background =\n      \"linear-gradient(to  right, #4AA734, #4AA734)\";\n    newArrayLink[mid].elementState = \"mid \";\n    newArrayLink[mid].elementTextColour = \"#4AA734\";\n\n    //High\n    newArrayLink[high].foreground =\n      \"linear-gradient(to  right, #FF3F1A, #FF3F1A)\";\n    newArrayLink[high].background =\n      \"linear-gradient(to  right, #CB391E, #CB391E)\";\n    newArrayLink[high].elementState = \"high \";\n    newArrayLink[high].elementTextColour = \"#CB391E\";\n\n    if (low === mid) {\n      newArrayLink[mid].foreground =\n        \"linear-gradient(to right, #44BAB5 0%,#44BAB5 50%,#000000 50%,#5ECC44 50%,#5ECC44 100%)\";\n      newArrayLink[low].elementState = \" \";\n      newArrayLink[mid].elementState = \" \";\n      newArrayLink[high].elementTextColour = \"white\";\n    }\n\n    if (mid === high) {\n      newArrayLink[mid].foreground =\n        \"linear-gradient(to right, green 0%,green 50%,#000000 50%,red 50%,red 100%)\";\n      newArrayLink[high].elementState = \" \";\n      newArrayLink[mid].elementState = \" \";\n      newArrayLink[high].elementTextColour = \"white\";\n    }\n\n    if (low === high) {\n      newArrayLink[low].foreground =\n        \"linear-gradient(to right, blue 0%,blue 50%,#000000 50%,red 50%,red 100%)\";\n      newArrayLink[high].elementState = \" \";\n      newArrayLink[low].elementState = \" \";\n      newArrayLink[high].elementTextColour = \"white\";\n    }\n\n    if (low === high && low === mid) {\n      newArrayLink[mid].foreground =\n        \"linear-gradient(to right, #44BAB5 0%,#44BAB5 33%,#000000 33%,#5ECC44 33%,#5ECC44 66%, #000000 66%, #FF3F1A 66%,#FF3F1A 100%)\";\n      newArrayLink[high].elementState = \"\";\n      newArrayLink[low].elementState = \"\";\n      newArrayLink[mid].elementState = \"\";\n      newArrayLink[high].elementTextColour = \"gold\";\n    }\n\n    let i;\n    for (i = 0; i < 10; i++) {\n      if (i !== low && i !== mid && i !== high) {\n        if (i > low && i < high) {\n          newArrayLink[i].foreground =\n            \"linear-gradient(to  right, #B492BE, #B492BE)\";\n          newArrayLink[i].background =\n            \"linear-gradient(to  right, #897390, #897390)\";\n          newArrayLink[i].elementState = \"\";\n          newArrayLink[i].elementTextColour = \"\";\n        } else {\n          newArrayLink[i].foreground =\n            \"linear-gradient(to  right, #7c7c7c, #7c7c7c)\";\n          newArrayLink[i].background =\n            \"linear-gradient(to  right, #a8a8a8, #a8a8a8)\";\n          newArrayLink[i].elementState = \"\";\n          newArrayLink[i].elementTextColour = \"\";\n        }\n      }\n    }\n\n    setArrayLink(newArrayLink);\n    //setArrayLink({ ...arrayLink, [array.arrayValue]: arrayValue });\n  }\n\n  function changeArrayFromInput(value, id) {\n    console.log(id);\n    let newArrayLink = [...arrayLink];\n    newArrayLink[id].arrayValue = value;\n    setArrayLink(newArrayLink);\n    console.log((newArrayLink[id].arrayValue = value));\n  }\n\n  const [changer, setChanger] = useState(0);\n\n  const initialArray = useEffect(() => {\n    setArrayLink([\n      ...arrayLink,\n      {\n        arrayValue,\n        arrayID,\n        foreground,\n        background,\n        elementState,\n        elementTextColour,\n      },\n    ]);\n    setArrayID(arrayID + 1);\n  }, [changer]);\n\n  const run10times = useEffect(() => {\n    if (changer == 0) {\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    }\n    if (changer < 9) {\n      setChanger(changer + 1);\n      setArrayValue(arrayValue + 1);\n    }\n  }, [arrayLink]);\n\n  return (\n    <AlgorithmsWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/algorithms\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>binary search</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description={\n              <div>\n                <p>\n                  binary search is a simple search algorithm for sorted arrays{\" \"}\n                  <br />\n                  <br />\n                  it works by first checking the value at the middle of the\n                  array. if this value is greater than the value that it is\n                  searching for, this must mean that the target value is in the\n                  first half of the array.\n                  <br />\n                  <br />\n                  if it is smaller than the value it is searching for, then the\n                  target value must be in the second half of the array.\n                  <br />\n                  <br />\n                  then, the process is repeated for whichever half of the array\n                  is chosen, and the array continues being split in half until\n                  the value is found.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description={\n              <div>\n                <p>\n                  while this search algorithm is relatively easy to understand\n                  and implement, it only works if the array is sorted.\n                  otherwise, it will not know which half of the array to look\n                  in.\n                  <br />\n                  <br />\n                  therefore, it should only be used applications where data is\n                  sorted. this could be in something like a library catalogue\n                  where books are sorted in id or name order.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#FFA5B2\"\n            title=\"cost\"\n            description={\n              <div>\n                <p>\n                  binary search: O(log n)\n                  <br />\n                  <br />\n                  why? every iteration, the number of elements being looked at\n                  is halved.\n                </p>\n              </div>\n            }\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          {/*   <Array value={10} />\n          <ArrayLine\n            rotation={\"translate(-2vh, 1vh) rotate(-20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={20} movement={\"5vw\"} />\n          <ArrayLine\n            rotation={\"translate(-3vh, 0vh) rotate(20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={30} movement={\"-5vw\"} />*/}\n          <StaticPosition>\n            <ArrayHolder>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <h1>{found}</h1>\n\n                <ArrayPosHolder>\n                  {arrayLink.map(\n                    ({\n                      arrayValue,\n                      arrayID,\n                      foreground,\n                      background,\n                      elementState,\n                      elementTextColour,\n                    }) => (\n                      <React.Fragment>\n                        <ArrayElement\n                          value={arrayValue}\n                          id={arrayID}\n                          movement={arrayTransform}\n                          foreground={foreground}\n                          background={background}\n                          elementState={elementState}\n                          textColour={elementTextColour}\n                          textInsert={\n                            <TextInsert\n                              placeholder={arrayValue}\n                              onChange={(event) =>\n                                changeArrayFromInput(\n                                  event.target.value,\n                                  arrayID\n                                )\n                              }\n                            ></TextInsert>\n                          }\n                        />\n                      </React.Fragment>\n                    )\n                  )}\n                </ArrayPosHolder>\n              </div>\n            </ArrayHolder>\n\n            <ControlHolder>\n              <InputValue\n                placeholder=\"find\"\n                onChange={(event) => setArrayValue(event.target.value)}\n              />\n\n              <AddButton\n                onClick={() =>\n                  binarySearchFunction(arrayLink, 0, 9, arrayValue)\n                }\n              >\n                <p>+</p>\n              </AddButton>\n            </ControlHolder>\n          </StaticPosition>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default BinarySearch;\n","import styled from \"styled-components\";\nimport { media } from \"../../Shared\";\n\nconst ElementWrapper = styled.div`\n  width: 10vh;\n\n  height: 10vh;\n  margin-top: 1vh;\n\n  border-radius: 3vh;\n  background-color: #7c7c7c;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  z-index: 2;\n  position: relative;\n\n  color: white;\n\n  p {\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    border-radius: 2vh;\n    p {\n      font-size: 4vh;\n    }\n  }\n`;\n\nconst ElementBackground = styled.div`\n  position: relative;\n  width: 10vh;\n  height: 10vh;\n  border-radius: 3vh;\n  background-color: #a8a8a8;\n  margin-top: 1vh;\n\n  z-index: 1;\n  margin-left: 2vh;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    margin-left: 1vh;\n    border-radius: 2vh;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n\n  margin-right: 4vh;\n  ${media.mobile} {\n    margin: 1vh;\n  }\n\n  animation: bob 3s infinite ease;\n\n  p {\n    color: white;\n    font-size: 3vh;\n    font-weight: bold;\n    padding: 0px;\n    margin: 0px;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n`;\n\nexport default function ArrayElement(props) {\n  return (\n    <Container>\n      <p>{props.id}</p>\n      <p style={{ color: props.textColour, marginLeft: \"1vh\" }}>\n        {\" \"}\n        {props.elementState}\n      </p>\n      <ElementWrapper style={{ backgroundImage: props.foreground }}>\n        {props.textInsert}\n      </ElementWrapper>\n      <ElementBackground style={{ backgroundImage: props.background }} />\n    </Container>\n  );\n}\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media, Item } from \"../../Shared\";\nimport ArrayElement from \"./ArrayElement\";\nimport React, { useState, useEffect } from \"react\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: flex-start;\n\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n\n  height: auto;\n  margin-right: 10%;\n  width: 100vw;\n\n  justify-content: center;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    height: 60vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: auto;\n  min-width: 10vw;\n  height: 10vh;\n  background-color: #ffe26a;\n  border-radius: 4vh;\n  margin-left: 1vw;\n  margin-right: 1vw;\n  align-items: center;\n  align-self: center;\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    height: 6vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst ArrayHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  background-color: transparent;\n  height: auto;\n  width: 38vw;\n  padding-top: 2vh;\n\n  align-items: center;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst ControlHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: 1fr;\n  position: relative;\n  height: 12vh;\n  margin-bottom: 2vh;\n  align-items: center;\n  justify-content: center;\n  max-width: 90vw;\n\n  z-index: 0;\n  margin-top: 2vh;\n  background-color: transparent;\n  border-radius: 2vh;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: transparent;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nconst StaticPosition = styled.div`\n  position: fixed;\n  margin-top: 60vh;\n  ${media.mobile} {\n    margin-top: inherit;\n    position: relative;\n  }\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction QuickSort() {\n  const [arrayLink, setArrayLink] = useState([]);\n  const [positionLink, setPositionLink] = useState([]);\n  const [arrayValue, setArrayValue] = useState(\n    Math.floor(Math.random() * 99) + 1\n  );\n  const [arrayPosition, setArrayPosition] = useState(0);\n  const [indexToChange, setIndexToChange] = useState(null);\n  const [arrayID, setArrayID] = useState(0);\n  const [shouldChange, setShouldChange] = useState(0);\n\n  const [foreground, setForeground] = useState(null);\n  const [background, setBackground] = useState(null);\n  const [elementState, setElementState] = useState(null);\n  const [elementTextColour, setElementTextColour] = useState(null);\n\n  const [found, setFound] = useState(null);\n\n  //For Links Between\n\n  const movementMap = [\n    \"translate(0vh, -4vh) rotate(20deg)\",\n    \"translate(-6vh, -4vh) rotate(-20deg)\",\n    /* \"translate(6vh, -4vh) rotate(-20deg)\",\n    \"translate(5vh, -4vh) rotate(200deg)\",*/\n  ];\n\n  //1 and 3 are the same\n  const arrayMovementMap = [\"translate(5vh, 0vh) \", \" translate(-5vh, 0vh) \"];\n\n  //Will run through 3 possible states\n  const [movementIterator, setMovementIterator] = useState(0);\n  const [transform, setTransform] = useState(movementMap[movementIterator]);\n\n  const [arrayTransform, setArrayTransform] = useState(\n    arrayMovementMap[movementIterator]\n  );\n\n  async function quickSortFunction(low, high) {\n    if (low < high) {\n      let pi = await partition(low, high);\n      console.log(\"Pi: \" + pi);\n\n      quickSortFunction(low, pi - 1);\n\n      await sleep(2000);\n\n      quickSortFunction(pi + 1, high);\n      await sleep(2000);\n    }\n\n    console.log(\"finished!\");\n  }\n\n  async function partition(low, high) {\n    let pivot = arrayLink[high];\n\n    let i = low - 1;\n    let j;\n    console.log(arrayLink[low].arrayValue);\n    console.log(arrayLink[high].arrayValue);\n\n    for (j = low; j <= high - 1; j++) {\n      updateColours(i, j, high);\n      // If current element is smaller than the pivot\n      setFound(\"j is not smaller than \" + pivot.arrayValue);\n\n      if (arrayLink[j].arrayValue < pivot.arrayValue) {\n        console.log(\"called!\");\n        i++; // increment index of smaller element\n        setFound(\"j is smaller than \" + pivot.arrayValue);\n        updateColours(i, j, high);\n\n        if (i == j) {\n          setFound(\n            \" j is smaller than \" +\n              pivot.arrayValue +\n              \", i and j will swap,\" +\n              \" \\n\\nbut i = j so nothing happens \"\n          );\n        } else {\n          setFound(\n            \"j is smaller than \" + pivot.arrayValue + \", i and j will swap\"\n          );\n        }\n        //Maybe need to swap here instead for colours\n        await swap(i, j);\n      }\n      await sleep(1500);\n    }\n\n    await sleep(2500);\n    setFound(\"pivot will swap with i + 1 \");\n    await swap(i + 1, high);\n    return Promise.resolve(i + 1);\n  }\n\n  async function updateColours(i, j, high) {\n    let newArrayLink = [...arrayLink];\n\n    console.log(\"j: \" + j);\n    newArrayLink[j].foreground = \"linear-gradient(to  right, #5ECC44, #5ECC44)\";\n    newArrayLink[j].background = \"linear-gradient(to  right, #4AA734, #4AA734)\";\n    newArrayLink[j].elementState = \"j \";\n    newArrayLink[j].elementTextColour = \"#4AA734\";\n\n    if (i >= 0) {\n      newArrayLink[i].foreground =\n        \"linear-gradient(to  right, #44BAB5, #44BAB5)\";\n      newArrayLink[i].background =\n        \"linear-gradient(to  right, #2D9D98, #2D9D98)\";\n      newArrayLink[i].elementState = \"i \";\n      newArrayLink[i].elementTextColour = \"#2D9D98\";\n    }\n    newArrayLink[high].foreground =\n      \"linear-gradient(to  right, #FF3F1A, #FF3F1A)\";\n    newArrayLink[high].background =\n      \"linear-gradient(to  right, #CB391E, #CB391E)\";\n    newArrayLink[high].elementState = \"pivot \";\n    newArrayLink[high].elementTextColour = \"#CB391E\";\n\n    let c;\n    for (c = 0; c < 10; c++) {\n      if (c !== i && c !== j && c !== high) {\n        if (c > i && c < high) {\n          newArrayLink[c].foreground =\n            \"linear-gradient(to  right, #B492BE, #B492BE)\";\n          newArrayLink[c].background =\n            \"linear-gradient(to  right, #897390, #897390)\";\n          newArrayLink[c].elementState = \"\";\n          newArrayLink[c].elementTextColour = \"\";\n        } else {\n          newArrayLink[c].foreground =\n            \"linear-gradient(to  right, #7c7c7c, #7c7c7c)\";\n          newArrayLink[c].background =\n            \"linear-gradient(to  right, #a8a8a8, #a8a8a8)\";\n          newArrayLink[c].elementState = \"\";\n          newArrayLink[c].elementTextColour = \"\";\n        }\n      }\n    }\n\n    setArrayLink(newArrayLink);\n    await sleep(2000);\n  }\n\n  async function swap(i, j) {\n    await sleep(1500);\n    let highlightColours = [...arrayLink];\n    highlightColours[i].foreground =\n      \"linear-gradient(to  right, #D059FC, #D059FC)\";\n    highlightColours[i].background =\n      \"linear-gradient(to  right, #BD08FF, #BD08FF)\";\n    highlightColours[j].foreground =\n      \"linear-gradient(to  right, #D059FC, #D059FC)\";\n    highlightColours[j].background =\n      \"linear-gradient(to  right, #BD08FF, #BD08FF)\";\n\n    setArrayLink(highlightColours);\n\n    await sleep(1500);\n\n    let temp = arrayLink[i].arrayValue;\n    let newArrayLink = [...arrayLink];\n\n    newArrayLink[i].arrayValue = newArrayLink[j].arrayValue;\n    newArrayLink[j].arrayValue = temp;\n\n    setArrayLink(newArrayLink);\n    await sleep(1500);\n  }\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function changeArrayFromInput(value, id) {\n    console.log(id);\n    let newArrayLink = [...arrayLink];\n    newArrayLink[id].arrayValue = value;\n    setArrayLink(newArrayLink);\n    console.log((newArrayLink[id].arrayValue = value));\n  }\n\n  const [changer, setChanger] = useState(0);\n\n  const initialArray = useEffect(() => {\n    setArrayLink([\n      ...arrayLink,\n      {\n        arrayValue,\n        arrayID,\n        foreground,\n        background,\n        elementState,\n        elementTextColour,\n      },\n    ]);\n    setArrayID(arrayID + 1);\n  }, [changer]);\n\n  const run10times = useEffect(() => {\n    if (changer < 9) {\n      setChanger(changer + 1);\n      setArrayValue(Math.floor(Math.random() * 99) + 1);\n    }\n  }, [arrayLink]);\n\n  return (\n    <AlgorithmsWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/algorithms\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>quick sort</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description={\n              <div>\n                <p>\n                  quick sort is an efficient sorting algorithm for arrays.\n                  <br />\n                  <br />\n                  it works by breaking the array into smaller and smaller sub\n                  arrays, and sorting these smaller arrays, then putting\n                  everything back together at the end.\n                  <br />\n                  <br />\n                  <h2>quick sort (low, high)</h2>\n                  if low is less than high, run partition.\n                  <br />\n                  <br />\n                  <div style={{ paddingLeft: \"2vw\" }}>\n                    <h2>partition (low, high)</h2>\n                    1. a pivot value is picked. in theory, this can be any\n                    element in the array. here, it is always the last, or\n                    'high'.\n                    <br />\n                    <br />\n                    2. two 'pointer' values, i and j, are given. here, i is\n                    given the value -1, and j is given the value 0.\n                    <br />\n                    <br />\n                    3. the value at position j is checked against the value at\n                    the pivot.\n                    <br />\n                    <br />\n                    if it is smaller than the value at the pivot, and j is\n                    incremented by 1, and nothing else happens\n                    <br />\n                    <br />\n                    if it is bigger than the value at the pivot, then i\n                    increments, and the values at i and j swap. then, j is\n                    incremented and the process continues\n                    <br />\n                    <br />\n                    4. once j reaches the element just before the pivot, then\n                    the value at the pivot and the i+1th element swap, and the\n                    i+1th element is returned.\n                    <br />\n                    <br />\n                  </div>\n                  <h2>quick sort pt. 2</h2>\n                  quick sort is recursively called twice. <br /> once, with low\n                  being the first element and high being i+1, where i+1 will\n                  keep getting lower with every call to partition\n                  <br />\n                  <br />\n                  quicksort(low, i+1)\n                  <br />\n                  <br />\n                  then with low being i+1 and high being the last element, where\n                  i+1 will keep getting higher with every call to partition\n                  <br />\n                  <br />\n                  quicksort(i+1, high)\n                  <br />\n                  <br />\n                  eventually, i+1, low, and high will all have the same value.\n                  the process will stop, as the array will be sorted!\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description={\n              <div>\n                <p style={{ textAlign: \"center\" }}>\n                  quick sort can be used any time data needs to be sorted. if\n                  the rough locations of where the different values of data\n                  might be are known, it can also be optimised through good\n                  choices of pivots.\n                  <br />\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#FFA5B2\"\n            title=\"cost\"\n            description={\n              <div>\n                <p style={{ textAlign: \"center\" }}>\n                  best case O(n)\n                  <br />\n                  <br />\n                  happens when the pivot value is the value closest to the\n                  average of the dataset\n                  <br />\n                  <br />\n                  worst case O(n^2)\n                  <br />\n                  <br />\n                  happens when pivot value is the max / min of the dataset\n                  <br />\n                  <br />\n                  stable: no\n                </p>\n              </div>\n            }\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          {/*   <Array value={10} />\n          <ArrayLine\n            rotation={\"translate(-2vh, 1vh) rotate(-20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={20} movement={\"5vw\"} />\n          <ArrayLine\n            rotation={\"translate(-3vh, 0vh) rotate(20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={30} movement={\"-5vw\"} />*/}\n          <StaticPosition>\n            {\" \"}\n            <ArrayHolder>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <h1 style={{ minHeight: \"8vh\", maxHeight: \"8vh\" }}>{found}</h1>\n                <ArrayPosHolder>\n                  {arrayLink.map(\n                    ({\n                      arrayValue,\n                      arrayID,\n                      foreground,\n                      background,\n                      elementState,\n                      elementTextColour,\n                    }) => (\n                      <React.Fragment>\n                        <ArrayElement\n                          value={arrayValue}\n                          id={arrayID}\n                          movement={arrayTransform}\n                          foreground={foreground}\n                          background={background}\n                          elementState={elementState}\n                          textColour={elementTextColour}\n                          textInsert={\n                            <TextInsert\n                              placeholder={arrayValue}\n                              onChange={(event) =>\n                                changeArrayFromInput(\n                                  event.target.value,\n                                  arrayID\n                                )\n                              }\n                            ></TextInsert>\n                          }\n                        />\n                      </React.Fragment>\n                    )\n                  )}\n                </ArrayPosHolder>\n              </div>\n            </ArrayHolder>\n            <ControlHolder>\n              <AddButton onClick={() => quickSortFunction(0, 9)}>\n                <p>sort</p>\n              </AddButton>\n            </ControlHolder>\n          </StaticPosition>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default QuickSort;\n","import styled from \"styled-components\";\nimport { media } from \"../../Shared\";\n\nconst ElementWrapper = styled.div`\n  width: 10vh;\n  height: 10vh;\n\n  border-radius: 50%;\n  background-color: #7c7c7c;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 2;\n  color: white;\n\n  p {\n    font-size: 5vh;\n    font-weight: bold;\n  }\n`;\n\nconst ElementBackground = styled.div`\n  position: relative;\n  width: 10vh;\n  height: 10vh;\n  border-radius: 50%;\n  background-color: #a8a8a8;\n\n  margin-left: 2vh;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n`;\n\nconst Container = styled.div`\n  background-color: purple;\n  display: grid;\n\n  margin-right: 4vh;\n  ${media.mobile} {\n    margin: 1vh;\n  }\n\n  animation: bob 3s infinite ease;\n\n  p {\n    color: white;\n    font-size: 3vh;\n    font-weight: bold;\n    padding: 0px;\n    margin: 0px;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n`;\n\nexport default function ArrayElement(props) {\n  console.log(props.value);\n  return (\n    <Container>\n      <p style={{ color: props.textColour, marginLeft: \"1vh\" }}></p>\n      <ElementWrapper style={{ backgroundImage: props.foreground }}>\n        <p> {props.value}</p>\n      </ElementWrapper>\n      <ElementBackground style={{ backgroundImage: props.background }} />\n    </Container>\n  );\n}\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media, Item } from \"../../Shared\";\nimport ArrayElement from \"./ArrayElement\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Sketch from \"react-p5\";\nimport p5 from \"p5\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: flex-start;\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n\n  margin-right: 10%;\n  min-width: 40vw;\n  max-width: 40vw;\n  min-height: 100%;\n  max-height: 100%;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    min-width: 100%;\n\n    min-height: 47vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: 30vw;\n  height: 10vh;\n  background-color: #ffe26a;\n  border-radius: 4vh;\n\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 6vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 60vw;\n    height: 6vh;\n    margin-top: 0vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst BFSHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n\n  background-color: red;\n  height: 45vh;\n  width: 38vw;\n  padding-top: 2vh;\n\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst BFSRow = styled.div`\n  display: grid;\n\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n`;\n\nconst ControlHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  min-height: 12vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  background-color: transparent;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: blue;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nconst SketchHolder = styled.div`\n  min-width: 40vw;\n  max-width: 40vw;\n  min-height: 70vh;\n  max-height: 70vh;\n  background-color: transparent;\n\n  ${media.mobile} {\n    min-width: 100vw;\n    max-width: 100vw;\n    max-height: 40vh;\n    min-height: 40vh;\n  }\n`;\n\nconst StaticPosition = styled.div`\n  position: fixed;\n  ${media.mobile} {\n    margin-top: inherit;\n    position: relative;\n  }\n`;\n\nconst Instruction = styled.h2`\n  position: absolute;\n\n  animation: bobandfade 8s ease;\n  animation-fill-mode: forwards;\n\n  @keyframes bobandfade {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    80% {\n      opacity: 1;\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n      opacity: 0;\n    }\n  }\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction BFS() {\n  const holderRef = useRef();\n  //Frame\n  const [globalWidth, setGlobalWidth] = useState(0);\n  const [globalHeight, setGlobalHeight] = useState(0);\n\n  //Nodes\n  const [nodeLink, setNodeLink] = useState([]);\n  const [nodeValue, setNodeValue] = useState(37);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeNext, setNodeNext] = useState(null);\n  const [nodeX, setNodeX] = useState(200);\n  const [nodeY, setNodeY] = useState(200);\n  const [looper, setLooper] = useState(0);\n  const [changer, setChanger] = useState(0);\n  const [matrixLoaded, setMatrixLoaded] = useState(false);\n  const [nodesSet, setNodesSet] = useState(false);\n\n  let secondLinks;\n\n  window.addEventListener(\"resize\", function () {\n    // your custom logic\n  });\n\n  const [adjacencyMatrix, setAdjacencyMatrix] = useState([\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ]);\n\n  const [centerNode, setCenterNode] = useState(null);\n  const [centerIndex, setCenterIndex] = useState(null);\n\n  const createNodes = useEffect(() => {\n    let screenWidth = holderRef.current.getBoundingClientRect().width;\n    let screenHeight = holderRef.current.getBoundingClientRect().height;\n    let nodeID = 0;\n    let nodeValue = 47;\n    let nodeLinkTemp = [];\n    let protection = 0;\n\n    console.log((\"FRAMEH:\", frameHeight + frameWidth) / 15);\n\n    let initialR;\n\n    if (window.innerWidth > 1000) {\n      initialR = 80;\n    } else {\n      initialR = 50;\n    }\n\n    while (nodeLinkTemp.length < 9) {\n      var Node = {\n        x: Math.floor(Math.random() * (screenWidth - 100) + 50),\n        y: Math.floor(Math.random() * (screenHeight - 100) + 50),\n        r: initialR,\n        nodeID: nodeID,\n        nodeValue: Math.floor(Math.random() * 99),\n        isCenter: false,\n        colour: \"#7CED61\",\n        bgColour: \"#61D944\",\n      };\n\n      //Ensures never overlaps\n      var isOverlapping = false;\n      for (let j = 0; j < nodeLinkTemp.length; j++) {\n        var otherNode = nodeLinkTemp[j];\n        var a = Node.x - otherNode.x;\n        var b = Node.y - otherNode.y;\n        var d = Math.sqrt(a * a + b * b);\n\n        if (window.innerWidth > 1000) {\n          if (d < (Node.r + otherNode.r) * 0.8) {\n            isOverlapping = true;\n          }\n        } else {\n          if (d < (Node.r + otherNode.r) * 0.7) {\n            isOverlapping = true;\n          }\n        }\n      }\n\n      //If it is good, push it\n      if (!isOverlapping) {\n        nodeLinkTemp.push(Node);\n        nodeID++;\n      }\n\n      protection++;\n      if (protection > 3000) {\n        console.log(\"too many circles\");\n        break;\n      }\n\n      setNodeLink(nodeLinkTemp);\n    }\n  }, [holderRef]);\n\n  const setNexts = useEffect(() => {\n    if (looper > 6) {\n      let temp = [...nodeLink];\n\n      for (let j = 0; j < nodeLink.length - 1; j++) {\n        temp[j].next = temp[j + 1];\n      }\n\n      setNodeLink(temp);\n    }\n  }, [looper]);\n\n  console.log(nodeLink);\n\n  const [frameWidth, setFrameWidth] = useState();\n  const [frameHeight, setFrameHeight] = useState();\n\n  const [isRendered, setIsRendered] = useState(0);\n\n  const a = useEffect(() => {\n    if (holderRef.current.getBoundingClientRect().width > 0) {\n      setFrameWidth(holderRef.current.getBoundingClientRect().width);\n      setFrameHeight(holderRef.current.getBoundingClientRect().height);\n\n      for (let i = 0; i < nodeLink.length; i++) {\n        nodeLink[i].r = (frameHeight + frameWidth) / 15;\n      }\n    }\n  }, [holderRef.current, isRendered]);\n\n  function setup(p5, canvasParentRef) {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n    setIsRendered(1);\n\n    p5.createCanvas(frameWidth, frameHeight).parent(canvasParentRef);\n\n    p5.background(\"#e3dac9\");\n\n    //center\n    let d;\n    let smallest = 999;\n    let currentCenter;\n    let currentCenterIndex;\n\n    //trying dist;\n    for (let k = 0; k < nodeLink.length; k++) {\n      d = parseInt(\n        p5.dist(\n          frameWidth / 2,\n          (frameHeight * 0.8) / 2,\n          nodeLink[k].x,\n          nodeLink[k].y\n        )\n      );\n\n      if (Math.abs(d) < smallest) {\n        smallest = Math.abs(d);\n        currentCenter = nodeLink[k];\n        currentCenterIndex = k;\n      }\n    }\n\n    setCenterNode(currentCenter);\n    setCenterIndex(currentCenterIndex);\n\n    linkMaker(p5, 3, currentCenterIndex);\n    linkMaker(p5, 2, secondLinks);\n  }\n\n  let centerNodeColourer = useEffect(() => {\n    if (centerNode !== null) {\n      centerNode.colour = \"#6BEBD8\";\n      centerNode.bgColour = \"#54CCBA\";\n    }\n  }, centerNode);\n\n  function linkMaker(p5, numConnections, nodeIndex) {\n    console.log(\"Linkmaker Clay\");\n\n    let distance;\n    let smallest = 9999;\n    let nodeToAdd = null;\n    let indexToAdd = 0;\n    let distanceToAdd = 0;\n    let prevNodes = [];\n    let prevDist = [];\n    let doneBefore = false;\n\n    let extraConnect;\n    //trying dist;\n\n    for (let w = 0; w < numConnections; w++) {\n      smallest = 9999;\n      nodeToAdd = null;\n      doneBefore = false;\n\n      for (let k = 0; k < nodeLink.length; k++) {\n        //Makes sure it is not comparing against itself\n        if (k != nodeIndex) {\n          distance = parseInt(\n            p5.dist(\n              nodeLink[nodeIndex].x,\n              nodeLink[nodeIndex].y,\n              nodeLink[k].x,\n              nodeLink[k].y\n            )\n          );\n\n          //Checks if distance has been done before\n          for (let m = 0; m < prevDist.length; m++) {\n            if (distance == prevDist[m]) {\n              doneBefore = true;\n            }\n          }\n\n          //Sets smallest if not done before\n          if (Math.abs(distance) < smallest && !doneBefore) {\n            smallest = Math.abs(distance);\n            nodeToAdd = nodeLink[k];\n            indexToAdd = k;\n            distanceToAdd = distance;\n          }\n        } else {\n          console.log(\"same\");\n        }\n        //End of loop\n        doneBefore = false;\n      }\n\n      prevNodes.push(nodeToAdd);\n\n      prevDist.push(distanceToAdd);\n\n      adjacencyMatrix[indexToAdd][nodeIndex] = 1;\n      adjacencyMatrix[nodeIndex][indexToAdd] = 1;\n\n      secondLinks = indexToAdd;\n    }\n\n    //return prevNodes;\n  }\n\n  function windowResized(p5) {\n    p5.resizeCanvas(\n      holderRef.current.getBoundingClientRect().width,\n      holderRef.current.getBoundingClientRect().height * 0.8\n    );\n  }\n\n  const [aniX, setAniX] = useState(0);\n\n  let draw = (p5) => {\n    p5.clear();\n    p5.noStroke();\n\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n    setNodesSet(true);\n\n    for (let m = 0; m < adjacencyMatrix.length; m++) {\n      for (let k = 0; k < adjacencyMatrix.length; k++) {\n        if (adjacencyMatrix[m][k] === 1 && adjacencyMatrix[k][m] == 1) {\n          p5.strokeWeight(20);\n\n          if (nodeLink[k] !== centerNode) {\n            p5.stroke(nodeLink[k].colour);\n          }\n\n          p5.line(nodeLink[m].x, nodeLink[m].y, nodeLink[k].x, nodeLink[k].y);\n          if (nodeLink[k] !== centerNode) {\n            p5.stroke(nodeLink[k].bgColour);\n          }\n          p5.line(\n            nodeLink[m].x + nodeLink[m].r / 6,\n            nodeLink[m].y,\n            nodeLink[k].x + nodeLink[m].r / 6,\n            nodeLink[k].y\n          );\n          p5.noStroke();\n        }\n      }\n    }\n\n    if (activeNode) {\n      p5.strokeWeight(20);\n      p5.stroke(\"#7CED61\");\n      p5.line(activeNode.x, activeNode.y, currX, currY);\n      p5.stroke(\"#61D944\");\n      p5.line(\n        activeNode.x + activeNode.r / 6,\n        activeNode.y,\n        currX + +activeNode.r / 6,\n        currY\n      );\n    }\n\n    p5.noStroke();\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      //Background Circle\n      p5.fill(p5.color(nodeLink[i].bgColour));\n      p5.ellipse(\n        nodeLink[i].x + nodeLink[i].r / 6,\n        nodeLink[i].y,\n        nodeLink[i].r,\n        nodeLink[i].r\n      );\n\n      //Foreground Circle\n      p5.fill(p5.color(nodeLink[i].colour));\n      p5.ellipse(nodeLink[i].x, nodeLink[i].y, nodeLink[i].r, nodeLink[i].r);\n    }\n\n    p5.fill(p5.color(centerNode.bgColour));\n    p5.ellipse(\n      centerNode.x + centerNode.r / 6,\n      centerNode.y,\n      centerNode.r,\n      centerNode.r\n    );\n\n    p5.fill(p5.color(centerNode.colour));\n    p5.ellipse(centerNode.x, centerNode.y, centerNode.r, centerNode.r);\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      p5.textSize(nodeLink[i].r / 2);\n      p5.fill(p5.color(\"white\")).text(\n        nodeLink[i].nodeID,\n        nodeLink[i].x - nodeLink[i].r / 4,\n        nodeLink[i].y + nodeLink[i].r / 6\n      );\n      p5.fill(p5.color(\"#72ff98\"));\n    }\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      nodeLink[i].r = (frameHeight + frameWidth) / 15;\n    }\n\n    //Creating Text\n    //linkMaker(p5, 3, 1);\n  };\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function mouseWheel(event) {\n    console.log(event);\n\n    if (event.mouseX > 0 && event.mouseY > 0) {\n      for (let m = 0; m < nodeLink.length; m++) {\n        nodeLink[m].y += event._mouseWheelDeltaY / 8;\n      }\n\n      setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n    }\n  }\n\n  function mousePressed(p5) {\n    //ISSUE: IF THERE IS A NODE INBETWEEN LINKED DOEST WORK\n    //FIX: CHECK IF LINKED, LOOP THRU IF NOT\n\n    currX = p5.mouseX;\n    currY = p5.mouseY;\n\n    //First, the closest two nodes will be found\n    let closestIndex;\n    let secondIndex;\n\n    let closestLimit = 0;\n\n    let closestDistance = 0;\n\n    let smallest = 9999;\n\n    for (let m = 0; m < nodeLink.length; m++) {\n      if (p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY) < smallest) {\n        smallest = p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY);\n        closestIndex = m;\n        closestDistance = smallest;\n      }\n    }\n\n    smallest = 9999;\n    let secondLimit = 0;\n    secondIndex = closestIndex;\n\n    for (let m = 0; m < nodeLink.length; m++) {\n      if (\n        p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY) < smallest &&\n        p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY) > closestDistance &&\n        adjacencyMatrix[m][closestIndex] == 1\n      ) {\n        smallest = p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY);\n        secondIndex = m;\n      }\n    }\n\n    let toStart = p5.dist(\n      nodeLink[closestIndex].x,\n      nodeLink[closestIndex].y,\n      currX,\n      currY\n    );\n\n    let toEnd = p5.dist(\n      nodeLink[secondIndex].x,\n      nodeLink[secondIndex].y,\n      currX,\n      currY\n    );\n\n    let lineLength = p5.dist(\n      nodeLink[closestIndex].x,\n      nodeLink[closestIndex].y,\n      nodeLink[secondIndex].x,\n      nodeLink[secondIndex].y\n    );\n\n    let buffer = 1;\n\n    if (\n      toStart + toEnd >= lineLength - buffer &&\n      toStart + toEnd <= lineLength + buffer\n    ) {\n      adjacencyMatrix[closestIndex][secondIndex] = 0;\n      adjacencyMatrix[secondIndex][closestIndex] = 0;\n    }\n  }\n\n  let activeNode = null;\n  let currIndex;\n  let currEnd;\n  let currX;\n  let currY;\n\n  function mouseDragged(p5) {\n    let distance;\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      distance = p5.dist(p5.mouseX, p5.mouseY, nodeLink[i].x, nodeLink[i].y);\n      if (distance < nodeLink[i].r && activeNode == null) {\n        nodeLink[i].active = true;\n        activeNode = nodeLink[i];\n\n        document.body.style.overflow = \"hidden\";\n\n        currIndex = i;\n      }\n    }\n\n    currX = p5.mouseX;\n    currY = p5.mouseY;\n\n    p5.noStroke();\n\n    //\n  }\n\n  function mouseReleased(p5) {\n    if (activeNode !== null) {\n      let distance;\n\n      for (let i = 0; i < nodeLink.length; i++) {\n        distance = p5.dist(p5.mouseX, p5.mouseY, nodeLink[i].x, nodeLink[i].y);\n        if (distance < nodeLink[i].r && i !== currIndex) {\n          adjacencyMatrix[i][currIndex] = 1;\n          adjacencyMatrix[currIndex][i] = 1;\n          currEnd = i;\n        }\n      }\n\n      activeNode = null;\n      currX = null;\n      currY = null;\n    }\n\n    document.body.style.overflow = \"auto\";\n  }\n\n  const [toFind, setToFind] = useState(0);\n\n  async function breadthFirstSearch() {\n    for (let m = 0; m < nodeLink.length; m++) {\n      if (nodeLink[m] !== centerNode) {\n        nodeLink[m].colour = \"#7CED61\";\n        nodeLink[m].bgColour = \"#61D944\";\n      } else {\n        nodeLink[m].colour = \"#6BEBD8\";\n        nodeLink[m].bgColour = \"#54CCBA\";\n      }\n    }\n\n    let s = centerIndex;\n\n    //Setting all visited to false\n    let visited = [];\n    for (let i = 0; i < nodeLink.length; i++) {\n      visited[i] = false;\n    }\n\n    //Creating the queue\n    let queue = [];\n\n    //creating parent\n    let parent = [];\n    for (let i = 0; i < nodeLink.length; i++) {\n      parent[i] = i;\n    }\n\n    //Marking initial as visited\n    visited[s] = true;\n\n    queue.push(s);\n    console.log(queue[0]);\n\n    while (queue.length > 0) {\n      s = queue[0];\n      console.log(\"S:\", s);\n      queue.shift();\n\n      for (let j = 0; j < adjacencyMatrix[s].length; j++) {\n        if (adjacencyMatrix[s][j] == 1) {\n          if (visited[j] == false) {\n            visited[j] = true;\n            parent[j] = s;\n            queue.push(j);\n\n            console.log(\"id\", +nodeLink[j].nodeID);\n            if (nodeLink[j].nodeID == toFind) {\n              console.log(\"found at: \", s);\n            }\n\n            nodeLink[j].colour = \"#FFA5B2\";\n            nodeLink[j].bgColour = \"#F58696\";\n            console.log(\"Queue: \", queue);\n\n            await sleep(500);\n          }\n        }\n      }\n    }\n    let order = [];\n\n    let n = toFind;\n    let traversals = 0;\n    while (parent[n] != 999) {\n      order.push(n);\n      if (parent[n] == n) {\n        break;\n      }\n      n = parent[n];\n    }\n\n    order.reverse();\n    await sleep(500);\n\n    if (parent[toFind] != toFind) {\n      findParent(order);\n    }\n  }\n\n  async function findParent(order) {\n    for (let i = 0; i < order.length; i++) {\n      nodeLink[order[i]].colour = \"#BE57FF\";\n      nodeLink[order[i]].bgColour = \"#AD2CFF\";\n\n      await sleep(500);\n    }\n  }\n\n  async function depthFirstSearch() {\n    let s = centerIndex;\n    let stack = [];\n    let visited = [];\n\n    console.log(\"RAN!\");\n\n    for (let k = 0; k < nodeLink.length; k++) {\n      visited[k] = false;\n    }\n\n    stack.push(s);\n    visited[s] = true;\n\n    while (stack.length > 0) {\n      let k = stack.pop();\n      for (let i = nodeLink.length; i > 0; i--) {\n        console.log(\"a\");\n        if (adjacencyMatrix[k][i] == 1) {\n          if (visited[i] == false) {\n            stack.push(i);\n            visited[i] = true;\n            nodeLink[i].colour = \"blue\";\n\n            await sleep(500);\n          }\n        }\n      }\n    }\n  }\n\n  function windowResized(p5) {\n    p5.resizeCanvas(\n      holderRef.current.getBoundingClientRect().width,\n      holderRef.current.getBoundingClientRect().height\n    );\n\n    setGlobalHeight(p5.windowHeight);\n    console.log(\"resize\");\n  }\n\n  function test() {}\n\n  return (\n    <AlgorithmsWrapper className=\"BFS\">\n      <TopWrapper>\n        <BackLink as={Link} to=\"/algorithms\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>breadth first search</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <div style={{ position: \"absolute\" }}></div>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description={\n              <div>\n                <p>\n                  breadth first search (BFS) is an efficient seaching algorithm\n                  for finding the shortest path between nodes in an unweighted\n                  (distances between nodes are not known) graph.\n                  <br />\n                  <br />\n                  in this case, the shortest path from start to finish is the\n                  one that needs to go through the least nodes.\n                  <br />\n                  <br />\n                  it works by starting at one node, and checking all of its\n                  neighbors or connections. once all of these have been checked,\n                  then the connection's connections are checked. you can think\n                  of it in layers: starting with immediate siblings, then\n                  cousins e.t.c\n                  <br />\n                  <br />\n                  before this algorithm can be run, an adjacency matrix is\n                  needed. this is a 2d array that keeps track of whether or not\n                  two nodes are connected. if nodes 1 and 2 are connected,\n                  <br />\n                  <br />\n                  adjacencyMatrix[1][2] would be 1, and <br />\n                  <br />\n                  adjacencyMatrix[2][1] would also be 1.\n                  <br />\n                  <br />\n                  if two nodes are not connected, the value would instead be 0.\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  1. first, a starting node is picked. this can be any node.\n                  like dijkstra's algorithm, a 'visited' array is made, and\n                  every entry except for the starting node is made to be false,\n                  as no other nodes have been explored yet.\n                  <br />\n                  <br />\n                  similarly, a queue is made, which will track which node should\n                  be visited next.\n                  <br />\n                  <br />\n                  2. the starting node is then pushed on to the queue, and a\n                  while loop is begun:\n                  <br />\n                  <br />\n                  <div style={{ paddingLeft: \"2vw\" }}>\n                    while the queue is not empty, let the node to be\n                    investigated next be the first node in the queue. i.e\n                    queue[0]. remove this element from the queue.\n                    <br />\n                    <br />\n                    an inner for loop is started, and runs for every node. we\n                    will call the iterator here j:\n                    <br />\n                    <br />\n                    <div style={{ paddingLeft: \"4vw\" }}>\n                      if adjacencyMatrix[currentNode][j] is equal to 1, and\n                      visited[j] is false, then add it to the queue and make\n                      visited[j] true.\n                      <br />\n                      <br />\n                    </div>\n                  </div>\n                  thats it! when this process is finished, every node will have\n                  been searched.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description={\n              <div>\n                <p>\n                  as BFS does not need to know the distance between nodes, it is\n                  great in networking applications\n                  <br />\n                  <br />\n                  for example, facebook implements BFS to find the shortest link\n                  between two people, treating friends as nodes connected to the\n                  start point, and friends of friends as the connection's\n                  connections.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#FFA5B2\"\n            title=\"cost\"\n            description={\n              <div>\n                <p>\n                  breadth first search: O(E + V)\n                  <br />\n                  <br />\n                  where E is the number of edges (connections) and V is the\n                  number of vertexes (nodes).\n                  <br />\n                  <br />\n                  why? because every node needs to be scanned through (O(V)),\n                  and only the edges that have not yet been visited yet need to\n                  be scanned (O(E)), so we get O(E + V).\n                </p>\n              </div>\n            }\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          <StaticPosition>\n            <Instruction>drag between nodes to form a link</Instruction>\n            <SketchHolder id=\"IRC\" ref={holderRef}>\n              {frameWidth < 1 && (\n                <Sketch\n                  setup={test}\n                  draw={draw}\n                  mousePressed={mousePressed}\n                  mouseDragged={mouseDragged}\n                  mouseReleased={mouseReleased}\n                  mouseWheel={mouseWheel}\n                />\n              )}\n              {frameWidth > 1 && (\n                <Sketch\n                  setup={setup}\n                  draw={draw}\n                  mousePressed={mousePressed}\n                  mouseDragged={mouseDragged}\n                  mouseReleased={mouseReleased}\n                  mouseWheel={mouseWheel}\n                  windowResized={windowResized}\n                />\n              )}\n            </SketchHolder>\n            <ControlHolder>\n              <InputValue\n                placeholder=\"find\"\n                onChange={(event) => setToFind(event.target.value)}\n              />\n\n              <AddButton onClick={() => breadthFirstSearch()}>\n                <p>search</p>\n              </AddButton>\n            </ControlHolder>\n          </StaticPosition>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default BFS;\n\n//Old Draw\n/**\n * \n * \n * let draw = (p5) => {\n    p5.background(\"rgb(0%,100%,10%)\");\n    //Color of the ball\n    p5.stroke(255);\n    p5.strokeWeight(4);\n    //Mentioning that the ball or the circle won't have filled color\n    p5.noFill();\n    //The first 2 parameters are for positioning and the next two are\n    //for size\n\n    p5.noStroke();\n    p5.fill(p5.color(\"#9bffb6\"));\n    p5.ellipse(a + 20, b, 100, 100);\n\n    p5.strokeWeight(20);\n    p5.stroke(\"#72ff98\");\n    p5.line(300, 300, 400, 400);\n    p5.noStroke();\n\n    //Circle\n    p5.fill(p5.color(\"#72ff98\"));\n    p5.ellipse(a, b, 100, 100);\n\n    p5.fill(p5.color(\"#9bffb6\"));\n    p5.ellipse(420, 400, 100, 100);\n\n    p5.fill(p5.color(\"#72ff98\"));\n    p5.ellipse(400, 400, 100, 100);\n\n    p5.strokeWeight(20);\n\n    p5.stroke(\"#72ff98\");\n    p5.line(300, 300, 400, 400);\n\n    p5.stroke(\"#9bffb6\");\n    p5.line(320, 300, 420, 400);\n    let easing = 0.05;\n\n    if (b >= 300) {\n      speed = -1 * easing;\n    }\n    if (b === 250) {\n      speed = 1 * easing;\n    }\n    b = b + speed;\n  };\n */\n\n/* Old shit\n\n let setup = (p5, canvasParentRef) => {\n    globalWidth = p5.windowWidth * 0.4;\n    globalHeight = p5.windowHeight * 0.7;\n\n    let parent = p5.createCanvas(globalWidth, globalHeight).parent(\"IRC\");\n\n    p5.background(\"#e3dac9\");\n\n    //No stroke around circle\n    p5.noStroke();\n\n    //Circle ( x, y, width, height)\n    p5.fill(p5.color(\"#72ff98\"));\n    //p5.ellipse(100, 100, 100, 100);\n\n    var xa = 0;\n\n    /* while (xa < 500) {\n      p5.ellipse(xa, 200, 25, 25);\n      xa = xa + 50;\n    }\n\n    for (let i = 0; i < 20; i++) {\n      //p5.ellipse(xa, 200, 100, 100);\n      //xa = xa + 150;\n    }\n\n    async function andrew() {\n      await sleep(1000);\n    }\n\n    console.log(\"length: \" + nodeLink.length);\n\n    for (let j = 0; j < nodeLink.length; j++) {\n      p5.ellipse(nodeLink[j].x, nodeLink[j].y, 100, 100);\n      console.log(\"Width: \" + p5.windowWidth);\n    }\n\n    p5.rect(0, 0, 55, 55, 20);\n    p5.rect(0, globalHeight, 55, 55, 20);\n    p5.rect(globalWidth, 0, 55, 55, 20);\n    p5.rect(globalWidth, globalHeight, 55, 55, 20);\n\n    // tester(p5, x, y);\n  };\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  const [x, setX] = useState(100);\n  const [y, setY] = useState(100);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeValue, setNodeValue] = useState(27);\n\n  const testarray = [1, 2, 3, 4, 5];\n\n  let draw = (p5) => {};\n\n  function tester(p5, x, y) {\n    console.log(\"CALLED!!!\");\n    // p5.ellipse(x, y, 100, 100);\n  }\n\n  const [spaceVals, setSpaceVals] = useState([]);\n\n  const initialArray = useEffect(() => {\n    setNodeLink([\n      ...nodeLink,\n      {\n        needsNewLine,\n        nodeID,\n        nodeValue,\n        x,\n        y,\n      },\n    ]);\n\n    console.log(nodeID);\n  }, [changer]);\n\n  const run10times = useEffect(() => {\n    if (changer < 9) {\n      //ellipse(x, y, 20, 20);\n\n      setChanger(changer + 1);\n      setNodeValue(nodeValue + 1);\n      setNodeID(nodeID + 1);\n\n      if (x < 100) {\n        setX(x + 100);\n      } else {\n        setX(1000);\n      }\n      setY(Math.floor(Math.random() * 500));\n    }\n  }, [nodeLink]);*/\n\n//Old centering code\n\n/*\n  let centerNode = null;\n    let centerNode2 = null;\n    let closestToZeroX = 0;\n    let closestToZeroY = 0;\n    let a;\n    let b;\n    for (let i = 0; i < nodeLinkHook.length; i++) {\n      a = nodeLinkHook[i].x - globalWidth / 2;\n      b = nodeLinkHook[i].y - (globalHeight * 0.8) / 2;\n      console.log(a);\n\n      if (closestToZeroX === 0) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      } else if (a > 0 && a <= Math.abs(closestToZeroX)) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      } else if (a < 0 && -a < Math.abs(closestToZeroX)) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      }\n\n      if (closestToZeroY === 0) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      } else if (b > 0 && b <= Math.abs(closestToZeroY)) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      } else if (b < 0 && -b < Math.abs(closestToZeroY)) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      }\n    }\n\n\n\n    let centerDecider = null;\n\n    if (centerNode.x + centerNode.y > centerNode2.x + centerNode2.y) {\n      centerDecider = centerNode;\n    } else {\n      centerDecider = centerNode2;\n    }\n\n    console.log(\"Center value: \" + centerNode.nodeValue);\n\n\n      p5.fill(p5.color(\"orange\"));\n    p5.rect(0, 0, 100, 100);\n\n    p5.fill(p5.color(\"white\")).text(centerNode.nodeValue, 0, 50);\n\n    p5.fill(p5.color(\"red\"));\n    p5.ellipse(centerNode.x, centerNode.y, centerNode.r, centerNode.r);\n    p5.fill(p5.color(\"white\")).text(\n      centerNode.nodeValue,\n      centerNode.x - centerNode.r / 4,\n      centerNode.y + centerNode.r / 6\n    );\n\n    p5.fill(p5.color(\"purple\"));\n    p5.ellipse(\n      centerDecider.x,\n      centerDecider.y,\n      centerDecider.r,\n      centerDecider.r\n    );\n    p5.fill(p5.color(\"white\")).text(\n      centerDecider.nodeValue,\n      centerDecider.x - centerDecider.r / 4,\n      centerDecider.y + centerDecider.r / 6\n    );\n\n\n    );*/\n\n//Old Connections\n\n/**\n     * let distance;\n    let smallest = 9999;\n    let nodeToAdd = null;\n    let distanceToAdd = 0;\n    let prevNodes = [];\n    let prevDist = [];\n    let doneBefore = false;\n    //trying dist;\n\n    for (let w = 0; w < numConnections - 1; w++) {\n      smallest = 9999;\n      nodeToAdd = null;\n      doneBefore = false;\n\n      for (let k = 0; k < nodeLinkHook.length; k++) {\n        //Makes sure it is not comparing against itself\n        if (k != nodeIndex) {\n          distance = parseInt(\n            p5.dist(\n              nodeLinkHook[nodeIndex].x,\n              nodeLinkHook[nodeIndex].y,\n              nodeLinkHook[k].x,\n              nodeLinkHook[k].y\n            )\n          );\n\n          //Checks if distance has been done before\n          for (let m = 0; m < prevDist.length; m++) {\n            if (distance == prevDist[m]) {\n              doneBefore = true;\n            }\n          }\n\n          //Sets smallest if not done before\n          if (Math.abs(distance) < smallest && !doneBefore) {\n            smallest = Math.abs(distance);\n            nodeToAdd = nodeLinkHook[k];\n            distanceToAdd = distance;\n          }\n        } else {\n          console.log(\"same\");\n        }\n        //End of loop\n        doneBefore = false;\n      }\n      prevNodes.push(nodeToAdd);\n      prevDist.push(distanceToAdd);\n    }\n\n    return prevNodes;\n     * \n     * \n     * * */\n\n//    /*\n//    //Canvas Variables\n// const holderRef = useRef();\n// let globalWidth;\n// let globalHeight;\n// let newCenter = null;\n\n// const [adjacencyMatrix, setAdjacencyMatrix] = useState([\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n// ]);\n\n// /* adjacencyMatrix = [\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n// ];*/\n\n// //Node Variables\n// //const [nodeLink, setNodeLink] = useState([]);\n\n// //const [nodeID, setNodeID] = useState(0);\n// //const [nodeValue, setNodeValue] = useState(23);\n// //const [x, setX] = useState(0);\n// //const [y, setY] = useState(0);\n\n// const [nodeLinkHook, setNodeLinkHook] = useState([]);\n// const [checker, setChecker] = useState(0);\n// const [center, setCenter] = useState(null);\n\n// const buildNodes = useEffect(() => {\n//   /*    let x = 100;\n//   let y = 100;\n//   let r = 100;\n//   */\n//   let screenWidth = holderRef.current.getBoundingClientRect().width;\n//   let screenHeight = holderRef.current.getBoundingClientRect().height;\n//   let nodeID = 0;\n//   let nodeValue = 47;\n//   let nodeLink = [];\n//   let protection = 0;\n\n//   while (nodeLink.length < 9) {\n//     var Node = {\n//       x: Math.floor(Math.random() * (screenWidth - 100) + 50),\n//       y: Math.floor(Math.random() * (screenHeight * 0.7 - 100) + 50),\n//       r: 80,\n//       nodeID: nodeID,\n//       nodeValue: Math.floor(Math.random() * 99),\n//       isCenter: false,\n//     };\n\n//     //Ensures never overlaps\n//     var isOverlapping = false;\n//     for (let j = 0; j < nodeLink.length; j++) {\n//       var otherNode = nodeLink[j];\n//       var a = Node.x - otherNode.x;\n//       var b = Node.y - otherNode.y;\n//       var d = Math.sqrt(a * a + b * b);\n\n//       if (d < (Node.r + otherNode.r) * 0.8) {\n//         isOverlapping = true;\n//       }\n//     }\n\n//     //If it is good, push it\n//     if (!isOverlapping) {\n//       nodeLink.push(Node);\n//       nodeID++;\n//     }\n\n//     protection++;\n//     if (protection > 100000) {\n//       console.log(\"too many circles\");\n//       break;\n//     }\n//   }\n\n//   setNodeLinkHook(nodeLink);\n// }, [checker]);\n\n// function setup(p5, canvasParentRef) {\n//   globalWidth = holderRef.current.getBoundingClientRect().width;\n//   globalHeight = holderRef.current.getBoundingClientRect().height;\n\n//   setChecker(checker + 1);\n\n//   p5.createCanvas(globalWidth, globalHeight * 0.8).parent(canvasParentRef);\n\n//   let d;\n//   let smallest = 999;\n//   let centerNode = null;\n//   //trying dist;\n//   for (let k = 0; k < nodeLinkHook.length; k++) {\n//     let d = parseInt(\n//       p5.dist(\n//         globalWidth / 2,\n//         (globalHeight * 0.8) / 2,\n//         nodeLinkHook[k].x,\n//         nodeLinkHook[k].y\n//       )\n//     );\n\n//     if (Math.abs(d) < smallest) {\n//       smallest = Math.abs(d);\n//       centerNode = nodeLinkHook[k];\n//     }\n//   }\n\n//   //Finding node closest to center;\n\n//   p5.background(\"#e3dac9\");\n\n//   p5.noStroke();\n\n//   p5.fill(p5.color(\"#72ff98\"));\n\n//   //let connections = linkMaker(p5, 3, centerNode.nodeID);\n//   linkMaker(p5, 3, centerNode.nodeID);\n\n//   //for (let m = 0; m < connections.length; m++) {\n\n//   for (let j = 0; j < nodeLinkHook.length; j++) {\n//     p5.fill(p5.color(\"#9bffb6\"));\n//     p5.ellipse(\n//       nodeLinkHook[j].x + nodeLinkHook[j].r / 4,\n//       nodeLinkHook[j].y,\n//       nodeLinkHook[j].r,\n//       nodeLinkHook[j].r\n//     );\n\n//     p5.fill(p5.color(\"#72ff98\"));\n//     p5.textSize(nodeLinkHook[j].r / 2);\n//     p5.ellipse(\n//       nodeLinkHook[j].x,\n//       nodeLinkHook[j].y,\n//       nodeLinkHook[j].r,\n//       nodeLinkHook[j].r\n//     );\n\n//     p5.fill(p5.color(\"white\")).text(\n//       nodeLinkHook[j].nodeValue,\n//       nodeLinkHook[j].x - nodeLinkHook[j].r / 4,\n//       nodeLinkHook[j].y + nodeLinkHook[j].r / 6\n//     );\n\n//     p5.fill(p5.color(\"white\")).text(\n//       nodeLinkHook[j].x,\n//       nodeLinkHook[j].x - nodeLinkHook[j].r / 4,\n//       nodeLinkHook[j].y + nodeLinkHook[j].r\n//     );\n\n//     p5.fill(p5.color(\"#72ff98\"));\n//   }\n\n//   p5.fill(p5.color(\"grey\"));\n//   p5.ellipse(centerNode.x, centerNode.y, centerNode.r, centerNode.r);\n//   p5.fill(p5.color(\"white\")).text(\n//     centerNode.nodeValue,\n//     centerNode.x - centerNode.r / 4,\n//     centerNode.y + centerNode.r / 6\n//   );\n\n//   p5.fill(p5.color(\"blue\"));\n//   p5.ellipse(globalWidth / 2, (globalHeight * 0.8) / 2, 50, 50);\n// }\n\n// function linkMaker(p5, numConnections, nodeIndex) {\n//   let distance;\n//   let smallest = 9999;\n//   let nodeToAdd = null;\n//   let indexToAdd = 0;\n//   let distanceToAdd = 0;\n//   let prevNodes = [];\n//   let prevDist = [];\n//   let doneBefore = false;\n//   //trying dist;\n\n//   for (let w = 0; w < numConnections; w++) {\n//     smallest = 9999;\n//     nodeToAdd = null;\n//     doneBefore = false;\n\n//     for (let k = 0; k < nodeLinkHook.length; k++) {\n//       //Makes sure it is not comparing against itself\n//       if (k != nodeIndex) {\n//         distance = parseInt(\n//           p5.dist(\n//             nodeLinkHook[nodeIndex].x,\n//             nodeLinkHook[nodeIndex].y,\n//             nodeLinkHook[k].x,\n//             nodeLinkHook[k].y\n//           )\n//         );\n\n//         //Checks if distance has been done before\n//         for (let m = 0; m < prevDist.length; m++) {\n//           if (distance == prevDist[m]) {\n//             doneBefore = true;\n//           }\n//         }\n\n//         //Sets smallest if not done before\n//         if (Math.abs(distance) < smallest && !doneBefore) {\n//           smallest = Math.abs(distance);\n//           nodeToAdd = nodeLinkHook[k];\n//           indexToAdd = k;\n//           distanceToAdd = distance;\n//         }\n//       } else {\n//         console.log(\"same\");\n//       }\n//       //End of loop\n//       doneBefore = false;\n//     }\n//     prevNodes.push(nodeToAdd);\n\n//     prevDist.push(distanceToAdd);\n\n//     console.log(\"nodeToadd:\", indexToAdd);\n//     console.log(\"Index:\", nodeIndex);\n//     adjacencyMatrix[indexToAdd][nodeIndex] = 1;\n//     adjacencyMatrix[nodeIndex][indexToAdd] = 1;\n//     console.log(adjacencyMatrix);\n//   }\n\n//   console.log(nodeLinkHook);\n//   //return prevNodes;\n// }\n\n// let draw = (p5) => {\n//   for (let m = 0; m < adjacencyMatrix.length; m++) {\n//     for (let k = 0; k < adjacencyMatrix.length; k++) {\n//       if (adjacencyMatrix[m][k] === 1 && adjacencyMatrix[k][m] == 1) {\n//         p5.strokeWeight(20);\n\n//         p5.stroke(\"#72ff98\");\n//         p5.line(\n//           nodeLinkHook[m].x,\n//           nodeLinkHook[m].y,\n//           nodeLinkHook[k].x,\n//           nodeLinkHook[k].y\n//         );\n//         p5.stroke(\"#9bffb6\");\n//         p5.line(\n//           nodeLinkHook[m].x + nodeLinkHook[m].r / 6,\n//           nodeLinkHook[m].y,\n//           nodeLinkHook[k].x + nodeLinkHook[m].r / 6,\n//           nodeLinkHook[k].y\n//         );\n//         p5.noStroke();\n\n//         p5.fill(p5.color(\"red\"));\n//         p5.ellipse(nodeLinkHook[m].x, nodeLinkHook[m].y / 2, 50, 50);\n//         p5.ellipse(nodeLinkHook[k].x, nodeLinkHook[k].y / 2, 50, 50);\n//       }\n//     }\n//     /* p5.strokeWeight(20);\n\n//     p5.stroke(\"#72ff98\");\n//     p5.line(centerNode.x, centerNode.y, connections[m].x, connections[m].y);\n//     p5.stroke(\"#9bffb6\");\n//     p5.line(\n//       centerNode.x + centerNode.r / 6,\n//       centerNode.y,\n//       connections[m].x + connections[m].r / 6,\n//       connections[m].y\n//     );\n//     p5.noStroke();*/\n//   }\n// };\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media, Item } from \"../../Shared\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Sketch from \"react-p5\";\nimport p5 from \"p5\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: white;\n  flex-grow: 20;\n  align-items: flex-start;\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n\n  margin-right: 10%;\n  min-width: 40vw;\n  max-width: 40vw;\n  min-height: 100%;\n  max-height: 100%;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    min-width: 100%;\n\n    min-height: 47vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: 30vw;\n  height: 10vh;\n  background-color: #ffe26a;\n  border-radius: 4vh;\n\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 80vw;\n    height: 6vh;\n    margin-top: 0vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst BFSHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n\n  background-color: red;\n  height: 45vh;\n  width: 38vw;\n  padding-top: 2vh;\n\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst BFSRow = styled.div`\n  display: grid;\n\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n`;\n\nconst ControlHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  min-height: 12vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  background-color: transparent;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: blue;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nconst SketchHolder = styled.div`\n  min-width: 40vw;\n  max-width: 40vw;\n  min-height: 70vh;\n  max-height: 70vh;\n  background-color: transparent;\n\n  ${media.mobile} {\n    min-width: 100vw;\n    max-width: 100vw;\n    max-height: 40vh;\n    min-height: 40vh;\n  }\n`;\n\nconst StaticPosition = styled.div`\n  position: fixed;\n  ${media.mobile} {\n    margin-top: inherit;\n    position: relative;\n  }\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction Dijkstra() {\n  const holderRef = useRef();\n  //Frame\n  const [globalWidth, setGlobalWidth] = useState(0);\n  const [globalHeight, setGlobalHeight] = useState(0);\n\n  //Nodes\n  const [nodeLink, setNodeLink] = useState([]);\n  const [nodeValue, setNodeValue] = useState(37);\n\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeNext, setNodeNext] = useState(null);\n  const [nodeX, setNodeX] = useState(200);\n  const [nodeY, setNodeY] = useState(200);\n  const [looper, setLooper] = useState(0);\n  const [changer, setChanger] = useState(0);\n  const [matrixLoaded, setMatrixLoaded] = useState(false);\n  const [nodesSet, setNodesSet] = useState(false);\n\n  const [frameWidth, setFrameWidth] = useState();\n  const [frameHeight, setFrameHeight] = useState();\n\n  const [isRendered, setIsRendered] = useState(0);\n\n  // for animation\n  let animationTimer = 0;\n\n  const a = useEffect(() => {\n    if (holderRef.current.getBoundingClientRect().width > 0) {\n      setFrameWidth(holderRef.current.getBoundingClientRect().width);\n      setFrameHeight(holderRef.current.getBoundingClientRect().height);\n\n      for (let i = 0; i < nodeLink.length; i++) {\n        nodeLink[i].r = (frameHeight + frameWidth) / 15;\n      }\n    }\n  }, [holderRef.current, isRendered]);\n\n  window.addEventListener(\"resize\", function () {\n    // your custom logic\n  });\n\n  const [adjacencyMatrix, setAdjacencyMatrix] = useState([\n    [0, 1, 1, 0, 0, 0, 0],\n    [1, 0, 0, 1, 1, 0, 0],\n    [1, 0, 0, 1, 0, 0, 0],\n    [0, 1, 1, 0, 0, 1, 0],\n    [0, 1, 0, 0, 0, 1, 1],\n    [0, 0, 0, 1, 1, 0, 1],\n    [0, 0, 0, 0, 1, 1, 0],\n  ]);\n\n  const [costMatrix, setCostMatrix] = useState([\n    [0, 1, 1, 0, 0, 0, 0],\n    [1, 0, 0, 1, 1, 0, 0],\n    [1, 0, 0, 1, 0, 0, 0],\n    [0, 1, 1, 0, 0, 1, 0],\n    [0, 1, 0, 0, 0, 1, 1],\n    [0, 0, 0, 1, 1, 0, 1],\n    [0, 0, 0, 0, 1, 1, 0],\n  ]);\n\n  const createNodes = useEffect(() => {\n    if (looper < 7) {\n      var Node = {\n        x: nodeX,\n        y: nodeY,\n        value: nodeValue,\n        id: nodeID,\n        r: (frameHeight + frameWidth) / 15,\n        distance: [],\n\n        colour: \"#7CED61\",\n        bgColour: \"#61D944\",\n        active: false,\n        connections: [],\n      };\n\n      setNodeLink([...nodeLink, Node]);\n\n      if (looper < 6) {\n        setChanger(changer + 1);\n      }\n    } else {\n      for (let i = 0; i < adjacencyMatrix.length; i++) {\n        for (let j = 0; j < adjacencyMatrix.length; j++) {\n          if (adjacencyMatrix[i][j] == 1 && adjacencyMatrix[j][i]) {\n            nodeLink[i].connections.push(nodeLink[j]);\n          }\n        }\n\n        for (let j = 0; j < nodeLink.length; j++) {\n          console.log(\"Number\", j, \": \", nodeLink[j].connections);\n        }\n      }\n      setMatrixLoaded(true);\n    }\n  }, [looper]);\n\n  const updateValues = useEffect(() => {\n    setNodeValue(Math.floor(Math.random() * 99));\n\n    if (looper % 2 != 0) {\n      setNodeX(nodeX + globalWidth / 10);\n    } else {\n      setNodeX(nodeX - globalWidth / 10);\n    }\n    setNodeY(nodeY + globalHeight / 8);\n    setNodeID(nodeID + 1);\n\n    setLooper(looper + 1);\n  }, [changer]);\n\n  const setNexts = useEffect(() => {\n    if (looper > 6) {\n      let temp = [...nodeLink];\n\n      for (let j = 0; j < nodeLink.length - 1; j++) {\n        temp[j].next = temp[j + 1];\n      }\n\n      setNodeLink(temp);\n    }\n  }, [looper]);\n\n  console.log(nodeLink);\n\n  function setup(p5, canvasParentRef) {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    setIsRendered(isRendered + 1);\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n\n    p5.createCanvas(frameWidth, frameHeight).parent(canvasParentRef);\n\n    /* let newXY = [...nodeLink];\n    let currX = frameWidth / 10;\n    let currY = (frameHeight * 0.8) / 2;\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      console.log(i);\n\n      if (i == 1) {\n        currX += frameWidth / 6;\n        currY -= (frameHeight * 0.8) / 4;\n      }\n      if (i == 2) {\n        currY += (frameHeight * 0.8) / 2;\n      }\n      if (i == 3) {\n        currX += frameWidth / 6;\n        currY -= (frameHeight * 0.8) / 4;\n      }\n      if (i == 4) {\n        currX += frameWidth / 6;\n        currY -= (frameHeight * 0.8) / 4;\n      }\n      if (i == 5) {\n        currY += (frameHeight * 0.8) / 2;\n      }\n      if (i == 6) {\n        currX += frameWidth / 6;\n        currY -= (frameHeight * 0.8) / 4;\n      }\n\n      nodeLink[i].x = currX;\n      nodeLink[i].y = currY;\n    }*/\n\n    //Finding node closest to center;\n\n    console.log(matrixLoaded);\n    setIsRendered(1);\n\n    //For the initial animation\n  }\n\n  function windowResized(p5) {\n    p5.resizeCanvas(\n      holderRef.current.getBoundingClientRect().width,\n      holderRef.current.getBoundingClientRect().height\n    );\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      nodeLink[i].r = (frameHeight + frameWidth) / 15;\n    }\n\n    setGlobalHeight(p5.windowHeight);\n    console.log(\"resize\");\n  }\n\n  function test() {}\n\n  let draw = (p5) => {\n    p5.clear();\n    p5.noStroke();\n\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n    setNodesSet(true);\n    if (isRendered == 1) {\n      setIsRendered(2);\n    }\n\n    if (isRendered == 2) {\n      let currX = frameWidth / 10;\n      let currY = (frameHeight * 0.8) / 2;\n      for (let i = 0; i < nodeLink.length; i++) {\n        console.log(i);\n\n        if (i == 1) {\n          currX += frameWidth / 6;\n          currY -= (frameHeight * 0.8) / 4;\n        }\n        if (i == 2) {\n          currY += (frameHeight * 0.8) / 2;\n        }\n        if (i == 3) {\n          currX += frameWidth / 6;\n          currY -= (frameHeight * 0.8) / 4;\n        }\n        if (i == 4) {\n          currX += frameWidth / 6;\n          currY -= (frameHeight * 0.8) / 4;\n        }\n        if (i == 5) {\n          currY += (frameHeight * 0.8) / 2;\n        }\n        if (i == 6) {\n          currX += frameWidth / 6;\n          currY -= (frameHeight * 0.8) / 4;\n        }\n\n        nodeLink[i].x = currX;\n        nodeLink[i].y = currY;\n      }\n\n      setIsRendered(3);\n    }\n\n    //Creating Lines\n    for (let m = 0; m < nodeLink.length; m++) {\n      for (let w = 0; w < nodeLink[m].connections.length; w++) {\n        p5.strokeWeight(frameWidth / 30);\n\n        p5.stroke(nodeLink[m].colour);\n\n        p5.line(\n          nodeLink[m].x,\n          nodeLink[m].y,\n          nodeLink[m].connections[w].x,\n          nodeLink[m].connections[w].y\n        );\n\n        //Setting Distances;\n        //Now the graph is weighted!\n\n        nodeLink[m].distance[w] = Math.floor(\n          p5.dist(\n            nodeLink[m].x,\n            nodeLink[m].y,\n            nodeLink[m].connections[w].x,\n            nodeLink[m].connections[w].y\n          )\n        );\n\n        p5.stroke(nodeLink[m].bgColour);\n        p5.line(\n          nodeLink[m].x + nodeLink[m].r / 6,\n          nodeLink[m].y,\n          nodeLink[m].connections[w].x + nodeLink[m].r / 6,\n          nodeLink[m].connections[w].y\n        );\n      }\n\n      //building cost matrix\n      for (let k = 0; k < nodeLink.length; k++) {\n        if (adjacencyMatrix[m][k] == 1) {\n          costMatrix[m][k] = Math.floor(\n            p5.dist(nodeLink[m].x, nodeLink[m].y, nodeLink[k].x, nodeLink[k].y)\n          );\n        } else if (m != k) {\n          costMatrix[m][k] = 99999;\n        } else {\n          costMatrix[m][k] = 0;\n        }\n      }\n    }\n\n    p5.noStroke();\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      //Background Circle\n      p5.fill(p5.color(nodeLink[i].bgColour));\n      p5.ellipse(\n        nodeLink[i].x + nodeLink[i].r / 6,\n        nodeLink[i].y,\n        nodeLink[i].r,\n        nodeLink[i].r\n      );\n\n      //Foreground Circle\n      p5.fill(p5.color(nodeLink[i].colour));\n      p5.ellipse(nodeLink[i].x, nodeLink[i].y, nodeLink[i].r, nodeLink[i].r);\n\n      p5.textSize(nodeLink[i].r / 2);\n      p5.fill(p5.color(\"white\")).text(\n        nodeLink[i].id,\n        nodeLink[i].x - nodeLink[i].r / 4,\n        nodeLink[i].y + nodeLink[i].r / 6\n      );\n      p5.fill(p5.color(\"#72ff98\"));\n    }\n\n    //Creating Text\n    for (let m = 0; m < nodeLink.length; m++) {\n      for (let w = 0; w < nodeLink[m].connections.length; w++) {\n        p5.noStroke();\n        p5.textSize(nodeLink[m].r / 4);\n        p5.fill(p5.color(\"#7c7c7c\")).text(\n          Math.floor(\n            p5.dist(\n              nodeLink[m].x,\n              nodeLink[m].y,\n              nodeLink[m].connections[w].x,\n              nodeLink[m].connections[w].y\n            )\n          ),\n          (nodeLink[m].x + nodeLink[m].connections[w].x) / 2 +\n            nodeLink[m].r / 6,\n          (nodeLink[m].y + nodeLink[m].connections[w].y) / 2 + nodeLink[m].r / 6\n        );\n      }\n    }\n\n    animationTimer++;\n    console.log(\"IR: \", isRendered);\n    //intro animation\n    if (isRendered == 3 && animationTimer > 200) {\n      p5.fill(p5.color(\"#F58696\"));\n\n      p5.triangle(\n        nodeLink[2].x,\n        nodeLink[2].y + nodeLink[2].r / 5,\n        nodeLink[2].x + nodeLink[2].r / 6 + nodeLink[2].r / 8,\n        nodeLink[2].y + nodeLink[2].r * 0.8,\n        nodeLink[2].x - nodeLink[2].r / 6,\n        nodeLink[2].y + nodeLink[2].r * 1\n      );\n\n      p5.fill(p5.color(\"#FFA5B2\"));\n      p5.triangle(\n        nodeLink[2].x,\n        nodeLink[2].y + nodeLink[2].r / 5,\n        nodeLink[2].x + nodeLink[2].r / 6,\n        nodeLink[2].y + nodeLink[2].r * 0.8,\n        nodeLink[2].x - nodeLink[2].r / 6,\n        nodeLink[2].y + nodeLink[2].r * 1\n      );\n\n      p5.fill(p5.color(\"#FFA5B2\"));\n      p5.triangle(\n        nodeLink[2].x,\n        nodeLink[2].y + nodeLink[2].r / 5,\n        nodeLink[2].x + nodeLink[2].r / 6,\n        nodeLink[2].y + nodeLink[2].r * 0.8,\n        nodeLink[2].x - nodeLink[2].r / 6,\n        nodeLink[2].y + nodeLink[2].r * 1\n      );\n\n      /* p5.ellipse(\n        nodeLink[2].x + nodeLink[2].r / 6,\n        nodeLink[2].y,\n        nodeLink[2].r,\n        nodeLink[2].r\n      );*/\n\n      if (nodeLink[2].x > frameWidth / 12) {\n        nodeLink[2].x--;\n      }\n      if (nodeLink[2].y < frameHeight * 0.8) {\n        nodeLink[2].y++;\n      } else {\n        setIsRendered(4);\n      }\n    }\n  };\n\n  const [startValue, setStartValue] = useState(0);\n  const [endValue, setEndValue] = useState(6);\n\n  async function dijkstras() {\n    for (let m = 0; m < nodeLink.length; m++) {\n      nodeLink[m].colour = \"#7CED61\";\n      nodeLink[m].bgColour = \"#61D944\";\n    }\n    //Visiting\n    let visited = [];\n    let parent = [];\n\n    //Distance\n    let infinity = 99999;\n    let distFromStart = [];\n    let nearestNode = startValue;\n\n    //For finding nearest\n    let minValue = 99999;\n    let minNode = 0;\n\n    for (let m = 0; m < nodeLink.length; m++) {\n      //Will change this to a variable to change the input\n      if (m == 0) {\n        distFromStart.push(0);\n        parent[0] = -1;\n      } else {\n        distFromStart.push(infinity);\n      }\n\n      //Sets everything to unvisited\n      visited[m] = false;\n\n      //sets all parents to themselves\n      parent[m] = m;\n    }\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      //Getting the nearest node:\n\n      for (let j = 0; j < nodeLink.length; j++) {\n        if (!visited[j] && distFromStart[j] < minValue) {\n          minValue = distFromStart[j];\n          minNode = j;\n        }\n      }\n\n      visited[minNode] = true;\n\n      //updating distance;\n      for (let adj = 0; adj < nodeLink.length; adj++) {\n        //Checks if the previous distance is already smaller than the new distance\n        //Which is the distance to reach nearest PLUS cost of going from nearest to adjacent\n        if (\n          !visited[adj] &&\n          distFromStart[minNode] + costMatrix[minNode][adj] <\n            distFromStart[adj] &&\n          costMatrix[minNode][adj] != 99999\n        ) {\n          //update\n\n          distFromStart[adj] =\n            distFromStart[minNode] + costMatrix[minNode][adj];\n\n          parent[adj] = minNode;\n\n          console.log(minNode);\n        }\n      }\n\n      minValue = 99999;\n      minNode = 0;\n    }\n\n    let order = [];\n\n    let n = nodeLink.length - 1;\n    while (n > 0) {\n      order.push(n);\n      n = parent[n];\n    }\n    order.push(0);\n    order.reverse();\n    console.log(order);\n\n    for (let f = 0; f < order.length; f++) {\n      nodeLink[order[f]].colour = \"#F52F2F\";\n      nodeLink[order[f]].bgColour = \"#F66161\";\n      await sleep(1000);\n    }\n  }\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function mouseWheel(event) {\n    console.log(event);\n    if (event.mouseX > 0 && event.mouseY > 0) {\n      for (let m = 0; m < nodeLink.length; m++) {\n        nodeLink[m].y += event._mouseWheelDeltaY / 8;\n      }\n\n      setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n    }\n  }\n\n  const [mouseCurrentY, setMouseCurrentY] = useState();\n\n  function mousePressed(p5) {\n    for (let m = 0; m < nodeLink.length; m++) {\n      console.log(nodeLink[m].active);\n    }\n    setMouseCurrentY(p5.mouseY);\n    return false;\n  }\n\n  function mouseDragged(p5) {\n    let isMovingObject = false;\n\n    let distance;\n    for (let i = 0; i < nodeLink.length; i++) {\n      distance = p5.dist(p5.mouseX, p5.mouseY, nodeLink[i].x, nodeLink[i].y);\n\n      if (distance < nodeLink[i].r) {\n        nodeLink[i].active = true;\n        isMovingObject = true;\n\n        document.body.style.overflow = \"hidden\";\n      }\n    }\n    if (isMovingObject == true) {\n      for (let i = 0; i < nodeLink.length; i++) {\n        if (nodeLink[i].active) {\n          nodeLink[i].x = p5.mouseX;\n          nodeLink[i].y = p5.mouseY;\n          break;\n        }\n      }\n    }\n\n    if (!isMovingObject) {\n      if (window.innerWidth > 1000) {\n        if (p5.mouseX > 0 && p5.mouseY > 0) {\n          document.body.style.overflow = \"hidden\";\n\n          for (let i = 0; i < nodeLink.length; i++) {\n            if (p5.mouseY < mouseCurrentY) {\n              nodeLink[i].y += p5.mouseX / 50;\n            } else {\n              nodeLink[i].y -= p5.mouseX / 50;\n            }\n          }\n        }\n      } else {\n        if (p5.mouseY < frameHeight) {\n          document.body.style.overflow = \"hidden\";\n          for (let i = 0; i < nodeLink.length; i++) {\n            if (p5.mouseY < mouseCurrentY) {\n              nodeLink[i].y += p5.mouseX / 100;\n            } else {\n              nodeLink[i].y -= p5.mouseX / 100;\n            }\n          }\n        }\n      }\n\n      setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n    }\n\n    return false;\n  }\n\n  function mouseReleased(p5) {\n    for (let i = 0; i < nodeLink.length; i++) {\n      if (nodeLink[i].active) {\n        nodeLink[i].active = false;\n      }\n    }\n    document.body.style.overflow = \"auto\";\n  }\n\n  return (\n    <AlgorithmsWrapper className=\"BFS\">\n      <TopWrapper>\n        <BackLink as={Link} to=\"/algorithms\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>dijkstra's algorithm</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description={\n              <div>\n                <p>\n                  dijkstra's algorithm (also called dijkstra's shortest path) is\n                  an efficient algorithm for finding the shortest path between\n                  two nodes in a weighted graph.\n                  <br />\n                  <br />\n                  this means that it requires both a set of nodes, and an cost\n                  matrix. the cost matrix is a 2d array, with the entries being\n                  the distance between two nodes.\n                  <br />\n                  <br />\n                  for example, if node 1 and node 2 were 300 units apart, the\n                  entries at costMatrix[1][2], and costMatrix[2][1] would both\n                  be 300. if two nodes are not connected, their cost should be\n                  an unreasonable number, such as -1.\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  1. three arrays are initialised. one to keep track of the\n                  visited nodes, one to keep track of each node's 'parent', and\n                  one to keep track of each node's distance from the starting\n                  node. each array contains as many elements as there are nodes\n                  in the graph. <br />\n                  <br />\n                  the 'visited' array has all of its values initialised to\n                  false, as nothing has been visited yet.\n                  <br />\n                  <br />\n                  the parent array is left blank, or has all of it elements\n                  initialised to null.\n                  <br />\n                  <br />\n                  the distance from start array is initialised to 'infinity', as\n                  the distance between the first node and the other nodes is not\n                  yet known. most of the time, infinity is treated as a large\n                  number such as 999999.\n                  <br />\n                  <br /> the starting node (in this case 0) has no parent, so\n                  its parent is set to -1. similarly its distance is set to 0.\n                  <br />\n                  <br />\n                  2. a loop is then begun, which will run through each node. we\n                  will call the index here i.\n                  <br />\n                  <br />\n                  <div style={{ paddingLeft: \"2vw\" }}>\n                    a) first, an inner loop runs through every node to determine\n                    what the next closest node from the start is. if it has not\n                    been visited yet, this will be the next node to be looked\n                    at. this will do nothing on the first loop, as the distances\n                    have not yet been found.\n                    <br />\n                    <br />\n                    b) next, once the first loop has finished, another loop will\n                    begin. we will call the index here adj, for adjacent. this\n                    loop again runs through every node.\n                    <br />\n                    <br />\n                    it first checks if visited[adj] is true. if it is not, i.e.\n                    it hasn't been visited, it then checks if\n                    <br />\n                    <br />\n                    <div style={{ textAlign: \"center\" }}>\n                      costMatrix[currentNode][adj] <br /> + <br />\n                      distanceFromStart[currentNode]\n                    </div>\n                    <br />\n                    <br />\n                    is smaller than 'infinity'. finally, it checks if the two\n                    nodes are actually connected, i.e. the cost at\n                    costMatrix[currentNode][adj] isn't -1.\n                    <br />\n                    <br />\n                    c) if these three conditions are met, it sets the\n                    distanceFromStart[adj] to:\n                    <br />\n                    <br />\n                    <div style={{ textAlign: \"center\" }}>\n                      distFromStart[currentNode] <br /> + <br />\n                      costMatrix[currentNode][adj]\n                    </div>\n                    <br />\n                    <br />\n                    so whatever the current distance from the start is, plus the\n                    new cost going from the current node to whatever 'adj' is.\n                    <br />\n                    <br />\n                    d) it then sets the parent of 'adj' to currentNode, as to\n                    get to 'adj', at least through the shortest path, you need\n                    to go to currentNode first.\n                    <br />\n                    <br />\n                  </div>\n                  thats it! the process is repeated, except instead of nothing\n                  happening in the first loop, it will find whatever the\n                  smallest, unvisited node in distanceFromStart is and make that\n                  the current node.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description={\n              <div>\n                <p>\n                  dijkstra's algorithm is incredibly useful for any time the\n                  shortest path needs to be found when the distances between\n                  nodes are known.\n                  <br />\n                  <br />\n                  the most obvious real-world example is google maps: every\n                  location is a node, and the distances between them are real\n                  distances, like miles or kilometers. finding the shortest path\n                  between two places can be done using this algorithm.\n                </p>\n              </div>\n            }\n          />\n          <Info\n            colour=\"#FFA5B2\"\n            title=\"cost\"\n            description={\n              <div>\n                <p>\n                  dijkstra's algorithm: O(V^2)\n                  <br />\n                  <br />\n                  where V is the number of vertices, or nodes. this is because\n                  every node needs to be looked at (V), and then all of its\n                  connections needs to be looked at (V), leaving (V*V).\n                  different optimisations, such as using a min-heap as a\n                  priority queue can reduce this to:\n                  <br />\n                  <br />\n                  dijkstra's algorithm (min-heap): O((V+E) log V)\n                  <br />\n                  <br />\n                  where E is the amount of edges, or connections between nodes.\n                </p>\n              </div>\n            }\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          <StaticPosition>\n            <SketchHolder id=\"IRC\" ref={holderRef}>\n              {frameWidth < 1 && (\n                <Sketch\n                  setup={test}\n                  draw={draw}\n                  windowResized={windowResized}\n                  mouseWheel={mouseWheel}\n                  mousePressed={mousePressed}\n                  mouseDragged={mouseDragged}\n                  mouseReleased={mouseReleased}\n                />\n              )}\n              {frameWidth > 1 && (\n                <Sketch\n                  setup={setup}\n                  draw={draw}\n                  windowResized={windowResized}\n                  mouseWheel={mouseWheel}\n                  mousePressed={mousePressed}\n                  mouseDragged={mouseDragged}\n                  mouseReleased={mouseReleased}\n                />\n              )}\n            </SketchHolder>\n            <ControlHolder>\n              {/* <InputValue\n              placeholder=\"start\"\n              onChange={(event) => setStartValue(event.target.value)}\n            />\n            <InputValue\n              placeholder=\"end\"\n              onChange={(event) => setEndValue(event.target.value)}\n           />*/}\n\n              <AddButton onClick={() => dijkstras()}>\n                <p>start</p>\n              </AddButton>\n            </ControlHolder>\n          </StaticPosition>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default Dijkstra;\n","import \"./App.css\";\n\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\n\n//Main Pages\nimport Algorithms from \"./Pages/Algorithms\";\nimport DataStructures from \"./Pages/DataStructures\";\n\n//Data Structures\nimport LinkedList from \"./Pages/datastructures/linkedlist/LinkedList\";\nimport ArrayVis from \"./Pages/datastructures/array/ArrayVis\";\n\n//Algorithms\nimport BinarySearch from \"./Pages/algorithms/binarysearch/BinarySearch\";\nimport QuickSort from \"./Pages/algorithms/quicksort/QuickSort\";\nimport BFS from \"./Pages/algorithms/bfs/BFS\";\nimport Dijkstra from \"./Pages/algorithms/dijkstra/Dijkstra\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        {/* main pages */}\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/algorithms\" component={Algorithms} />\n        <Route path=\"/datastructures\" component={DataStructures} />\n\n        {/* data structures */}\n        <Route path=\"/linkedlist\" component={LinkedList} />\n        <Route path=\"/array\" component={ArrayVis} />\n\n        {/* algorithms */}\n        <Route path=\"/binarysearch\" component={BinarySearch} />\n        <Route path=\"/quicksort\" component={QuickSort} />\n        <Route path=\"/bfs\" component={BFS} />\n\n        <Route path=\"/dijkstra\" component={Dijkstra} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}