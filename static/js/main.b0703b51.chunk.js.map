{"version":3,"sources":["Pages/Shared.js","Pages/Home.js","Pages/icons/BackArrow.svg","Pages/Algorithms.js","Pages/DataStructures.js","Pages/datastructures/linkedlist/LinkedList.js","Pages/datastructures/array/ArrayElement.js","Pages/datastructures/array/ArrayVis.js","Pages/algorithms/binarysearch/ArrayElement.js","Pages/algorithms/binarysearch/BinarySearch.js","Pages/algorithms/quicksort/ArrayElement.js","Pages/algorithms/quicksort/QuickSort.js","Pages/algorithms/bfs/ArrayElement.js","Pages/algorithms/bfs/BFS.js","Pages/algorithms/dijkstra/Dijkstra.js","App.js","index.js"],"names":["TopWrapper","styled","div","Title","h1","media","HomeWrapper","BodyWrapper","Item","HomeTitle","DataStructures","as","Link","to","style","backgroundColor","textDecoration","paddingLeft","alignSelf","paddingRight","Algorithms","Home","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","transform","d","fill","SvgBackArrow","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","ForwardRef","AlgorithmsWrapper","ItemRow","BackLink","DataType","url","colour","description","DataStructuresWrapper","ItemRowDescription","ItemRowContent","InputValue","input","AddButton","MinusButton","ControlHolder","SketchHolder","Info","BFS","holderRef","useRef","screenRef","useState","globalWidth","setGlobalWidth","globalHeight","setGlobalHeight","nodeLink","setNodeLink","nodeValue","setNodeValue","nodeID","setNodeID","nodeX","setNodeX","nodeY","setNodeY","looper","setLooper","changer","setChanger","isRendered","setIsRendered","frameWidth","setFrameWidth","frameHeight","setFrameHeight","useEffect","current","getBoundingClientRect","r","Node","x","y","value","next","bgColour","Math","floor","random","temp","j","console","log","windowResized","p5","resizeCanvas","windowHeight","draw","clear","noStroke","currX","currY","color","ellipse","strokeWeight","stroke","line","textSize","text","a","sleep","splice","ms","Promise","resolve","setTimeout","mouseWheel","event","mouseX","mouseY","m","_mouseWheelDeltaY","mouseCurrentY","setMouseCurrentY","className","onLoad","setup","canvasParentRef","createCanvas","parent","background","mouseDragged","document","documentElement","scrollTop","window","innerWidth","onscroll","body","overflow","scrollTo","mousePressed","mouseReleased","placeholder","onChange","onClick","addNode","removeNode","ElementWrapper","ElementBackground","Container","ArrayElement","ArrayHolder","ArrayPosHolder","ArrayVis","arrayLink","setArrayLink","positionLink","setPositionLink","arrayValue","setArrayValue","arrayPosition","setArrayPosition","indexToChange","setIndexToChange","arrayID","setArrayID","shouldChange","setShouldChange","movementIterator","setMovementIterator","arrayTransform","handleUpdate","index","newArrayLink","display","flexDirection","map","Fragment","movement","findIndex","array","textColour","marginLeft","elementState","backgroundImage","foreground","textInsert","TextInsert","BinarySearch","elementTextColour","found","setFound","binarySearchFunction","low","high","mid","updateColours","changeArrayFromInput","QuickSort","quickSortFunction","partition","pi","pivot","swap","c","highlightColours","secondLinks","setNodesSet","addEventListener","adjacencyMatrix","centerNode","setCenterNode","centerIndex","setCenterIndex","linkMaker","numConnections","nodeIndex","distance","smallest","nodeToAdd","indexToAdd","distanceToAdd","prevNodes","prevDist","doneBefore","w","k","parseInt","dist","abs","push","screenWidth","screenHeight","nodeLinkTemp","protection","isCenter","isOverlapping","otherNode","b","sqrt","currIndex","activeNode","s","stack","visited","pop","position","currentCenter","currentCenterIndex","closestIndex","secondIndex","closestDistance","toStart","toEnd","lineLength","active","depthFirstSearch","Dijkstra","matrixLoaded","setMatrixLoaded","nodesSet","costMatrix","connections","distFromStart","minValue","minNode","adj","order","n","reverse","f","App","path","exact","component","LinkedList","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0703b51.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TopWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-grow: 0.1;\n  background-color: peachpuff;\n  align-items: center;\n  justify-content: flex-start;\n\n  svg {\n    padding-left: 5%;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 6vh;\n  color: black;\n  padding-left: 1%;\n`;\n\nexport const media = {\n  mobile: \"@media(max-width: 1024px)\",\n};\n","import { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { TopWrapper, media } from \"./Shared\";\n\nconst HomeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BodyWrapper = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n\n  ${media.mobile} {\n    justify-content: flex-start;\n  }\n`;\n\nconst Item = styled.div`\n  width: 35%;\n  height: 45%;\n  border-radius: 4vw;\n  min-width: 672px;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n\n  p {\n    font-size: 4em;\n    font-weight: bolder;\n    color: white;\n  }\n\n  ${media.mobile} {\n    min-width: 0px;\n    width: 80%;\n    height: 25%;\n    border-radius: 8vw;\n    margin-top: 20%;\n\n    p {\n      font-size: calc(4vh + 1vw);\n    }\n  }\n`;\n\nconst HomeTitle = styled.h1`\n  font-size: 6vh;\n  color: black;\n  padding-left: 5%;\n`;\n\nfunction DataStructures() {\n  return (\n    <Item\n      as={Link}\n      to=\"/datastructures\"\n      style={{ backgroundColor: \"#78FC59\", textDecoration: \"none\" }}\n    >\n      <p style={{ paddingLeft: \"10%\" }}>data</p>\n      <p\n        style={{\n          alignSelf: \"flex-end\",\n          paddingRight: \"3%\",\n        }}\n      >\n        structures\n      </p>\n    </Item>\n  );\n}\n\nfunction Algorithms() {\n  return (\n    <Item\n      as={Link}\n      to=\"/algorithms\"\n      style={{ backgroundColor: \"#6DD3CE\", textDecoration: \"none\" }}\n    >\n      <p style={{ paddingLeft: \"10%\" }}>algorithms</p>\n    </Item>\n  );\n}\n\nfunction Home() {\n  return (\n    <HomeWrapper>\n      <TopWrapper>\n        <HomeTitle>AyDS</HomeTitle>\n      </TopWrapper>\n      <BodyWrapper>\n        <DataStructures />\n        <Algorithms />\n      </BodyWrapper>\n    </HomeWrapper>\n  );\n}\n\nexport default Home;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(-15.458 -48.309)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.108.833,44.35,0a3.878,3.878,0,0,1,3.941,4.037,4.28,4.28,0,0,1-4.107,4.2L3.942,9.073A3.878,3.878,0,0,1,0,5.036,4.28,4.28,0,0,1,4.108.833Z\",\n  transform: \"translate(15.459 72.455) rotate(-30)\",\n  fill: \"#67f3ff\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3.942,0,44.184.833a4.28,4.28,0,0,1,4.107,4.2A3.878,3.878,0,0,1,44.35,9.073L4.108,8.241A4.28,4.28,0,0,1,0,4.038,3.878,3.878,0,0,1,3.942,0Z\",\n  transform: \"translate(19.996 69.151) rotate(30)\",\n  fill: \"#67f3ff\"\n}));\n\nfunction SvgBackArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 46.36,\n    height: 52.846,\n    viewBox: \"0 0 46.36 52.846\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBackArrow);\nexport default __webpack_public_path__ + \"static/media/BackArrow.87ec3327.svg\";\nexport { ForwardRef as ReactComponent };","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"./icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media } from \"./Shared\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst ItemRow = styled.div`\n  margin-top: 40vh;\n  width: 66%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n  }\n`;\n\nconst Item = styled.div`\n  min-width: 300px;\n  width: 30vw;\n  height: auto;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n  margin-bottom: 1vh;\n  text-decoration: none;\n\n  h1 {\n    font-size: 8vh;\n    font-weight: bolder;\n    color: white;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin: 2vh;\n    margin-top: 4vh;\n    transform: translateY(-30%);\n  }\n\n  ${media.mobile} {\n    width: 90vw;\n    border-radius: 8vh;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nfunction DataType(props) {\n  return (\n    <Item\n      BackLink\n      as={Link}\n      to={props.url}\n      style={{ backgroundColor: props.colour }}\n    >\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction Algorithms() {\n  return (\n    <AlgorithmsWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>algorithms</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRow>\n          <DataType\n            url=\"#/binarysearch\"\n            colour=\"#F06449\"\n            title=\"binary search\"\n            description=\"linked lists are a structure made\n            up of nodes. nodes hold a data\n            value, and know where the next\n            node is by storing a pointer to it.\n            this means insertions can easily\n            be made, as it is only the pointers\n            that need to be updated.\"\n          />\n          <DataType\n            colour=\"#6DD3CE\"\n            title=\"bubble sort\"\n            description=\"linked lists are a structure made\n            up of nodes. nodes hold a data\n            value, and know where the next\n            node is by storing a pointer to it.\n            this means insertions can easily\n            be made, as it is only the pointers\n            that need to be updated.\"\n          />\n          <DataType\n            url=\"/quicksort\"\n            colour=\"#78FC59\"\n            title=\"quick sort\"\n            description=\"linked lists are a structure made\n            up of nodes. nodes hold a data\n            value, and know where the next\n            node is by storing a pointer to it.\n            this means insertions can easily\n            be made, as it is only the pointers\n            that need to be updated.\"\n          />\n          <DataType\n            colour=\"#FFA5B2\"\n            title=\"bucket sort\"\n            description=\"linked lists are a structure made\n            up of nodes. nodes hold a data\n            value, and know where the next\n            node is by storing a pointer to it.\n            this means insertions can easily\n            be made, as it is only the pointers\n            that need to be updated.\"\n          />\n          <DataType\n            url=\"/dijkstra\"\n            colour=\"#F3D34A\"\n            title=\"dijkstra's algorithm\"\n            description=\"alinked lists are a structure made\n            up of nodes. nodes hold a data\n            value, and know where the next\n            node is by storing a pointer to it.\n            this means insertions can easily\n            be made, as it is only the pointers\n            that need t\n            o be updated.\"\n          />\n          <DataType\n            url=\"/bfs\"\n            colour=\"#F3D34A\"\n            title=\"BFS\"\n            description=\"alinked lists are a structure made\n            up of nodes. nodes hold a data\n            value, and know where the next\n            node is by storing a pointer to it.\n            this means insertions can easily\n            be made, as it is only the pointers\n            that need to be updated.\"\n          />\n        </ItemRow>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default Algorithms;\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"./icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media } from \"./Shared\";\n\nconst DataStructuresWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst ItemRow = styled.div`\n  margin-top: 35vh;\n  width: 90%;\n  margin-left: 10%;\n  margin-right: 10%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: space-evenly;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n  }\n`;\n\nconst Item = styled.div`\n  min-width: 300px;\n  width: 30vw;\n  height: 35vh;\n  margin: 2.5vh;\n  border-radius: 4vw;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-decoration: none;\n\n  h1 {\n    font-size: 8vh;\n    font-weight: bolder;\n    color: white;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin-left: 10%;\n    margin-right: 10%;\n    margin-bottom: 10%;\n    transform: translateY(-30%);\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n`;\n\nfunction DataType(props) {\n  return (\n    <Item\n      BackLink\n      as={Link}\n      to={props.url}\n      style={{ backgroundColor: props.colour }}\n    >\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction DataStructures() {\n  return (\n    <DataStructuresWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/\" style={{ paddingLeft: \"2%\" }}>\n          <BackArrow />\n        </BackLink>\n\n        <Title>data structures</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRow>\n          <DataType\n            colour=\"#F06449\"\n            title=\"array\"\n            url=\"/array\"\n            description=\"arrays are data structures that store data\nright next to each other in computer \nmemory, making them ideal for storing \ndata you will be accessing regularly \"\n          />\n          <DataType\n            colour=\"#6DD3CE\"\n            title=\"vector\"\n            description=\"arrays are data structures that store data\nright next to each other in computer \nmemory, making them ideal for storing \ndata you will be accessing regularly \"\n          />\n          <DataType\n            colour=\"#78FC59\"\n            url=\"/linkedlist\"\n            title=\"linked list\"\n            description=\"arrays are data structures that store data\nright next to each other in computer \nmemory, making them ideal for storing \ndata you will be accessing regularly \"\n          />\n          <DataType\n            colour=\"#FFA5B2\"\n            title=\"bst\"\n            description=\"arrays are data structures that store data\nright next to each other in computer \nmemory, making them ideal for storing \ndata you will be accessing regularly \"\n          />\n          <DataType\n            colour=\"#F3D34A\"\n            title=\"red black tree\"\n            description=\"arrays are data structures that store data\nright next to each other in computer \nmemory, making them ideal for storing \ndata you will be accessing regularly \"\n          />\n        </ItemRow>\n      </BodyWrapper>\n    </DataStructuresWrapper>\n  );\n}\n\nexport default DataStructures;\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media } from \"../../Shared\";\n\nimport React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport Sketch from \"react-p5\";\nimport p5 from \"p5\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n\n  margin-right: 10%;\n  min-width: 40vw;\n  max-width: 40vw;\n  min-height: 100%;\n  max-height: 100%;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    min-width: 100%;\n\n    min-height: 47vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst Item = styled.div`\n  min-width: 300px;\n  width: 30vw;\n  height: auto;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n  margin-bottom: 1vh;\n\n  h1 {\n    font-size: 8vh;\n    font-weight: bolder;\n    color: white;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin: 2vh;\n    margin-top: 4vh;\n    transform: translateY(-30%);\n  }\n\n  ${media.mobile} {\n    width: 90vw;\n    max-width: 400px;\n    border-radius: 8vh;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #78fc59;\n  border-radius: 4vh;\n\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst BFSHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n\n  background-color: red;\n  height: 45vh;\n  width: 38vw;\n  padding-top: 2vh;\n\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst BFSRow = styled.div`\n  display: grid;\n\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n`;\n\nconst ControlHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  min-height: 12vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  background-color: transparent;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: blue;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nconst SketchHolder = styled.div`\n  min-width: 40vw;\n  max-width: 40vw;\n  min-height: 70vh;\n  max-height: 70vh;\n  background-color: transparent;\n\n  ${media.mobile} {\n    min-width: 100vw;\n    max-width: 100vw;\n    max-height: 40vh;\n    min-height: 40vh;\n  }\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction BFS() {\n  const holderRef = useRef();\n  const screenRef = useRef();\n  //Frame\n  const [globalWidth, setGlobalWidth] = useState(0);\n  const [globalHeight, setGlobalHeight] = useState(0);\n\n  //Nodes\n  const [nodeLink, setNodeLink] = useState([]);\n  const [nodeValue, setNodeValue] = useState(37);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeNext, setNodeNext] = useState(null);\n  const [nodeX, setNodeX] = useState(200);\n  const [nodeY, setNodeY] = useState(200);\n  const [looper, setLooper] = useState(0);\n  const [changer, setChanger] = useState(0);\n  const [isRendered, setIsRendered] = useState(0);\n\n  //let frameWidth = holderRef.current.getBoundingClientRect().width;\n  //let frameHeight = holderRef.current.getBoundingClientRect().height;\n\n  const [frameWidth, setFrameWidth] = useState(0);\n  const [frameHeight, setFrameHeight] = useState(0);\n\n  const a = useEffect(() => {\n    if (holderRef.current.getBoundingClientRect().width > 0) {\n      setFrameWidth(holderRef.current.getBoundingClientRect().width);\n      setFrameHeight(holderRef.current.getBoundingClientRect().height);\n\n      for (let i = 0; i < nodeLink.length; i++) {\n        nodeLink[i].r = (frameHeight + frameWidth) / 15;\n      }\n    }\n  }, [holderRef.current, isRendered]);\n\n  const createNodes = useEffect(() => {\n    if (looper < 3) {\n      var Node = {\n        x: nodeX,\n        y: nodeY,\n        value: nodeValue,\n        id: nodeID,\n        r: (frameHeight + frameWidth) / 15,\n        next: null,\n        colour: \"#72ff98\",\n        bgColour: \"#9bffb6\",\n      };\n\n      setNodeLink([...nodeLink, Node]);\n\n      if (looper < 2) {\n        setChanger(changer + 1);\n      }\n    }\n  }, [looper]);\n\n  const updateValues = useEffect(() => {\n    setNodeValue(Math.floor(Math.random() * 99));\n    if (looper % 2 != 0) {\n      setNodeX(nodeX + globalWidth / 10);\n    } else {\n      setNodeX(nodeX - globalWidth / 10);\n    }\n    setNodeY(nodeY + globalHeight / 8);\n    setNodeID(nodeID + 1);\n\n    setLooper(looper + 1);\n  }, [changer]);\n\n  const setNexts = useEffect(() => {\n    if (looper > 2) {\n      let temp = [...nodeLink];\n\n      for (let j = 0; j < nodeLink.length - 1; j++) {\n        temp[j].next = temp[j + 1];\n      }\n\n      setNodeLink(temp);\n    }\n  }, [looper]);\n\n  console.log(nodeLink);\n\n  const [alreadyDone, setAlreadyDone] = useState(0);\n\n  function setup(p5, canvasParentRef) {\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n\n    p5.createCanvas(frameWidth, frameHeight).parent(canvasParentRef);\n\n    //Finding node closest to center;\n    setIsRendered(1);\n\n    p5.background(\"#FFFFFF\");\n  }\n\n  const fixPositions = useEffect(() => {}, [isRendered]);\n\n  function test() {}\n\n  function windowResized(p5) {\n    /*\n    //Just fix holderref properties pls\n    if (holderRef.current.getBoundingClientRect().width > 1000) {\n      p5.resizeCanvas(\n        holderRef.current.getBoundingClientRect().width,\n        holderRef.current.getBoundingClientRect().height * 0.8\n      );\n      p5.resizeCanvas(\n        holderRef.getBoundingClientRect().width,\n        holderRef.current.getBoundingClientRect().height * 0.8\n      );\n    } else {\n    }*/\n\n    p5.resizeCanvas(\n      holderRef.current.getBoundingClientRect().width,\n      holderRef.current.getBoundingClientRect().height\n    );\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      nodeLink[i].r =\n        (holderRef.current.getBoundingClientRect().height +\n          holderRef.current.getBoundingClientRect().width) /\n        15;\n    }\n\n    setGlobalHeight(p5.windowHeight);\n    console.log(\"resize\");\n  }\n\n  let draw = (p5) => {\n    p5.clear();\n    p5.noStroke();\n\n    if (isRendered == 1) {\n      let newXY = [...nodeLink];\n      let currX = frameWidth / 2;\n      let currY = (frameHeight * 0.8) / 8;\n\n      for (let i = 0; i < nodeLink.length; i++) {\n        nodeLink[i].x = currX;\n        nodeLink[i].y = currY;\n        nodeLink[i].r = (frameHeight + frameWidth) / 15;\n\n        if (i % 2 == 0) {\n          currX -= frameWidth / 10;\n          setNodeX(currX);\n          console.log(\"Even!\");\n        } else {\n          currX += frameWidth / 10;\n          console.log(\"Odd!\");\n          setNodeX(currX);\n        }\n\n        currY += frameHeight / 8;\n        setNodeY(currY);\n      }\n      setIsRendered(2);\n    }\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      //Background Circle\n      p5.fill(p5.color(nodeLink[i].bgColour));\n      p5.ellipse(\n        nodeLink[i].x + nodeLink[i].r / 6,\n        nodeLink[i].y,\n        nodeLink[i].r,\n        nodeLink[i].r\n      );\n\n      //Foreground line\n      if (nodeLink[i].next) {\n        p5.strokeWeight(20);\n        p5.stroke(\"#72ff98\");\n        p5.line(\n          nodeLink[i].x,\n          nodeLink[i].y,\n          nodeLink[i].next.x,\n          nodeLink[i].next.y\n        );\n      }\n      p5.noStroke();\n\n      //Background line\n      if (nodeLink[i].next) {\n        p5.strokeWeight(20);\n        p5.stroke(\"#9bffb6\");\n        p5.line(\n          nodeLink[i].x + nodeLink[i].next.r / 6,\n          nodeLink[i].y,\n          nodeLink[i].next.x + nodeLink[i].next.r / 6,\n          nodeLink[i].next.y\n        );\n      }\n      p5.noStroke();\n\n      //Foreground Circle\n      p5.fill(p5.color(nodeLink[i].colour));\n      p5.ellipse(nodeLink[i].x, nodeLink[i].y, nodeLink[i].r, nodeLink[i].r);\n\n      p5.textSize(nodeLink[i].r / 2);\n      p5.fill(p5.color(\"white\")).text(\n        nodeLink[i].value,\n        nodeLink[i].x - nodeLink[i].r / 4,\n        nodeLink[i].y + nodeLink[i].r / 6\n      );\n      p5.fill(p5.color(\"#72ff98\"));\n    }\n  };\n\n  function addNode() {\n    var Node = {\n      x: nodeX,\n      y: nodeY,\n      value: nodeValue,\n      id: nodeID,\n      r: (frameHeight + frameWidth) / 15,\n      next: null,\n      colour: \"#72ff98\",\n      bgColour: \"#9bffb6\",\n    };\n\n    setNodeLink([...nodeLink, Node]);\n    setChanger(changer + 1);\n  }\n\n  async function removeNode() {\n    let temp = [...nodeLink];\n    let newTemp;\n\n    console.log(\"nodeValue: \", nodeValue);\n    console.log(\"==\", nodeValue == nodeLink[1].value);\n\n    for (let i = 0; i < temp.length; i++) {\n      nodeLink[i].colour = \"#CB391E\";\n      nodeLink[i].bgColour = \"#DD4125\";\n      await sleep(1000);\n      nodeLink[i].colour = \"#72ff98\";\n      nodeLink[i].bgColour = \"#9bffb6\";\n\n      if (temp[i].value == nodeValue) {\n        nodeLink[i].colour = \"purple\";\n        await sleep(1000);\n        if (i > 0) {\n          temp[i - 1].next = temp[i + 1];\n        }\n\n        for (let j = temp.length - 1; j > i; j--) {\n          temp[j].x = temp[j - 1].x;\n          temp[j].y = temp[j - 1].y;\n        }\n\n        temp.splice(i, 1);\n        setNodeLink(temp);\n        console.log(\"Index: \", i);\n        setNodeY(nodeY - globalHeight / 8);\n        //do nodex\n        break;\n      }\n    }\n  }\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function mouseWheel(event) {\n    //console.log(event);\n\n    //console.log(window.innerWidth);\n\n    if (event.mouseX > 0 && event.mouseY > 0) {\n      for (let m = 0; m < nodeLink.length; m++) {\n        nodeLink[m].y += event._mouseWheelDeltaY / 8;\n        nodeLink[m].color = \"grey\";\n\n        setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n      }\n    }\n  }\n\n  function mouseDragged(p5) {\n    console.log(p5.mouseY);\n    console.log(frameHeight);\n\n    /*\n    for (let i = 0; i < nodeLink.length; i++) {\n      if (p5.mouseY < mouseCurrentY) {\n        nodeLink[i].y += p5.mouseX / 50;\n      } else {\n        nodeLink[i].y -= p5.mouseX / 50;\n      }\n    }*/\n\n    /* for (let m = 0; m < nodeLink.length; m++) {\n      if (event.mouseY > frameHeight / 4) {\n        nodeLink[m].y += event.mouseY / 80;\n      } else {\n        nodeLink[m].y -= event.mouseY / 80;\n      }\n    }*/\n    console.log(\"TOP: \", document.documentElement.scrollTop);\n\n    if (window.innerWidth > 1000) {\n      if (p5.mouseX > 0 && p5.mouseY > 0) {\n        window.onscroll = function () {\n          document.body.style.overflow = \"hidden\";\n        };\n        for (let i = 0; i < nodeLink.length; i++) {\n          if (p5.mouseY < mouseCurrentY) {\n            nodeLink[i].y += p5.mouseX / 50;\n          } else {\n            nodeLink[i].y -= p5.mouseX / 50;\n          }\n        }\n      }\n    } else {\n      if (p5.mouseY < frameHeight) {\n        window.onscroll = function () {\n          window.scrollTo(0, 0);\n        };\n        for (let i = 0; i < nodeLink.length; i++) {\n          if (p5.mouseY < mouseCurrentY) {\n            nodeLink[i].y += p5.mouseX / 50;\n          } else {\n            nodeLink[i].y -= p5.mouseX / 50;\n          }\n        }\n      }\n    }\n\n    setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n  }\n\n  const [mouseCurrentY, setMouseCurrentY] = useState();\n\n  function mousePressed(p5) {\n    setMouseCurrentY(p5.mouseY);\n  }\n\n  function mouseReleased(p5) {\n    window.onscroll = function () {};\n  }\n\n  return (\n    <AlgorithmsWrapper\n      className=\"BFS\"\n      onLoad={() => console.log(\"Loaded!\")}\n      ref={screenRef}\n    >\n      <TopWrapper>\n        <BackLink as={Link} to=\"/datastructures\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>linked list</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description=\"arrays are a way of storing data.\n            arrays are made up of ‘elements’, which\n            store one piece of data each. each\n            element is stored directly next to the\n            previous one in memory (contiguity),\n            meaning access is fast, but new elements\n            cannot be added once the array has been made\n            \"\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description=\"arrays are best used in applications\n            where data will often be accessed,\n            as accessing an element is inexpensive.\n            however, this comes at the cost of\n            a greater insertion/deletion cost than\n            something like a linked list.  \n            \"\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          <SketchHolder id=\"IRC\" ref={holderRef}>\n            {\n              // This fixes the issue of the render paradox\n              //Width of is not known until render, but conditional statement\n              //Forces rerender and fixes issue\n              frameWidth < 1 && (\n                <Sketch\n                  setup={test}\n                  draw={draw}\n                  windowResized={windowResized}\n                  mouseWheel={mouseWheel}\n                />\n              )\n            }\n            {frameWidth > 1 && (\n              <Sketch\n                setup={setup}\n                draw={draw}\n                windowResized={windowResized}\n                mouseWheel={mouseWheel}\n                mouseDragged={mouseDragged}\n                mousePressed={mousePressed}\n                mouseReleased={mouseReleased}\n              />\n            )}\n          </SketchHolder>\n\n          <ControlHolder>\n            <InputValue\n              placeholder=\"value\"\n              onChange={(event) => setNodeValue(event.target.value)}\n            />\n\n            <AddButton onClick={() => addNode()}>\n              <p>+</p>\n            </AddButton>\n            <MinusButton onClick={() => removeNode()}>\n              <p>-</p>\n            </MinusButton>\n          </ControlHolder>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default BFS;\n\n//Old Draw\n/**\n * \n * \n * let draw = (p5) => {\n    p5.background(\"rgb(0%,100%,10%)\");\n    //Color of the ball\n    p5.stroke(255);\n    p5.strokeWeight(4);\n    //Mentioning that the ball or the circle won't have filled color\n    p5.noFill();\n    //The first 2 parameters are for positioning and the next two are\n    //for size\n\n    p5.noStroke();\n    p5.fill(p5.color(\"#9bffb6\"));\n    p5.ellipse(a + 20, b, 100, 100);\n\n    p5.strokeWeight(20);\n    p5.stroke(\"#72ff98\");\n    p5.line(300, 300, 400, 400);\n    p5.noStroke();\n\n    //Circle\n    p5.fill(p5.color(\"#72ff98\"));\n    p5.ellipse(a, b, 100, 100);\n\n    p5.fill(p5.color(\"#9bffb6\"));\n    p5.ellipse(420, 400, 100, 100);\n\n    p5.fill(p5.color(\"#72ff98\"));\n    p5.ellipse(400, 400, 100, 100);\n\n    p5.strokeWeight(20);\n\n    p5.stroke(\"#72ff98\");\n    p5.line(300, 300, 400, 400);\n\n    p5.stroke(\"#9bffb6\");\n    p5.line(320, 300, 420, 400);\n    let easing = 0.05;\n\n    if (b >= 300) {\n      speed = -1 * easing;\n    }\n    if (b === 250) {\n      speed = 1 * easing;\n    }\n    b = b + speed;\n  };\n */\n\n/* Old shit\n\n let setup = (p5, canvasParentRef) => {\n    globalWidth = p5.windowWidth * 0.4;\n    globalHeight = p5.windowHeight * 0.7;\n\n    let parent = p5.createCanvas(globalWidth, globalHeight).parent(\"IRC\");\n\n    p5.background(\"#e3dac9\");\n\n    //No stroke around circle\n    p5.noStroke();\n\n    //Circle ( x, y, width, height)\n    p5.fill(p5.color(\"#72ff98\"));\n    //p5.ellipse(100, 100, 100, 100);\n\n    var xa = 0;\n\n    /* while (xa < 500) {\n      p5.ellipse(xa, 200, 25, 25);\n      xa = xa + 50;\n    }\n\n    for (let i = 0; i < 20; i++) {\n      //p5.ellipse(xa, 200, 100, 100);\n      //xa = xa + 150;\n    }\n\n    async function andrew() {\n      await sleep(1000);\n    }\n\n    console.log(\"length: \" + nodeLink.length);\n\n    for (let j = 0; j < nodeLink.length; j++) {\n      p5.ellipse(nodeLink[j].x, nodeLink[j].y, 100, 100);\n      console.log(\"Width: \" + p5.windowWidth);\n    }\n\n    p5.rect(0, 0, 55, 55, 20);\n    p5.rect(0, globalHeight, 55, 55, 20);\n    p5.rect(globalWidth, 0, 55, 55, 20);\n    p5.rect(globalWidth, globalHeight, 55, 55, 20);\n\n    // tester(p5, x, y);\n  };\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  const [x, setX] = useState(100);\n  const [y, setY] = useState(100);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeValue, setNodeValue] = useState(27);\n\n  const testarray = [1, 2, 3, 4, 5];\n\n  let draw = (p5) => {};\n\n  function tester(p5, x, y) {\n    console.log(\"CALLED!!!\");\n    // p5.ellipse(x, y, 100, 100);\n  }\n\n  const [spaceVals, setSpaceVals] = useState([]);\n\n  const initialArray = useEffect(() => {\n    setNodeLink([\n      ...nodeLink,\n      {\n        needsNewLine,\n        nodeID,\n        nodeValue,\n        x,\n        y,\n      },\n    ]);\n\n    console.log(nodeID);\n  }, [changer]);\n\n  const run10times = useEffect(() => {\n    if (changer < 9) {\n      //ellipse(x, y, 20, 20);\n\n      setChanger(changer + 1);\n      setNodeValue(nodeValue + 1);\n      setNodeID(nodeID + 1);\n\n      if (x < 100) {\n        setX(x + 100);\n      } else {\n        setX(1000);\n      }\n      setY(Math.floor(Math.random() * 500));\n    }\n  }, [nodeLink]);*/\n\n//Old centering code\n\n/*\n  let centerNode = null;\n    let centerNode2 = null;\n    let closestToZeroX = 0;\n    let closestToZeroY = 0;\n    let a;\n    let b;\n    for (let i = 0; i < nodeLinkHook.length; i++) {\n      a = nodeLinkHook[i].x - globalWidth / 2;\n      b = nodeLinkHook[i].y - (globalHeight * 0.8) / 2;\n      console.log(a);\n\n      if (closestToZeroX === 0) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      } else if (a > 0 && a <= Math.abs(closestToZeroX)) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      } else if (a < 0 && -a < Math.abs(closestToZeroX)) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      }\n\n      if (closestToZeroY === 0) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      } else if (b > 0 && b <= Math.abs(closestToZeroY)) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      } else if (b < 0 && -b < Math.abs(closestToZeroY)) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      }\n    }\n\n\n\n    let centerDecider = null;\n\n    if (centerNode.x + centerNode.y > centerNode2.x + centerNode2.y) {\n      centerDecider = centerNode;\n    } else {\n      centerDecider = centerNode2;\n    }\n\n    console.log(\"Center value: \" + centerNode.nodeValue);\n\n\n      p5.fill(p5.color(\"orange\"));\n    p5.rect(0, 0, 100, 100);\n\n    p5.fill(p5.color(\"white\")).text(centerNode.nodeValue, 0, 50);\n\n    p5.fill(p5.color(\"red\"));\n    p5.ellipse(centerNode.x, centerNode.y, centerNode.r, centerNode.r);\n    p5.fill(p5.color(\"white\")).text(\n      centerNode.nodeValue,\n      centerNode.x - centerNode.r / 4,\n      centerNode.y + centerNode.r / 6\n    );\n\n    p5.fill(p5.color(\"purple\"));\n    p5.ellipse(\n      centerDecider.x,\n      centerDecider.y,\n      centerDecider.r,\n      centerDecider.r\n    );\n    p5.fill(p5.color(\"white\")).text(\n      centerDecider.nodeValue,\n      centerDecider.x - centerDecider.r / 4,\n      centerDecider.y + centerDecider.r / 6\n    );\n\n\n    );*/\n\n//Old Connections\n\n/**\n     * let distance;\n    let smallest = 9999;\n    let nodeToAdd = null;\n    let distanceToAdd = 0;\n    let prevNodes = [];\n    let prevDist = [];\n    let doneBefore = false;\n    //trying dist;\n\n    for (let w = 0; w < numConnections - 1; w++) {\n      smallest = 9999;\n      nodeToAdd = null;\n      doneBefore = false;\n\n      for (let k = 0; k < nodeLinkHook.length; k++) {\n        //Makes sure it is not comparing against itself\n        if (k != nodeIndex) {\n          distance = parseInt(\n            p5.dist(\n              nodeLinkHook[nodeIndex].x,\n              nodeLinkHook[nodeIndex].y,\n              nodeLinkHook[k].x,\n              nodeLinkHook[k].y\n            )\n          );\n\n          //Checks if distance has been done before\n          for (let m = 0; m < prevDist.length; m++) {\n            if (distance == prevDist[m]) {\n              doneBefore = true;\n            }\n          }\n\n          //Sets smallest if not done before\n          if (Math.abs(distance) < smallest && !doneBefore) {\n            smallest = Math.abs(distance);\n            nodeToAdd = nodeLinkHook[k];\n            distanceToAdd = distance;\n          }\n        } else {\n          console.log(\"same\");\n        }\n        //End of loop\n        doneBefore = false;\n      }\n      prevNodes.push(nodeToAdd);\n      prevDist.push(distanceToAdd);\n    }\n\n    return prevNodes;\n     * \n     * \n     * * */\n","import styled from \"styled-components\";\nimport { media } from \"../../Shared\";\n\nconst ElementWrapper = styled.div`\n  width: 10vh;\n  height: 10vh;\n\n  border-radius: 3vh;\n  background-color: #6dd3ce;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  z-index: 2;\n  position: relative;\n\n  color: white;\n\n  p {\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    border-radius: 2vh;\n    p {\n      font-size: 4vh;\n    }\n  }\n`;\n\nconst ElementBackground = styled.div`\n  position: relative;\n  width: 10vh;\n  height: 10vh;\n  border-radius: 3vh;\n  background-color: #63c4bf;\n\n  z-index: 1;\n  margin-left: 2vh;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    margin-left: 1vh;\n    border-radius: 2vh;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n\n  margin-right: 4vh;\n  ${media.mobile} {\n    margin: 1vh;\n  }\n\n  animation: bob 3s infinite ease;\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n`;\n\nexport default function ArrayElement(props) {\n  return (\n    <Container>\n      <ElementWrapper>\n        <p>{props.value}</p>\n      </ElementWrapper>\n      <ElementBackground />\n    </Container>\n  );\n}\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media } from \"../../Shared\";\nimport ArrayElement from \"./ArrayElement\";\nimport React, { useState, useEffect } from \"react\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-right: 10%;\n  width: 100vw;\n\n  justify-content: center;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    height: 60vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst Item = styled.div`\n  min-width: 300px;\n  width: 30vw;\n  height: auto;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n  margin-bottom: 1vh;\n\n  h1 {\n    font-size: 8vh;\n    font-weight: bolder;\n    color: white;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin: 2vh;\n    margin-top: 4vh;\n    transform: translateY(-30%);\n  }\n\n  ${media.mobile} {\n    width: 90vw;\n    border-radius: 8vh;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: auto;\n  height: 10vh;\n  background-color: #78fc59;\n  border-radius: 4vh;\n  margin-left: 1vw;\n  margin-right: 1vw;\n  align-items: center;\n  align-self: center;\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    height: 6vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst ArrayHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  background-color: transparent;\n  height: auto;\n  width: 38vw;\n  padding-top: 2vh;\n\n  align-items: center;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst ControlHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-auto-rows: 1fr;\n  position: relative;\n  height: 12vh;\n  margin-bottom: 2vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  margin-top: 2vh;\n  background-color: orange;\n  border-radius: 2vh;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 0vh;\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction ArrayVis() {\n  const [arrayLink, setArrayLink] = useState([]);\n  const [positionLink, setPositionLink] = useState([]);\n  const [arrayValue, setArrayValue] = useState(10);\n  const [arrayPosition, setArrayPosition] = useState(0);\n  const [arrayRotation, setArrayRotation] = useState(\"\");\n  const [arrayMovement, setArrayMovement] = useState(\"\");\n  const [indexToChange, setIndexToChange] = useState(null);\n  const [arrayID, setArrayID] = useState(0);\n  const [shouldChange, setShouldChange] = useState(0);\n\n  //For Links Between\n\n  const movementMap = [\n    \"translate(0vh, -4vh) rotate(20deg)\",\n    \"translate(-6vh, -4vh) rotate(-20deg)\",\n    /* \"translate(6vh, -4vh) rotate(-20deg)\",\n    \"translate(5vh, -4vh) rotate(200deg)\",*/\n  ];\n\n  //1 and 3 are the same\n  const arrayMovementMap = [\"translate(5vh, 0vh) \", \" translate(-5vh, 0vh) \"];\n\n  //Will run through 3 possible states\n  const [movementIterator, setMovementIterator] = useState(0);\n  const [transform, setTransform] = useState(movementMap[movementIterator]);\n\n  const [arrayTransform, setArrayTransform] = useState(\n    arrayMovementMap[movementIterator]\n  );\n\n  const [changer, setChanger] = useState(0);\n\n  const initialArray = useEffect(() => {\n    setArrayLink([\n      ...arrayLink,\n      {\n        arrayValue,\n        arrayID,\n      },\n    ]);\n\n    setPositionLink([\n      ...positionLink,\n      {\n        arrayValue,\n        arrayID,\n      },\n    ]);\n\n    setArrayID(arrayID + 1);\n    setMovementIterator(1);\n  }, [changer]);\n\n  const run5times = useEffect(() => {\n    if (changer < 4) {\n      setChanger(changer + 1);\n      setArrayValue(arrayValue + 1);\n    }\n  }, [arrayLink]);\n\n  function handleUpdateElement() {\n    console.log(\"Workin!\");\n    setIndexToChange(\n      //Finds where the ID is the same as the entered position\n      arrayLink.findIndex((array) => array.arrayID == arrayPosition)\n    );\n\n    console.log(\"ID: \" + arrayLink[3].arrayID);\n\n    setShouldChange(shouldChange + 1);\n  }\n\n  const changeArray = useEffect(() => {\n    console.log(\"To change: \" + indexToChange);\n    console.log(\"Position: : \" + arrayPosition);\n    //Stops from accessing undefined\n    //Should change means that it is called whenever button pressed, cause ID can be same as before\n    if (shouldChange > 0 && typeof arrayLink[indexToChange] !== \"undefined\") {\n      handleUpdate(indexToChange);\n    }\n  }, [shouldChange]);\n\n  const handleUpdate = (index) => {\n    let newArrayLink = [...arrayLink];\n    newArrayLink[index].arrayValue = arrayValue;\n    setArrayLink(newArrayLink);\n    //setArrayLink({ ...arrayLink, [array.arrayValue]: arrayValue });\n  };\n\n  return (\n    <AlgorithmsWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/datastructures\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>array</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description=\"arrays are a way of storing data.\n            arrays are made up of ‘elements’, which\n            store one piece of data each. each\n            element is stored directly next to the\n            previous one in memory (contiguity),\n            meaning access is fast, but new elements\n            cannot be added once the array has been made\n            \"\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description=\"arrays are best used in applications\n            where data will often be accessed,\n            as accessing an element is inexpensive.\n            however, this comes at the cost of\n            a greater insertion/deletion cost than\n            something like a linked list.  \n            \"\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          {/*   <Array value={10} />\n          <ArrayLine\n            rotation={\"translate(-2vh, 1vh) rotate(-20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={20} movement={\"5vw\"} />\n          <ArrayLine\n            rotation={\"translate(-3vh, 0vh) rotate(20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={30} movement={\"-5vw\"} />*/}\n\n          <ArrayHolder>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <h1>Value:</h1>\n              <ArrayPosHolder>\n                {arrayLink.map(({ arrayValue, arrayID }) => (\n                  <React.Fragment>\n                    <ArrayElement\n                      value={arrayValue}\n                      id={arrayID}\n                      movement={arrayTransform}\n                    />\n                  </React.Fragment>\n                ))}\n              </ArrayPosHolder>\n              <h1>Position:</h1>\n              <ArrayPosHolder>\n                {positionLink.map(({ arrayValue, arrayID }) => (\n                  <React.Fragment>\n                    <ArrayElement\n                      value={arrayID}\n                      id={arrayID}\n                      movement={arrayTransform}\n                    />\n                  </React.Fragment>\n                ))}\n              </ArrayPosHolder>\n            </div>\n          </ArrayHolder>\n\n          <ControlHolder>\n            <InputValue\n              placeholder=\"value\"\n              onChange={(event) => setArrayValue(event.target.value)}\n            />\n            <InputValue\n              placeholder=\"position\"\n              onChange={(event) => setArrayPosition(event.target.value)}\n            />\n            <AddButton onClick={() => handleUpdateElement()}>\n              <p>+</p>\n            </AddButton>\n          </ControlHolder>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default ArrayVis;\n","import styled from \"styled-components\";\nimport { media } from \"../../Shared\";\n\nconst ElementWrapper = styled.div`\n  width: 10vh;\n\n  height: 10vh;\n  margin-top: 1vh;\n\n  border-radius: 3vh;\n  background-color: #7c7c7c;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  z-index: 2;\n  position: relative;\n\n  color: white;\n\n  p {\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    border-radius: 2vh;\n    p {\n      font-size: 4vh;\n    }\n  }\n`;\n\nconst ElementBackground = styled.div`\n  position: relative;\n  width: 10vh;\n  height: 10vh;\n  border-radius: 3vh;\n  background-color: #a8a8a8;\n  margin-top: 1vh;\n\n  z-index: 1;\n  margin-left: 2vh;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    margin-left: 1vh;\n    border-radius: 2vh;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n\n  margin-right: 4vh;\n  ${media.mobile} {\n    margin: 1vh;\n  }\n\n  animation: bob 3s infinite ease;\n\n  p {\n    color: white;\n    font-size: 3vh;\n    font-weight: bold;\n    padding: 0px;\n    margin: 0px;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n`;\n\nexport default function ArrayElement(props) {\n  console.log(props.value);\n  return (\n    <Container>\n      <p>{props.id}</p>\n      <p style={{ color: props.textColour, marginLeft: \"1vh\" }}>\n        {\" \"}\n        {props.elementState}\n      </p>\n      <ElementWrapper style={{ backgroundImage: props.foreground }}>\n        {props.textInsert}\n      </ElementWrapper>\n      <ElementBackground style={{ backgroundImage: props.background }} />\n    </Container>\n  );\n}\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media } from \"../../Shared\";\nimport ArrayElement from \"./ArrayElement\";\nimport React, { useState, useEffect } from \"react\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-right: 10%;\n  width: 100vw;\n\n  justify-content: center;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    height: 60vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst Item = styled.div`\n  min-width: 300px;\n  width: 30vw;\n  height: auto;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n  margin-bottom: 1vh;\n\n  h1 {\n    font-size: 8vh;\n    font-weight: bolder;\n    color: white;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin: 2vh;\n    margin-top: 4vh;\n    transform: translateY(-30%);\n  }\n\n  ${media.mobile} {\n    width: 90vw;\n    border-radius: 8vh;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: auto;\n  height: 10vh;\n  background-color: #78fc59;\n  border-radius: 4vw;\n  margin-left: 1vh;\n  margin-right: 1vh;\n  align-items: center;\n  align-self: center;\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    height: 6vh;\n    border-radius: 2vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst ArrayHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  background-color: transparent;\n  height: auto;\n  width: 38vw;\n  padding-top: 2vh;\n\n  align-items: center;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst ControlHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-auto-rows: 1fr;\n  position: relative;\n  height: 12vh;\n  margin-bottom: 2vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  margin-top: 2vh;\n  background-color: orange;\n  border-radius: 2vh;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: transparent;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction BinarySearch() {\n  const [arrayLink, setArrayLink] = useState([]);\n  const [positionLink, setPositionLink] = useState([]);\n  const [arrayValue, setArrayValue] = useState(10);\n  const [arrayPosition, setArrayPosition] = useState(0);\n  const [indexToChange, setIndexToChange] = useState(null);\n  const [arrayID, setArrayID] = useState(0);\n  const [shouldChange, setShouldChange] = useState(0);\n\n  const [foreground, setForeground] = useState(null);\n  const [background, setBackground] = useState(null);\n  const [elementState, setElementState] = useState(null);\n  const [elementTextColour, setElementTextColour] = useState(null);\n\n  const [found, setFound] = useState(null);\n\n  //For Links Between\n\n  const movementMap = [\n    \"translate(0vh, -4vh) rotate(20deg)\",\n    \"translate(-6vh, -4vh) rotate(-20deg)\",\n    /* \"translate(6vh, -4vh) rotate(-20deg)\",\n    \"translate(5vh, -4vh) rotate(200deg)\",*/\n  ];\n\n  //1 and 3 are the same\n  const arrayMovementMap = [\"translate(5vh, 0vh) \", \" translate(-5vh, 0vh) \"];\n\n  //Will run through 3 possible states\n  const [movementIterator, setMovementIterator] = useState(0);\n  const [transform, setTransform] = useState(movementMap[movementIterator]);\n\n  const [arrayTransform, setArrayTransform] = useState(\n    arrayMovementMap[movementIterator]\n  );\n\n  //For binary search:\n  /*const [middle, setMiddle] = useState(null);\n  const [low, setLow] = useState(null);\n  const [mid, setMid] = useState(null);\n  const [high, setHigh] = useState(null);*/\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  async function binarySearchFunction(array, low, high, target) {\n    if (high >= low) {\n      let mid = Math.floor(low + (high - low) / 2);\n\n      updateColours(low, mid, high);\n\n      if (array[mid].arrayValue == target) {\n        setFound(\"found at index \" + mid);\n        return;\n      }\n\n      if (array[mid].arrayValue > target) {\n        setFound(array[mid].arrayValue + \" is greater than \" + target);\n        await sleep(4000);\n        return binarySearchFunction(array, low, mid - 1, target);\n      }\n\n      await sleep(4000);\n      setFound(array[mid].arrayValue + \"is less than\" + target);\n      return binarySearchFunction(array, mid + 1, high, target);\n    }\n    setFound(\"not found\");\n    return;\n  }\n\n  function updateColours(low, mid, high) {\n    let newArrayLink = [...arrayLink];\n\n    //Low\n    newArrayLink[low].foreground =\n      \"linear-gradient(to  right, #44BAB5, #44BAB5)\";\n    newArrayLink[low].background =\n      \"linear-gradient(to  right, #2D9D98, #2D9D98)\";\n    newArrayLink[low].elementState = \" \";\n    newArrayLink[low].elementTextColour = \"#2D9D98\";\n\n    //Mid\n    newArrayLink[mid].foreground =\n      \"linear-gradient(to  right, #5ECC44, #5ECC44)\";\n    newArrayLink[mid].background =\n      \"linear-gradient(to  right, #4AA734, #4AA734)\";\n    newArrayLink[mid].elementState = \" \";\n    newArrayLink[mid].elementTextColour = \"#4AA734\";\n\n    //High\n    newArrayLink[high].foreground =\n      \"linear-gradient(to  right, #FF3F1A, #FF3F1A)\";\n    newArrayLink[high].background =\n      \"linear-gradient(to  right, #CB391E, #CB391E)\";\n    newArrayLink[high].elementState = \" \";\n    newArrayLink[high].elementTextColour = \"#CB391E\";\n\n    if (low === mid) {\n      newArrayLink[mid].foreground =\n        \"linear-gradient(to right, blue 0%,blue 50%,#000000 50%,green 50%,green 100%)\";\n      newArrayLink[high].elementState = \" \";\n      newArrayLink[high].elementTextColour = \"white\";\n    }\n\n    if (mid === high) {\n      newArrayLink[mid].foreground =\n        \"linear-gradient(to right, green 0%,green 50%,#000000 50%,red 50%,red 100%)\";\n      newArrayLink[high].elementState = \" \";\n      newArrayLink[high].elementTextColour = \"white\";\n    }\n\n    if (low === high) {\n      newArrayLink[low].foreground =\n        \"linear-gradient(to right, blue 0%,blue 50%,#000000 50%,red 50%,red 100%)\";\n      newArrayLink[high].elementState = \" \";\n      newArrayLink[high].elementTextColour = \"white\";\n    }\n\n    if (low === high && low === mid) {\n      newArrayLink[mid].foreground =\n        \"linear-gradient(to right, #44BAB5 0%,#44BAB5 33%,#000000 33%,#5ECC44 33%,#5ECC44 66%, #000000 66%, #FF3F1A 66%,#FF3F1A 100%)\";\n      newArrayLink[high].elementState = \"\";\n      newArrayLink[high].elementTextColour = \"gold\";\n    }\n\n    let i;\n    for (i = 0; i < 10; i++) {\n      if (i !== low && i !== mid && i !== high) {\n        if (i > low && i < high) {\n          newArrayLink[i].foreground =\n            \"linear-gradient(to  right, #B492BE, #B492BE)\";\n          newArrayLink[i].background =\n            \"linear-gradient(to  right, #897390, #897390)\";\n          newArrayLink[i].elementState = \"\";\n          newArrayLink[i].elementTextColour = \"\";\n        } else {\n          newArrayLink[i].foreground =\n            \"linear-gradient(to  right, #7c7c7c, #7c7c7c)\";\n          newArrayLink[i].background =\n            \"linear-gradient(to  right, #a8a8a8, #a8a8a8)\";\n          newArrayLink[i].elementState = \"\";\n          newArrayLink[i].elementTextColour = \"\";\n        }\n      }\n    }\n\n    setArrayLink(newArrayLink);\n    //setArrayLink({ ...arrayLink, [array.arrayValue]: arrayValue });\n  }\n\n  function changeArrayFromInput(value, id) {\n    console.log(id);\n    let newArrayLink = [...arrayLink];\n    newArrayLink[id].arrayValue = value;\n    setArrayLink(newArrayLink);\n    console.log((newArrayLink[id].arrayValue = value));\n  }\n\n  const [changer, setChanger] = useState(0);\n\n  const initialArray = useEffect(() => {\n    setArrayLink([\n      ...arrayLink,\n      {\n        arrayValue,\n        arrayID,\n        foreground,\n        background,\n        elementState,\n        elementTextColour,\n      },\n    ]);\n    setArrayID(arrayID + 1);\n  }, [changer]);\n\n  const run10times = useEffect(() => {\n    if (changer < 9) {\n      setChanger(changer + 1);\n      setArrayValue(arrayValue + 1);\n    }\n  }, [arrayLink]);\n\n  return (\n    <AlgorithmsWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/algorithms\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>binary search</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description=\"arrays are a way of storing data.\n            arrays are made up of ‘elements’, which\n            store one piece of data each. each\n            element is stored directly next to the\n            previous one in memory (contiguity),\n            meaning access is fast, but new elements\n            cannot be added once the array has been made\n            \"\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description=\"arrays are best used in applications\n            where data will often be accessed,\n            as accessing an element is inexpensive.\n            however, this comes at the cost of\n            a greater insertion/deletion cost than\n            something like a linked list.  \n            \"\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          {/*   <Array value={10} />\n          <ArrayLine\n            rotation={\"translate(-2vh, 1vh) rotate(-20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={20} movement={\"5vw\"} />\n          <ArrayLine\n            rotation={\"translate(-3vh, 0vh) rotate(20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={30} movement={\"-5vw\"} />*/}\n\n          <ArrayHolder>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <h1>status: {found}</h1>\n\n              <ArrayPosHolder>\n                {arrayLink.map(\n                  ({\n                    arrayValue,\n                    arrayID,\n                    foreground,\n                    background,\n                    elementState,\n                    elementTextColour,\n                  }) => (\n                    <React.Fragment>\n                      <ArrayElement\n                        value={arrayValue}\n                        id={arrayID}\n                        movement={arrayTransform}\n                        foreground={foreground}\n                        background={background}\n                        elementState={elementState}\n                        textColour={elementTextColour}\n                        textInsert={\n                          <TextInsert\n                            placeholder={arrayValue}\n                            onChange={(event) =>\n                              changeArrayFromInput(event.target.value, arrayID)\n                            }\n                          ></TextInsert>\n                        }\n                      />\n                    </React.Fragment>\n                  )\n                )}\n              </ArrayPosHolder>\n            </div>\n          </ArrayHolder>\n\n          <ControlHolder>\n            <InputValue\n              placeholder=\"find\"\n              onChange={(event) => setArrayValue(event.target.value)}\n            />\n\n            <AddButton\n              onClick={() => binarySearchFunction(arrayLink, 0, 9, arrayValue)}\n            >\n              <p>+</p>\n            </AddButton>\n          </ControlHolder>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default BinarySearch;\n","import styled from \"styled-components\";\nimport { media } from \"../../Shared\";\n\nconst ElementWrapper = styled.div`\n  width: 10vh;\n\n  height: 10vh;\n  margin-top: 1vh;\n\n  border-radius: 3vh;\n  background-color: #7c7c7c;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  z-index: 2;\n  position: relative;\n\n  color: white;\n\n  p {\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    border-radius: 2vh;\n    p {\n      font-size: 4vh;\n    }\n  }\n`;\n\nconst ElementBackground = styled.div`\n  position: relative;\n  width: 10vh;\n  height: 10vh;\n  border-radius: 3vh;\n  background-color: #a8a8a8;\n  margin-top: 1vh;\n\n  z-index: 1;\n  margin-left: 2vh;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  ${media.mobile} {\n    width: 7vh;\n    height: 7vh;\n    margin-left: 1vh;\n    border-radius: 2vh;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n\n  margin-right: 4vh;\n  ${media.mobile} {\n    margin: 1vh;\n  }\n\n  animation: bob 3s infinite ease;\n\n  p {\n    color: white;\n    font-size: 3vh;\n    font-weight: bold;\n    padding: 0px;\n    margin: 0px;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n`;\n\nexport default function ArrayElement(props) {\n  return (\n    <Container>\n      <p>{props.id}</p>\n      <p style={{ color: props.textColour, marginLeft: \"1vh\" }}>\n        {\" \"}\n        {props.elementState}\n      </p>\n      <ElementWrapper style={{ backgroundImage: props.foreground }}>\n        {props.textInsert}\n      </ElementWrapper>\n      <ElementBackground style={{ backgroundImage: props.background }} />\n    </Container>\n  );\n}\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media } from \"../../Shared\";\nimport ArrayElement from \"./ArrayElement\";\nimport React, { useState, useEffect } from \"react\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: auto;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n  overflow-x: scroll;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: grid;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-left: 10%;\n  width: 100vw;\n  overflow: visible;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  width: 66%;\n  background-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  margin-right: 10%;\n  width: 100vw;\n\n  justify-content: center;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    height: 60vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst Item = styled.div`\n  min-width: 300px;\n  width: 30vw;\n  height: auto;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n  margin-bottom: 1vh;\n\n  h1 {\n    font-size: 8vh;\n    font-weight: bolder;\n    color: white;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin: 2vh;\n    margin-top: 4vh;\n    transform: translateY(-30%);\n  }\n\n  ${media.mobile} {\n    width: 90vw;\n    border-radius: 8vh;\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-left: 1vw;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n\n    font-size: 3vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: auto;\n  min-width: 10vw;\n  height: 10vh;\n  background-color: #ffc324;\n  border-radius: 4vh;\n  margin-left: 1vw;\n  margin-right: 1vw;\n  align-items: center;\n  align-self: center;\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    height: 6vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst ArrayHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  background-color: transparent;\n  height: auto;\n  width: 38vw;\n  padding-top: 2vh;\n\n  align-items: center;\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst ControlHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: 1fr;\n  position: relative;\n  height: 12vh;\n  margin-bottom: 2vh;\n  align-items: center;\n  justify-content: center;\n  max-width: 90vw;\n\n  z-index: 0;\n  margin-top: 2vh;\n  background-color: transparent;\n  border-radius: 2vh;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: transparent;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction QuickSort() {\n  const [arrayLink, setArrayLink] = useState([]);\n  const [positionLink, setPositionLink] = useState([]);\n  const [arrayValue, setArrayValue] = useState(\n    Math.floor(Math.random() * 99) + 1\n  );\n  const [arrayPosition, setArrayPosition] = useState(0);\n  const [indexToChange, setIndexToChange] = useState(null);\n  const [arrayID, setArrayID] = useState(0);\n  const [shouldChange, setShouldChange] = useState(0);\n\n  const [foreground, setForeground] = useState(null);\n  const [background, setBackground] = useState(null);\n  const [elementState, setElementState] = useState(null);\n  const [elementTextColour, setElementTextColour] = useState(null);\n\n  const [found, setFound] = useState(null);\n\n  //For Links Between\n\n  const movementMap = [\n    \"translate(0vh, -4vh) rotate(20deg)\",\n    \"translate(-6vh, -4vh) rotate(-20deg)\",\n    /* \"translate(6vh, -4vh) rotate(-20deg)\",\n    \"translate(5vh, -4vh) rotate(200deg)\",*/\n  ];\n\n  //1 and 3 are the same\n  const arrayMovementMap = [\"translate(5vh, 0vh) \", \" translate(-5vh, 0vh) \"];\n\n  //Will run through 3 possible states\n  const [movementIterator, setMovementIterator] = useState(0);\n  const [transform, setTransform] = useState(movementMap[movementIterator]);\n\n  const [arrayTransform, setArrayTransform] = useState(\n    arrayMovementMap[movementIterator]\n  );\n\n  async function quickSortFunction(low, high) {\n    if (low < high) {\n      let pi = await partition(low, high);\n      console.log(\"Pi: \" + pi);\n\n      quickSortFunction(low, pi - 1);\n\n      await sleep(2000);\n\n      quickSortFunction(pi + 1, high);\n      await sleep(2000);\n    }\n\n    console.log(\"finished!\");\n  }\n\n  async function partition(low, high) {\n    let pivot = arrayLink[high];\n\n    let i = low - 1;\n    let j;\n    console.log(arrayLink[low].arrayValue);\n    console.log(arrayLink[high].arrayValue);\n\n    for (j = low; j <= high - 1; j++) {\n      updateColours(i, j, high);\n      // If current element is smaller than the pivot\n      setFound(\"j is not greater than \" + pivot.arrayValue);\n\n      if (arrayLink[j].arrayValue < pivot.arrayValue) {\n        console.log(\"called!\");\n        i++; // increment index of smaller element\n        setFound(\"j is greater than \" + pivot.arrayValue);\n        updateColours(i, j, high);\n\n        setFound(\"i and j will swap \");\n        //Maybe need to swap here instead for colours\n        await swap(i, j);\n      }\n      await sleep(1000);\n    }\n\n    await sleep(2000);\n    setFound(\"pivot will swap with i + 1 \");\n    await swap(i + 1, high);\n    return Promise.resolve(i + 1);\n  }\n\n  async function updateColours(i, j, high) {\n    let newArrayLink = [...arrayLink];\n\n    console.log(\"j: \" + j);\n    newArrayLink[j].foreground = \"linear-gradient(to  right, #5ECC44, #5ECC44)\";\n    newArrayLink[j].background = \"linear-gradient(to  right, #4AA734, #4AA734)\";\n    newArrayLink[j].elementState = \"j \";\n    newArrayLink[j].elementTextColour = \"#4AA734\";\n\n    if (i >= 0) {\n      newArrayLink[i].foreground =\n        \"linear-gradient(to  right, #44BAB5, #44BAB5)\";\n      newArrayLink[i].background =\n        \"linear-gradient(to  right, #2D9D98, #2D9D98)\";\n      newArrayLink[i].elementState = \"i \";\n      newArrayLink[i].elementTextColour = \"#2D9D98\";\n    }\n    newArrayLink[high].foreground =\n      \"linear-gradient(to  right, #FF3F1A, #FF3F1A)\";\n    newArrayLink[high].background =\n      \"linear-gradient(to  right, #CB391E, #CB391E)\";\n    newArrayLink[high].elementState = \"pivot \";\n    newArrayLink[high].elementTextColour = \"#CB391E\";\n\n    let c;\n    for (c = 0; c < 10; c++) {\n      if (c !== i && c !== j && c !== high) {\n        if (c > i && c < high) {\n          newArrayLink[c].foreground =\n            \"linear-gradient(to  right, #B492BE, #B492BE)\";\n          newArrayLink[c].background =\n            \"linear-gradient(to  right, #897390, #897390)\";\n          newArrayLink[c].elementState = \"\";\n          newArrayLink[c].elementTextColour = \"\";\n        } else {\n          newArrayLink[c].foreground =\n            \"linear-gradient(to  right, #7c7c7c, #7c7c7c)\";\n          newArrayLink[c].background =\n            \"linear-gradient(to  right, #a8a8a8, #a8a8a8)\";\n          newArrayLink[c].elementState = \"\";\n          newArrayLink[c].elementTextColour = \"\";\n        }\n      }\n    }\n\n    setArrayLink(newArrayLink);\n    await sleep(2000);\n  }\n\n  async function swap(i, j) {\n    await sleep(1000);\n    let highlightColours = [...arrayLink];\n    highlightColours[i].foreground =\n      \"linear-gradient(to  right, #D059FC, #D059FC)\";\n    highlightColours[i].background =\n      \"linear-gradient(to  right, #BD08FF, #BD08FF)\";\n    highlightColours[j].foreground =\n      \"linear-gradient(to  right, #D059FC, #D059FC)\";\n    highlightColours[j].background =\n      \"linear-gradient(to  right, #BD08FF, #BD08FF)\";\n\n    setArrayLink(highlightColours);\n\n    await sleep(1000);\n\n    let temp = arrayLink[i].arrayValue;\n    let newArrayLink = [...arrayLink];\n\n    newArrayLink[i].arrayValue = newArrayLink[j].arrayValue;\n    newArrayLink[j].arrayValue = temp;\n\n    setArrayLink(newArrayLink);\n    await sleep(1000);\n  }\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function changeArrayFromInput(value, id) {\n    console.log(id);\n    let newArrayLink = [...arrayLink];\n    newArrayLink[id].arrayValue = value;\n    setArrayLink(newArrayLink);\n    console.log((newArrayLink[id].arrayValue = value));\n  }\n\n  const [changer, setChanger] = useState(0);\n\n  const initialArray = useEffect(() => {\n    setArrayLink([\n      ...arrayLink,\n      {\n        arrayValue,\n        arrayID,\n        foreground,\n        background,\n        elementState,\n        elementTextColour,\n      },\n    ]);\n    setArrayID(arrayID + 1);\n  }, [changer]);\n\n  const run10times = useEffect(() => {\n    if (changer < 9) {\n      setChanger(changer + 1);\n      setArrayValue(Math.floor(Math.random() * 99) + 1);\n    }\n  }, [arrayLink]);\n\n  return (\n    <AlgorithmsWrapper>\n      <TopWrapper>\n        <BackLink as={Link} to=\"/algorithms\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>quick sort</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description=\"arrays are a way of storing data.\n            arrays are made up of ‘elements’, which\n            store one piece of data each. each\n            element is stored directly next to the\n            previous one in memory (contiguity),\n            meaning access is fast, but new elements\n            cannot be added once the array has been made\n            \"\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description=\"arrays are best used in applications\n            where data will often be accessed,\n            as accessing an element is inexpensive.\n            however, this comes at the cost of\n            a greater insertion/deletion cost than\n            something like a linked list.  \n            \"\n          />\n        </ItemRowDescription>\n        <ItemRowContent>\n          {/*   <Array value={10} />\n          <ArrayLine\n            rotation={\"translate(-2vh, 1vh) rotate(-20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={20} movement={\"5vw\"} />\n          <ArrayLine\n            rotation={\"translate(-3vh, 0vh) rotate(20deg) \"}\n            movement={\"5vw\"}\n          />\n          <Array value={30} movement={\"-5vw\"} />*/}\n\n          <ArrayHolder>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <h1>status: {found}</h1>\n              <ArrayPosHolder>\n                {arrayLink.map(\n                  ({\n                    arrayValue,\n                    arrayID,\n                    foreground,\n                    background,\n                    elementState,\n                    elementTextColour,\n                  }) => (\n                    <React.Fragment>\n                      <ArrayElement\n                        value={arrayValue}\n                        id={arrayID}\n                        movement={arrayTransform}\n                        foreground={foreground}\n                        background={background}\n                        elementState={elementState}\n                        textColour={elementTextColour}\n                        textInsert={\n                          <TextInsert\n                            placeholder={arrayValue}\n                            onChange={(event) =>\n                              changeArrayFromInput(event.target.value, arrayID)\n                            }\n                          ></TextInsert>\n                        }\n                      />\n                    </React.Fragment>\n                  )\n                )}\n              </ArrayPosHolder>\n            </div>\n          </ArrayHolder>\n\n          <ControlHolder>\n            <AddButton onClick={() => quickSortFunction(0, 9)}>\n              <p>sort</p>\n            </AddButton>\n          </ControlHolder>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default QuickSort;\n","import styled from \"styled-components\";\nimport { media } from \"../../Shared\";\n\nconst ElementWrapper = styled.div`\n  width: 10vh;\n  height: 10vh;\n\n  border-radius: 50%;\n  background-color: #7c7c7c;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 2;\n  color: white;\n\n  p {\n    font-size: 5vh;\n    font-weight: bold;\n  }\n`;\n\nconst ElementBackground = styled.div`\n  position: relative;\n  width: 10vh;\n  height: 10vh;\n  border-radius: 50%;\n  background-color: #a8a8a8;\n\n  margin-left: 2vh;\n\n  grid-column-start: 1;\n  grid-column-end: 10;\n  grid-row-start: 1;\n`;\n\nconst Container = styled.div`\n  background-color: purple;\n  display: grid;\n\n  margin-right: 4vh;\n  ${media.mobile} {\n    margin: 1vh;\n  }\n\n  animation: bob 3s infinite ease;\n\n  p {\n    color: white;\n    font-size: 3vh;\n    font-weight: bold;\n    padding: 0px;\n    margin: 0px;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n`;\n\nexport default function ArrayElement(props) {\n  console.log(props.value);\n  return (\n    <Container>\n      <p style={{ color: props.textColour, marginLeft: \"1vh\" }}></p>\n      <ElementWrapper style={{ backgroundImage: props.foreground }}>\n        <p> {props.value}</p>\n      </ElementWrapper>\n      <ElementBackground style={{ backgroundImage: props.background }} />\n    </Container>\n  );\n}\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media } from \"../../Shared\";\nimport ArrayElement from \"./ArrayElement\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Sketch from \"react-p5\";\nimport p5 from \"p5\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: purple;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  margin-left: 10%;\n  width: 100vw;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  width: 66%;\n  background-color: orange;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  margin-right: 10%;\n  width: 100vw;\n\n  justify-content: center;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    height: 60vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst Item = styled.div`\n  min-width: 300px;\n  width: 30vw;\n  height: 35vh;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  h1 {\n    font-size: 8vh;\n    font-weight: bolder;\n    color: white;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin-left: 10%;\n    margin-right: 10%;\n    margin-bottom: 10%;\n    transform: translateY(-30%);\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-top: 2vh;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n  margin-left: 1vh;\n  margin-right: vh;\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n    margin-top: 0vh;\n    font-size: 3vh;\n    padding-left: 1vh;\n    padding-right: 1vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #78fc59;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst BFSHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n\n  background-color: red;\n  height: 45vh;\n  width: 38vw;\n  padding-top: 2vh;\n\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst BFSRow = styled.div`\n  display: grid;\n\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n`;\n\nconst ControlHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  height: 12vh;\n  margin-bottom: 2vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  background-color: blue;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: orange;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction BFS() {\n  const holderRef = useRef();\n  //Frame\n  const [globalWidth, setGlobalWidth] = useState(0);\n  const [globalHeight, setGlobalHeight] = useState(0);\n\n  //Nodes\n  const [nodeLink, setNodeLink] = useState([]);\n  const [nodeValue, setNodeValue] = useState(37);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeNext, setNodeNext] = useState(null);\n  const [nodeX, setNodeX] = useState(200);\n  const [nodeY, setNodeY] = useState(200);\n  const [looper, setLooper] = useState(0);\n  const [changer, setChanger] = useState(0);\n  const [matrixLoaded, setMatrixLoaded] = useState(false);\n  const [nodesSet, setNodesSet] = useState(false);\n\n  let secondLinks;\n\n  window.addEventListener(\"resize\", function () {\n    // your custom logic\n  });\n\n  const [adjacencyMatrix, setAdjacencyMatrix] = useState([\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ]);\n\n  const [centerNode, setCenterNode] = useState(null);\n  const [centerIndex, setCenterIndex] = useState(null);\n\n  const createNodes = useEffect(() => {\n    let screenWidth = holderRef.current.getBoundingClientRect().width;\n    let screenHeight = holderRef.current.getBoundingClientRect().height;\n    let nodeID = 0;\n    let nodeValue = 47;\n    let nodeLinkTemp = [];\n    let protection = 0;\n\n    while (nodeLinkTemp.length < 9) {\n      var Node = {\n        x: Math.floor(Math.random() * (screenWidth - 100) + 50),\n        y: Math.floor(Math.random() * (screenHeight * 0.7 - 100) + 50),\n        r: 80,\n        nodeID: nodeID,\n        nodeValue: Math.floor(Math.random() * 99),\n        isCenter: false,\n        foreground: \"pink\",\n      };\n\n      //Ensures never overlaps\n      var isOverlapping = false;\n      for (let j = 0; j < nodeLinkTemp.length; j++) {\n        var otherNode = nodeLinkTemp[j];\n        var a = Node.x - otherNode.x;\n        var b = Node.y - otherNode.y;\n        var d = Math.sqrt(a * a + b * b);\n\n        if (d < (Node.r + otherNode.r) * 0.8) {\n          isOverlapping = true;\n        }\n      }\n\n      //If it is good, push it\n      if (!isOverlapping) {\n        nodeLinkTemp.push(Node);\n        nodeID++;\n      }\n\n      protection++;\n      if (protection > 100000) {\n        console.log(\"too many circles\");\n        break;\n      }\n\n      setNodeLink(nodeLinkTemp);\n    }\n  }, []);\n\n  const setNexts = useEffect(() => {\n    if (looper > 6) {\n      let temp = [...nodeLink];\n\n      for (let j = 0; j < nodeLink.length - 1; j++) {\n        temp[j].next = temp[j + 1];\n      }\n\n      setNodeLink(temp);\n    }\n  }, [looper]);\n\n  console.log(nodeLink);\n\n  function setup(p5, canvasParentRef) {\n    let frameWidth = holderRef.current.getBoundingClientRect().width;\n    let frameHeight = holderRef.current.getBoundingClientRect().height;\n\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n\n    p5.createCanvas(frameWidth, frameHeight * 0.8).parent(canvasParentRef);\n\n    p5.background(\"#e3dac9\");\n\n    //center\n    let d;\n    let smallest = 999;\n    let currentCenter;\n    let currentCenterIndex;\n\n    //trying dist;\n    for (let k = 0; k < nodeLink.length; k++) {\n      d = parseInt(\n        p5.dist(\n          frameWidth / 2,\n          (frameHeight * 0.8) / 2,\n          nodeLink[k].x,\n          nodeLink[k].y\n        )\n      );\n\n      if (Math.abs(d) < smallest) {\n        smallest = Math.abs(d);\n        currentCenter = nodeLink[k];\n        currentCenterIndex = k;\n      }\n    }\n\n    setCenterNode(currentCenter);\n    setCenterIndex(currentCenterIndex);\n\n    linkMaker(p5, 3, currentCenterIndex);\n    linkMaker(p5, 2, secondLinks);\n  }\n\n  function linkMaker(p5, numConnections, nodeIndex) {\n    console.log(\"Linkmaker Clay\");\n\n    let distance;\n    let smallest = 9999;\n    let nodeToAdd = null;\n    let indexToAdd = 0;\n    let distanceToAdd = 0;\n    let prevNodes = [];\n    let prevDist = [];\n    let doneBefore = false;\n\n    let extraConnect;\n    //trying dist;\n\n    for (let w = 0; w < numConnections; w++) {\n      smallest = 9999;\n      nodeToAdd = null;\n      doneBefore = false;\n\n      for (let k = 0; k < nodeLink.length; k++) {\n        //Makes sure it is not comparing against itself\n        if (k != nodeIndex) {\n          distance = parseInt(\n            p5.dist(\n              nodeLink[nodeIndex].x,\n              nodeLink[nodeIndex].y,\n              nodeLink[k].x,\n              nodeLink[k].y\n            )\n          );\n\n          //Checks if distance has been done before\n          for (let m = 0; m < prevDist.length; m++) {\n            if (distance == prevDist[m]) {\n              doneBefore = true;\n            }\n          }\n\n          //Sets smallest if not done before\n          if (Math.abs(distance) < smallest && !doneBefore) {\n            smallest = Math.abs(distance);\n            nodeToAdd = nodeLink[k];\n            indexToAdd = k;\n            distanceToAdd = distance;\n          }\n        } else {\n          console.log(\"same\");\n        }\n        //End of loop\n        doneBefore = false;\n      }\n\n      prevNodes.push(nodeToAdd);\n\n      prevDist.push(distanceToAdd);\n\n      adjacencyMatrix[indexToAdd][nodeIndex] = 1;\n      adjacencyMatrix[nodeIndex][indexToAdd] = 1;\n\n      secondLinks = indexToAdd;\n    }\n\n    //return prevNodes;\n  }\n\n  function windowResized(p5) {\n    p5.resizeCanvas(\n      holderRef.current.getBoundingClientRect().width,\n      holderRef.current.getBoundingClientRect().height * 0.8\n    );\n  }\n\n  let draw = (p5) => {\n    p5.clear();\n    p5.noStroke();\n    p5.background(\"#e3dac9\");\n\n    let frameWidth = holderRef.current.getBoundingClientRect().width;\n    let frameHeight = holderRef.current.getBoundingClientRect().height;\n\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n    setNodesSet(true);\n\n    for (let m = 0; m < adjacencyMatrix.length; m++) {\n      for (let k = 0; k < adjacencyMatrix.length; k++) {\n        if (adjacencyMatrix[m][k] === 1 && adjacencyMatrix[k][m] == 1) {\n          p5.strokeWeight(20);\n\n          p5.stroke(\"#72ff98\");\n          p5.line(nodeLink[m].x, nodeLink[m].y, nodeLink[k].x, nodeLink[k].y);\n          p5.stroke(\"#9bffb6\");\n          p5.line(\n            nodeLink[m].x + nodeLink[m].r / 6,\n            nodeLink[m].y,\n            nodeLink[k].x + nodeLink[m].r / 6,\n            nodeLink[k].y\n          );\n          p5.noStroke();\n        }\n      }\n    }\n\n    if (activeNode) {\n      p5.strokeWeight(20);\n      p5.stroke(\"#72ff98\");\n      p5.line(activeNode.x, activeNode.y, currX, currY);\n      p5.stroke(\"#9bffb6\");\n      p5.line(\n        activeNode.x + activeNode.r / 6,\n        activeNode.y,\n        currX + +activeNode.r / 6,\n        currY\n      );\n    }\n\n    p5.noStroke();\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      //Background Circle\n      p5.fill(p5.color(\"red\"));\n      p5.ellipse(\n        nodeLink[i].x + nodeLink[i].r / 6,\n        nodeLink[i].y,\n        nodeLink[i].r,\n        nodeLink[i].r\n      );\n\n      //Foreground Circle\n      p5.fill(p5.color(nodeLink[i].foreground));\n      p5.ellipse(nodeLink[i].x, nodeLink[i].y, nodeLink[i].r, nodeLink[i].r);\n    }\n\n    p5.fill(p5.color(\"orange\"));\n    p5.ellipse(centerNode.x, centerNode.y, centerNode.r, centerNode.r);\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      p5.textSize(nodeLink[i].r / 2);\n      p5.fill(p5.color(\"white\")).text(\n        nodeLink[i].nodeID,\n        nodeLink[i].x - nodeLink[i].r / 4,\n        nodeLink[i].y + nodeLink[i].r / 6\n      );\n      p5.fill(p5.color(\"#72ff98\"));\n    }\n\n    //Creating Text\n    //linkMaker(p5, 3, 1);\n  };\n\n  async function addNode() {}\n\n  async function removeNode() {\n    let temp = [...nodeLink];\n    let newTemp;\n\n    console.log(\"nodeValue: \", nodeValue);\n    console.log(\"==\", nodeValue == nodeLink[1].value);\n\n    for (let i = 0; i < temp.length; i++) {\n      nodeLink[i].colour = \"#CB391E\";\n      nodeLink[i].bgColour = \"#DD4125\";\n      await sleep(1000);\n      nodeLink[i].colour = \"#72ff98\";\n      nodeLink[i].bgColour = \"#9bffb6\";\n\n      if (temp[i].value == nodeValue) {\n        nodeLink[i].colour = \"purple\";\n        await sleep(1000);\n        if (i > 0) {\n          temp[i - 1].next = temp[i + 1];\n        }\n\n        for (let j = temp.length - 1; j > i; j--) {\n          temp[j].x = temp[j - 1].x;\n          temp[j].y = temp[j - 1].y;\n        }\n\n        temp.splice(i, 1);\n        setNodeLink(temp);\n        console.log(\"Index: \", i);\n        setNodeY(nodeY - globalHeight / 8);\n        //do nodex\n        break;\n      }\n    }\n  }\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function mouseWheel(event) {\n    console.log(event);\n    for (let m = 0; m < nodeLink.length; m++) {\n      nodeLink[m].y += event._mouseWheelDeltaY / 8;\n    }\n\n    setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n  }\n\n  function mousePressed(p5) {\n    //ISSUE: IF THERE IS A NODE INBETWEEN LINKED DOEST WORK\n    //FIX: CHECK IF LINKED, LOOP THRU IF NOT\n\n    currX = p5.mouseX;\n    currY = p5.mouseY;\n\n    //First, the closest two nodes will be found\n    let closestIndex;\n    let secondIndex;\n\n    let closestLimit = 0;\n\n    let closestDistance = 0;\n\n    let smallest = 9999;\n\n    for (let m = 0; m < nodeLink.length; m++) {\n      if (p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY) < smallest) {\n        smallest = p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY);\n        closestIndex = m;\n        closestDistance = smallest;\n      }\n    }\n\n    smallest = 9999;\n    let secondLimit = 0;\n    secondIndex = closestIndex;\n\n    for (let m = 0; m < nodeLink.length; m++) {\n      if (\n        p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY) < smallest &&\n        p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY) > closestDistance &&\n        adjacencyMatrix[m][closestIndex] == 1\n      ) {\n        smallest = p5.dist(nodeLink[m].x, nodeLink[m].y, currX, currY);\n        secondIndex = m;\n      }\n    }\n\n    let toStart = p5.dist(\n      nodeLink[closestIndex].x,\n      nodeLink[closestIndex].y,\n      currX,\n      currY\n    );\n\n    let toEnd = p5.dist(\n      nodeLink[secondIndex].x,\n      nodeLink[secondIndex].y,\n      currX,\n      currY\n    );\n\n    let lineLength = p5.dist(\n      nodeLink[closestIndex].x,\n      nodeLink[closestIndex].y,\n      nodeLink[secondIndex].x,\n      nodeLink[secondIndex].y\n    );\n\n    let buffer = 1;\n\n    if (\n      toStart + toEnd >= lineLength - buffer &&\n      toStart + toEnd <= lineLength + buffer\n    ) {\n      adjacencyMatrix[closestIndex][secondIndex] = 0;\n      adjacencyMatrix[secondIndex][closestIndex] = 0;\n    }\n  }\n\n  let activeNode = null;\n  let currIndex;\n  let currEnd;\n  let currX;\n  let currY;\n\n  function mouseDragged(p5) {\n    let distance;\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      distance = p5.dist(p5.mouseX, p5.mouseY, nodeLink[i].x, nodeLink[i].y);\n      if (distance < nodeLink[i].r && activeNode == null) {\n        nodeLink[i].active = true;\n        activeNode = nodeLink[i];\n        currIndex = i;\n      }\n    }\n\n    currX = p5.mouseX;\n    currY = p5.mouseY;\n\n    p5.noStroke();\n\n    //\n  }\n\n  function mouseReleased(p5) {\n    if (activeNode !== null) {\n      let distance;\n\n      for (let i = 0; i < nodeLink.length; i++) {\n        distance = p5.dist(p5.mouseX, p5.mouseY, nodeLink[i].x, nodeLink[i].y);\n        if (distance < nodeLink[i].r && i !== currIndex) {\n          adjacencyMatrix[i][currIndex] = 1;\n          adjacencyMatrix[currIndex][i] = 1;\n          currEnd = i;\n        }\n      }\n\n      activeNode = null;\n      currX = null;\n      currY = null;\n    }\n  }\n\n  async function breadthFirstSearch() {\n    let s = centerIndex;\n\n    //Setting all visited to false\n    let visited = [];\n    for (let i = 0; i < nodeLink.length; i++) {\n      visited[i] = false;\n    }\n\n    //Creating the queue\n    let queue = [];\n    let neighbours = [];\n\n    //Marking initial as visited\n    visited[s] = true;\n\n    queue.push(s);\n    console.log(queue[0]);\n\n    while (queue.length > 0) {\n      s = queue[0];\n      console.log(\"S:\", s);\n\n      for (let j = 0; j < adjacencyMatrix[s].length; j++) {\n        if (adjacencyMatrix[s][j] == 1) {\n          if (visited[j] == false) {\n            visited[j] = true;\n            queue.push(j);\n\n            nodeLink[j].foreground = \"green\";\n            console.log(\"Queue: \", queue);\n\n            await sleep(500);\n          }\n        }\n      }\n    }\n  }\n\n  async function depthFirstSearch() {\n    let s = centerIndex;\n    let stack = [];\n    let visited = [];\n\n    console.log(\"RAN!\");\n\n    for (let k = 0; k < nodeLink.length; k++) {\n      visited[k] = false;\n    }\n\n    stack.push(s);\n    visited[s] = true;\n\n    while (stack.length > 0) {\n      let k = stack.pop();\n      for (let i = nodeLink.length; i > 0; i--) {\n        console.log(\"a\");\n        if (adjacencyMatrix[k][i] == 1) {\n          if (visited[i] == false) {\n            stack.push(i);\n            visited[i] = true;\n            nodeLink[i].foreground = \"blue\";\n\n            await sleep(500);\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <AlgorithmsWrapper className=\"BFS\">\n      <TopWrapper>\n        <BackLink as={Link} to=\"/algorithms\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>breadth first search</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <div style={{ position: \"absolute\" }}></div>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description=\"arrays are a way of storing data.\n            arrays are made up of ‘elements’, which\n            store one piece of data each. each\n            element is stored directly next to the\n            previous one in memory (contiguity),\n            meaning access is fast, but new elements\n            cannot be added once the array has been made\n            \"\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description=\"arrays are best used in applications\n            where data will often be accessed,\n            as accessing an element is inexpensive.\n            however, this comes at the cost of\n            a greater insertion/deletion cost than\n            something like a linked list.  \n            \"\n          />\n        </ItemRowDescription>\n        <ItemRowContent id=\"IRC\" ref={holderRef}>\n          <Sketch\n            setup={setup}\n            draw={draw}\n            mousePressed={mousePressed}\n            mouseDragged={mouseDragged}\n            mouseReleased={mouseReleased}\n            mouseWheel={mouseWheel}\n          />\n\n          <ControlHolder>\n            <InputValue />\n\n            <AddButton onClick={() => depthFirstSearch()}>\n              <p>+</p>\n            </AddButton>\n          </ControlHolder>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default BFS;\n\n//Old Draw\n/**\n * \n * \n * let draw = (p5) => {\n    p5.background(\"rgb(0%,100%,10%)\");\n    //Color of the ball\n    p5.stroke(255);\n    p5.strokeWeight(4);\n    //Mentioning that the ball or the circle won't have filled color\n    p5.noFill();\n    //The first 2 parameters are for positioning and the next two are\n    //for size\n\n    p5.noStroke();\n    p5.fill(p5.color(\"#9bffb6\"));\n    p5.ellipse(a + 20, b, 100, 100);\n\n    p5.strokeWeight(20);\n    p5.stroke(\"#72ff98\");\n    p5.line(300, 300, 400, 400);\n    p5.noStroke();\n\n    //Circle\n    p5.fill(p5.color(\"#72ff98\"));\n    p5.ellipse(a, b, 100, 100);\n\n    p5.fill(p5.color(\"#9bffb6\"));\n    p5.ellipse(420, 400, 100, 100);\n\n    p5.fill(p5.color(\"#72ff98\"));\n    p5.ellipse(400, 400, 100, 100);\n\n    p5.strokeWeight(20);\n\n    p5.stroke(\"#72ff98\");\n    p5.line(300, 300, 400, 400);\n\n    p5.stroke(\"#9bffb6\");\n    p5.line(320, 300, 420, 400);\n    let easing = 0.05;\n\n    if (b >= 300) {\n      speed = -1 * easing;\n    }\n    if (b === 250) {\n      speed = 1 * easing;\n    }\n    b = b + speed;\n  };\n */\n\n/* Old shit\n\n let setup = (p5, canvasParentRef) => {\n    globalWidth = p5.windowWidth * 0.4;\n    globalHeight = p5.windowHeight * 0.7;\n\n    let parent = p5.createCanvas(globalWidth, globalHeight).parent(\"IRC\");\n\n    p5.background(\"#e3dac9\");\n\n    //No stroke around circle\n    p5.noStroke();\n\n    //Circle ( x, y, width, height)\n    p5.fill(p5.color(\"#72ff98\"));\n    //p5.ellipse(100, 100, 100, 100);\n\n    var xa = 0;\n\n    /* while (xa < 500) {\n      p5.ellipse(xa, 200, 25, 25);\n      xa = xa + 50;\n    }\n\n    for (let i = 0; i < 20; i++) {\n      //p5.ellipse(xa, 200, 100, 100);\n      //xa = xa + 150;\n    }\n\n    async function andrew() {\n      await sleep(1000);\n    }\n\n    console.log(\"length: \" + nodeLink.length);\n\n    for (let j = 0; j < nodeLink.length; j++) {\n      p5.ellipse(nodeLink[j].x, nodeLink[j].y, 100, 100);\n      console.log(\"Width: \" + p5.windowWidth);\n    }\n\n    p5.rect(0, 0, 55, 55, 20);\n    p5.rect(0, globalHeight, 55, 55, 20);\n    p5.rect(globalWidth, 0, 55, 55, 20);\n    p5.rect(globalWidth, globalHeight, 55, 55, 20);\n\n    // tester(p5, x, y);\n  };\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  const [x, setX] = useState(100);\n  const [y, setY] = useState(100);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeValue, setNodeValue] = useState(27);\n\n  const testarray = [1, 2, 3, 4, 5];\n\n  let draw = (p5) => {};\n\n  function tester(p5, x, y) {\n    console.log(\"CALLED!!!\");\n    // p5.ellipse(x, y, 100, 100);\n  }\n\n  const [spaceVals, setSpaceVals] = useState([]);\n\n  const initialArray = useEffect(() => {\n    setNodeLink([\n      ...nodeLink,\n      {\n        needsNewLine,\n        nodeID,\n        nodeValue,\n        x,\n        y,\n      },\n    ]);\n\n    console.log(nodeID);\n  }, [changer]);\n\n  const run10times = useEffect(() => {\n    if (changer < 9) {\n      //ellipse(x, y, 20, 20);\n\n      setChanger(changer + 1);\n      setNodeValue(nodeValue + 1);\n      setNodeID(nodeID + 1);\n\n      if (x < 100) {\n        setX(x + 100);\n      } else {\n        setX(1000);\n      }\n      setY(Math.floor(Math.random() * 500));\n    }\n  }, [nodeLink]);*/\n\n//Old centering code\n\n/*\n  let centerNode = null;\n    let centerNode2 = null;\n    let closestToZeroX = 0;\n    let closestToZeroY = 0;\n    let a;\n    let b;\n    for (let i = 0; i < nodeLinkHook.length; i++) {\n      a = nodeLinkHook[i].x - globalWidth / 2;\n      b = nodeLinkHook[i].y - (globalHeight * 0.8) / 2;\n      console.log(a);\n\n      if (closestToZeroX === 0) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      } else if (a > 0 && a <= Math.abs(closestToZeroX)) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      } else if (a < 0 && -a < Math.abs(closestToZeroX)) {\n        closestToZeroX = a;\n        centerNode = nodeLinkHook[i];\n      }\n\n      if (closestToZeroY === 0) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      } else if (b > 0 && b <= Math.abs(closestToZeroY)) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      } else if (b < 0 && -b < Math.abs(closestToZeroY)) {\n        closestToZeroY = b;\n        centerNode2 = nodeLinkHook[i];\n      }\n    }\n\n\n\n    let centerDecider = null;\n\n    if (centerNode.x + centerNode.y > centerNode2.x + centerNode2.y) {\n      centerDecider = centerNode;\n    } else {\n      centerDecider = centerNode2;\n    }\n\n    console.log(\"Center value: \" + centerNode.nodeValue);\n\n\n      p5.fill(p5.color(\"orange\"));\n    p5.rect(0, 0, 100, 100);\n\n    p5.fill(p5.color(\"white\")).text(centerNode.nodeValue, 0, 50);\n\n    p5.fill(p5.color(\"red\"));\n    p5.ellipse(centerNode.x, centerNode.y, centerNode.r, centerNode.r);\n    p5.fill(p5.color(\"white\")).text(\n      centerNode.nodeValue,\n      centerNode.x - centerNode.r / 4,\n      centerNode.y + centerNode.r / 6\n    );\n\n    p5.fill(p5.color(\"purple\"));\n    p5.ellipse(\n      centerDecider.x,\n      centerDecider.y,\n      centerDecider.r,\n      centerDecider.r\n    );\n    p5.fill(p5.color(\"white\")).text(\n      centerDecider.nodeValue,\n      centerDecider.x - centerDecider.r / 4,\n      centerDecider.y + centerDecider.r / 6\n    );\n\n\n    );*/\n\n//Old Connections\n\n/**\n     * let distance;\n    let smallest = 9999;\n    let nodeToAdd = null;\n    let distanceToAdd = 0;\n    let prevNodes = [];\n    let prevDist = [];\n    let doneBefore = false;\n    //trying dist;\n\n    for (let w = 0; w < numConnections - 1; w++) {\n      smallest = 9999;\n      nodeToAdd = null;\n      doneBefore = false;\n\n      for (let k = 0; k < nodeLinkHook.length; k++) {\n        //Makes sure it is not comparing against itself\n        if (k != nodeIndex) {\n          distance = parseInt(\n            p5.dist(\n              nodeLinkHook[nodeIndex].x,\n              nodeLinkHook[nodeIndex].y,\n              nodeLinkHook[k].x,\n              nodeLinkHook[k].y\n            )\n          );\n\n          //Checks if distance has been done before\n          for (let m = 0; m < prevDist.length; m++) {\n            if (distance == prevDist[m]) {\n              doneBefore = true;\n            }\n          }\n\n          //Sets smallest if not done before\n          if (Math.abs(distance) < smallest && !doneBefore) {\n            smallest = Math.abs(distance);\n            nodeToAdd = nodeLinkHook[k];\n            distanceToAdd = distance;\n          }\n        } else {\n          console.log(\"same\");\n        }\n        //End of loop\n        doneBefore = false;\n      }\n      prevNodes.push(nodeToAdd);\n      prevDist.push(distanceToAdd);\n    }\n\n    return prevNodes;\n     * \n     * \n     * * */\n\n//    /*\n//    //Canvas Variables\n// const holderRef = useRef();\n// let globalWidth;\n// let globalHeight;\n// let newCenter = null;\n\n// const [adjacencyMatrix, setAdjacencyMatrix] = useState([\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n// ]);\n\n// /* adjacencyMatrix = [\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0],\n// ];*/\n\n// //Node Variables\n// //const [nodeLink, setNodeLink] = useState([]);\n\n// //const [nodeID, setNodeID] = useState(0);\n// //const [nodeValue, setNodeValue] = useState(23);\n// //const [x, setX] = useState(0);\n// //const [y, setY] = useState(0);\n\n// const [nodeLinkHook, setNodeLinkHook] = useState([]);\n// const [checker, setChecker] = useState(0);\n// const [center, setCenter] = useState(null);\n\n// const buildNodes = useEffect(() => {\n//   /*    let x = 100;\n//   let y = 100;\n//   let r = 100;\n//   */\n//   let screenWidth = holderRef.current.getBoundingClientRect().width;\n//   let screenHeight = holderRef.current.getBoundingClientRect().height;\n//   let nodeID = 0;\n//   let nodeValue = 47;\n//   let nodeLink = [];\n//   let protection = 0;\n\n//   while (nodeLink.length < 9) {\n//     var Node = {\n//       x: Math.floor(Math.random() * (screenWidth - 100) + 50),\n//       y: Math.floor(Math.random() * (screenHeight * 0.7 - 100) + 50),\n//       r: 80,\n//       nodeID: nodeID,\n//       nodeValue: Math.floor(Math.random() * 99),\n//       isCenter: false,\n//     };\n\n//     //Ensures never overlaps\n//     var isOverlapping = false;\n//     for (let j = 0; j < nodeLink.length; j++) {\n//       var otherNode = nodeLink[j];\n//       var a = Node.x - otherNode.x;\n//       var b = Node.y - otherNode.y;\n//       var d = Math.sqrt(a * a + b * b);\n\n//       if (d < (Node.r + otherNode.r) * 0.8) {\n//         isOverlapping = true;\n//       }\n//     }\n\n//     //If it is good, push it\n//     if (!isOverlapping) {\n//       nodeLink.push(Node);\n//       nodeID++;\n//     }\n\n//     protection++;\n//     if (protection > 100000) {\n//       console.log(\"too many circles\");\n//       break;\n//     }\n//   }\n\n//   setNodeLinkHook(nodeLink);\n// }, [checker]);\n\n// function setup(p5, canvasParentRef) {\n//   globalWidth = holderRef.current.getBoundingClientRect().width;\n//   globalHeight = holderRef.current.getBoundingClientRect().height;\n\n//   setChecker(checker + 1);\n\n//   p5.createCanvas(globalWidth, globalHeight * 0.8).parent(canvasParentRef);\n\n//   let d;\n//   let smallest = 999;\n//   let centerNode = null;\n//   //trying dist;\n//   for (let k = 0; k < nodeLinkHook.length; k++) {\n//     let d = parseInt(\n//       p5.dist(\n//         globalWidth / 2,\n//         (globalHeight * 0.8) / 2,\n//         nodeLinkHook[k].x,\n//         nodeLinkHook[k].y\n//       )\n//     );\n\n//     if (Math.abs(d) < smallest) {\n//       smallest = Math.abs(d);\n//       centerNode = nodeLinkHook[k];\n//     }\n//   }\n\n//   //Finding node closest to center;\n\n//   p5.background(\"#e3dac9\");\n\n//   p5.noStroke();\n\n//   p5.fill(p5.color(\"#72ff98\"));\n\n//   //let connections = linkMaker(p5, 3, centerNode.nodeID);\n//   linkMaker(p5, 3, centerNode.nodeID);\n\n//   //for (let m = 0; m < connections.length; m++) {\n\n//   for (let j = 0; j < nodeLinkHook.length; j++) {\n//     p5.fill(p5.color(\"#9bffb6\"));\n//     p5.ellipse(\n//       nodeLinkHook[j].x + nodeLinkHook[j].r / 4,\n//       nodeLinkHook[j].y,\n//       nodeLinkHook[j].r,\n//       nodeLinkHook[j].r\n//     );\n\n//     p5.fill(p5.color(\"#72ff98\"));\n//     p5.textSize(nodeLinkHook[j].r / 2);\n//     p5.ellipse(\n//       nodeLinkHook[j].x,\n//       nodeLinkHook[j].y,\n//       nodeLinkHook[j].r,\n//       nodeLinkHook[j].r\n//     );\n\n//     p5.fill(p5.color(\"white\")).text(\n//       nodeLinkHook[j].nodeValue,\n//       nodeLinkHook[j].x - nodeLinkHook[j].r / 4,\n//       nodeLinkHook[j].y + nodeLinkHook[j].r / 6\n//     );\n\n//     p5.fill(p5.color(\"white\")).text(\n//       nodeLinkHook[j].x,\n//       nodeLinkHook[j].x - nodeLinkHook[j].r / 4,\n//       nodeLinkHook[j].y + nodeLinkHook[j].r\n//     );\n\n//     p5.fill(p5.color(\"#72ff98\"));\n//   }\n\n//   p5.fill(p5.color(\"grey\"));\n//   p5.ellipse(centerNode.x, centerNode.y, centerNode.r, centerNode.r);\n//   p5.fill(p5.color(\"white\")).text(\n//     centerNode.nodeValue,\n//     centerNode.x - centerNode.r / 4,\n//     centerNode.y + centerNode.r / 6\n//   );\n\n//   p5.fill(p5.color(\"blue\"));\n//   p5.ellipse(globalWidth / 2, (globalHeight * 0.8) / 2, 50, 50);\n// }\n\n// function linkMaker(p5, numConnections, nodeIndex) {\n//   let distance;\n//   let smallest = 9999;\n//   let nodeToAdd = null;\n//   let indexToAdd = 0;\n//   let distanceToAdd = 0;\n//   let prevNodes = [];\n//   let prevDist = [];\n//   let doneBefore = false;\n//   //trying dist;\n\n//   for (let w = 0; w < numConnections; w++) {\n//     smallest = 9999;\n//     nodeToAdd = null;\n//     doneBefore = false;\n\n//     for (let k = 0; k < nodeLinkHook.length; k++) {\n//       //Makes sure it is not comparing against itself\n//       if (k != nodeIndex) {\n//         distance = parseInt(\n//           p5.dist(\n//             nodeLinkHook[nodeIndex].x,\n//             nodeLinkHook[nodeIndex].y,\n//             nodeLinkHook[k].x,\n//             nodeLinkHook[k].y\n//           )\n//         );\n\n//         //Checks if distance has been done before\n//         for (let m = 0; m < prevDist.length; m++) {\n//           if (distance == prevDist[m]) {\n//             doneBefore = true;\n//           }\n//         }\n\n//         //Sets smallest if not done before\n//         if (Math.abs(distance) < smallest && !doneBefore) {\n//           smallest = Math.abs(distance);\n//           nodeToAdd = nodeLinkHook[k];\n//           indexToAdd = k;\n//           distanceToAdd = distance;\n//         }\n//       } else {\n//         console.log(\"same\");\n//       }\n//       //End of loop\n//       doneBefore = false;\n//     }\n//     prevNodes.push(nodeToAdd);\n\n//     prevDist.push(distanceToAdd);\n\n//     console.log(\"nodeToadd:\", indexToAdd);\n//     console.log(\"Index:\", nodeIndex);\n//     adjacencyMatrix[indexToAdd][nodeIndex] = 1;\n//     adjacencyMatrix[nodeIndex][indexToAdd] = 1;\n//     console.log(adjacencyMatrix);\n//   }\n\n//   console.log(nodeLinkHook);\n//   //return prevNodes;\n// }\n\n// let draw = (p5) => {\n//   for (let m = 0; m < adjacencyMatrix.length; m++) {\n//     for (let k = 0; k < adjacencyMatrix.length; k++) {\n//       if (adjacencyMatrix[m][k] === 1 && adjacencyMatrix[k][m] == 1) {\n//         p5.strokeWeight(20);\n\n//         p5.stroke(\"#72ff98\");\n//         p5.line(\n//           nodeLinkHook[m].x,\n//           nodeLinkHook[m].y,\n//           nodeLinkHook[k].x,\n//           nodeLinkHook[k].y\n//         );\n//         p5.stroke(\"#9bffb6\");\n//         p5.line(\n//           nodeLinkHook[m].x + nodeLinkHook[m].r / 6,\n//           nodeLinkHook[m].y,\n//           nodeLinkHook[k].x + nodeLinkHook[m].r / 6,\n//           nodeLinkHook[k].y\n//         );\n//         p5.noStroke();\n\n//         p5.fill(p5.color(\"red\"));\n//         p5.ellipse(nodeLinkHook[m].x, nodeLinkHook[m].y / 2, 50, 50);\n//         p5.ellipse(nodeLinkHook[k].x, nodeLinkHook[k].y / 2, 50, 50);\n//       }\n//     }\n//     /* p5.strokeWeight(20);\n\n//     p5.stroke(\"#72ff98\");\n//     p5.line(centerNode.x, centerNode.y, connections[m].x, connections[m].y);\n//     p5.stroke(\"#9bffb6\");\n//     p5.line(\n//       centerNode.x + centerNode.r / 6,\n//       centerNode.y,\n//       connections[m].x + connections[m].r / 6,\n//       connections[m].y\n//     );\n//     p5.noStroke();*/\n//   }\n// };\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackArrow } from \"../../icons/BackArrow.svg\";\nimport styled from \"styled-components\";\nimport { TopWrapper, Title, media } from \"../../Shared\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Sketch from \"react-p5\";\nimport p5 from \"p5\";\n\nconst AlgorithmsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #61dafb;\n  justify-content: center;\n  align-items: center;\n\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: honeydew;\n  flex-grow: 20;\n  align-items: center;\n  justify-content: space-evenly;\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  ${media.mobile} {\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: flex-end;\n  }\n`;\n\nconst ItemRowDescription = styled.div`\n  width: 66%;\n  background-color: purple;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  margin-left: 10%;\n  width: 100vw;\n\n  justify-content: space-evenly;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0%;\n  }\n`;\n\nconst ItemRowContent = styled.div`\n  width: 66%;\n  background-color: orange;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  margin-right: 10%;\n  width: 100vw;\n\n  justify-content: center;\n  ${media.mobile} {\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    height: 60vh;\n    margin-top: \"30vh\";\n    margin: 0%;\n  }\n`;\n\nconst Item = styled.div`\n  min-width: 300px;\n  width: 30vw;\n  height: 35vh;\n  margin: 1vw;\n  border-radius: 4vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  h1 {\n    font-size: 8vh;\n    font-weight: bolder;\n    color: white;\n  }\n  p {\n    font-size: 2vh;\n    font-weight: bolder;\n    color: white;\n    margin-left: 10%;\n    margin-right: 10%;\n    margin-bottom: 10%;\n    transform: translateY(-30%);\n  }\n`;\n\nconst InputValue = styled.input`\n  border: 0;\n  background-color: #e8e8e8;\n\n  border-radius: 4vh;\n  text-align: center;\n  font-size: 4vh;\n  padding: 2vh;\n  margin-top: 2vh;\n  max-width: 10vw;\n  font-weight: bold;\n  color: #535353;\n  outline: none;\n  margin-left: 1vh;\n  margin-right: vh;\n  ${media.mobile} {\n    max-width: none;\n    border-radius: 2vh;\n    width: 10vh;\n    height: 2vh;\n    margin-top: 0vh;\n    font-size: 3vh;\n    padding-left: 1vh;\n    padding-right: 1vh;\n  }\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #78fc59;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst MinusButton = styled.div`\n  display: flex;\n  width: 10vh;\n  height: 10vh;\n  background-color: #f06449;\n  border-radius: 4vh;\n  margin-top: 2vh;\n  margin-left: 2vh;\n  align-items: center;\n\n  justify-content: center;\n\n  p {\n    font-weight: bold;\n    color: white;\n    font-size: 7vh;\n  }\n\n  ${media.mobile} {\n    border-radius: 2vh;\n    width: 6vh;\n    height: 6vh;\n    margin-top: 0vh;\n    p {\n      font-size: 5vh;\n    }\n  }\n`;\n\nconst BFSHolder = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n\n  background-color: red;\n  height: 45vh;\n  width: 38vw;\n  padding-top: 2vh;\n\n  overflow-y: visible;\n  overflow-x: hidden;\n\n  h1 {\n    color: #535353;\n    font-size: 4vh;\n    font-weight: bold;\n    animation: bob 3s infinite ease;\n  }\n\n  @keyframes bob {\n    0% {\n      transform: translate(0vh, 0vh);\n    }\n    50% {\n      transform: translate(0vh, -2vh);\n    }\n    100% {\n      transform: translate(0vh, 0vh);\n    }\n  }\n\n  ${media.mobile} {\n    justify-content: flex-start;\n    align-items: center;\n    width: 100vw;\n    margin: 0%;\n    height: 49vh;\n    margin-top: \"30vh\";\n  }\n`;\n\nconst BFSRow = styled.div`\n  display: grid;\n\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n`;\n\nconst ControlHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  height: 12vh;\n  margin-bottom: 2vh;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 0;\n  background-color: blue;\n  ${media.mobile} {\n    height: 7vh;\n    width: 100%;\n    margin-bottom: 0vh;\n  }\n`;\n\nconst ArrayPosHolder = styled.div`\n  display: grid;\n  background-color: orange;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr auto;\n\n  ${media.mobile} {\n    width: 100vw;\n  }\n`;\n\nconst BackLink = styled.div`\n  /* lets use react link */\n  padding-left: 2%;\n`;\n\nconst TextInsert = styled.input`\n  font-size: 5vh;\n  width: 8vh;\n\n  text-align: center;\n  font-weight: bolder;\n  background: none;\n  border: none;\n\n  color: #ffffff;\n  ::placeholder {\n    color: white;\n  }\n\n  outline: none;\n`;\n\nfunction Info(props) {\n  return (\n    <Item style={{ backgroundColor: props.colour }}>\n      <h1>{props.title}</h1>\n\n      <p>{props.description}</p>\n    </Item>\n  );\n}\n\nfunction Dijkstra() {\n  const holderRef = useRef();\n  //Frame\n  const [globalWidth, setGlobalWidth] = useState(0);\n  const [globalHeight, setGlobalHeight] = useState(0);\n\n  //Nodes\n  const [nodeLink, setNodeLink] = useState([]);\n  const [nodeValue, setNodeValue] = useState(37);\n  const [nodeID, setNodeID] = useState(0);\n  const [nodeNext, setNodeNext] = useState(null);\n  const [nodeX, setNodeX] = useState(200);\n  const [nodeY, setNodeY] = useState(200);\n  const [looper, setLooper] = useState(0);\n  const [changer, setChanger] = useState(0);\n  const [matrixLoaded, setMatrixLoaded] = useState(false);\n  const [nodesSet, setNodesSet] = useState(false);\n\n  const [frameWidth, setFrameWidth] = useState();\n  const [frameHeight, setFrameHeight] = useState();\n\n  const [isRendered, setIsRendered] = useState(0);\n\n  const a = useEffect(() => {\n    if (holderRef.current.getBoundingClientRect().width > 0) {\n      setFrameWidth(holderRef.current.getBoundingClientRect().width);\n      setFrameHeight(holderRef.current.getBoundingClientRect().height);\n    }\n  }, [holderRef.current, isRendered]);\n\n  window.addEventListener(\"resize\", function () {\n    // your custom logic\n  });\n\n  const [adjacencyMatrix, setAdjacencyMatrix] = useState([\n    [0, 1, 1, 0, 0, 0, 0],\n    [1, 0, 0, 1, 1, 0, 0],\n    [1, 0, 0, 1, 0, 0, 0],\n    [0, 1, 1, 0, 0, 1, 0],\n    [0, 1, 0, 0, 0, 1, 1],\n    [0, 0, 0, 1, 1, 0, 1],\n    [0, 0, 0, 0, 1, 1, 0],\n  ]);\n\n  const [costMatrix, setCostMatrix] = useState([\n    [0, 1, 1, 0, 0, 0, 0],\n    [1, 0, 0, 1, 1, 0, 0],\n    [1, 0, 0, 1, 0, 0, 0],\n    [0, 1, 1, 0, 0, 1, 0],\n    [0, 1, 0, 0, 0, 1, 1],\n    [0, 0, 0, 1, 1, 0, 1],\n    [0, 0, 0, 0, 1, 1, 0],\n  ]);\n\n  const createNodes = useEffect(() => {\n    if (looper < 7) {\n      var Node = {\n        x: nodeX,\n        y: nodeY,\n        value: nodeValue,\n        id: nodeID,\n        r: 100,\n        distance: [],\n        colour: \"#72ff98\",\n        bgColour: \"#9bffb6\",\n        active: false,\n        connections: [],\n      };\n\n      setNodeLink([...nodeLink, Node]);\n\n      if (looper < 6) {\n        setChanger(changer + 1);\n      }\n    } else {\n      for (let i = 0; i < adjacencyMatrix.length; i++) {\n        for (let j = 0; j < adjacencyMatrix.length; j++) {\n          if (adjacencyMatrix[i][j] == 1 && adjacencyMatrix[j][i]) {\n            nodeLink[i].connections.push(nodeLink[j]);\n          }\n        }\n\n        for (let j = 0; j < nodeLink.length; j++) {\n          console.log(\"Number\", j, \": \", nodeLink[j].connections);\n        }\n      }\n      setMatrixLoaded(true);\n    }\n  }, [looper]);\n\n  const updateValues = useEffect(() => {\n    setNodeValue(Math.floor(Math.random() * 99));\n\n    if (looper % 2 != 0) {\n      setNodeX(nodeX + globalWidth / 10);\n    } else {\n      setNodeX(nodeX - globalWidth / 10);\n    }\n    setNodeY(nodeY + globalHeight / 8);\n    setNodeID(nodeID + 1);\n\n    setLooper(looper + 1);\n  }, [changer]);\n\n  const setNexts = useEffect(() => {\n    if (looper > 6) {\n      let temp = [...nodeLink];\n\n      for (let j = 0; j < nodeLink.length - 1; j++) {\n        temp[j].next = temp[j + 1];\n      }\n\n      setNodeLink(temp);\n    }\n  }, [looper]);\n\n  console.log(nodeLink);\n\n  function setup(p5, canvasParentRef) {\n    setIsRendered(isRendered + 1);\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n\n    p5.createCanvas(frameWidth, frameHeight * 0.8).parent(canvasParentRef);\n\n    /* let newXY = [...nodeLink];\n    let currX = frameWidth / 10;\n    let currY = (frameHeight * 0.8) / 2;\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      console.log(i);\n\n      if (i == 1) {\n        currX += frameWidth / 6;\n        currY -= (frameHeight * 0.8) / 4;\n      }\n      if (i == 2) {\n        currY += (frameHeight * 0.8) / 2;\n      }\n      if (i == 3) {\n        currX += frameWidth / 6;\n        currY -= (frameHeight * 0.8) / 4;\n      }\n      if (i == 4) {\n        currX += frameWidth / 6;\n        currY -= (frameHeight * 0.8) / 4;\n      }\n      if (i == 5) {\n        currY += (frameHeight * 0.8) / 2;\n      }\n      if (i == 6) {\n        currX += frameWidth / 6;\n        currY -= (frameHeight * 0.8) / 4;\n      }\n\n      nodeLink[i].x = currX;\n      nodeLink[i].y = currY;\n    }*/\n\n    //Finding node closest to center;\n\n    p5.background(\"#e3dac9\");\n    console.log(matrixLoaded);\n  }\n\n  function windowResized(p5) {\n    p5.resizeCanvas(\n      holderRef.current.getBoundingClientRect().width,\n      holderRef.current.getBoundingClientRect().height * 0.8\n    );\n  }\n\n  let draw = (p5) => {\n    p5.clear();\n    p5.noStroke();\n    p5.background(\"#e3dac9\");\n\n    setGlobalWidth(frameWidth);\n    setGlobalHeight(frameHeight);\n    setNodesSet(true);\n\n    let currX = frameWidth / 10;\n    let currY = (frameHeight * 0.8) / 2;\n\n    if (!nodesSet) {\n      for (let i = 0; i < nodeLink.length; i++) {\n        console.log(i);\n\n        if (i == 1) {\n          currX += frameWidth / 6;\n          currY -= (frameHeight * 0.8) / 4;\n        }\n        if (i == 2) {\n          currY += (frameHeight * 0.8) / 2;\n        }\n        if (i == 3) {\n          currX += frameWidth / 6;\n          currY -= (frameHeight * 0.8) / 4;\n        }\n        if (i == 4) {\n          currX += frameWidth / 6;\n          currY -= (frameHeight * 0.8) / 4;\n        }\n        if (i == 5) {\n          currY += (frameHeight * 0.8) / 2;\n        }\n        if (i == 6) {\n          currX += frameWidth / 6;\n          currY -= (frameHeight * 0.8) / 4;\n        }\n\n        nodeLink[i].x = currX;\n        nodeLink[i].y = currY;\n      }\n      setNodesSet(true);\n    }\n\n    //Creating Lines\n    for (let m = 0; m < nodeLink.length; m++) {\n      for (let w = 0; w < nodeLink[m].connections.length; w++) {\n        p5.strokeWeight(20);\n        p5.stroke(\"#72ff98\");\n        p5.line(\n          nodeLink[m].x,\n          nodeLink[m].y,\n          nodeLink[m].connections[w].x,\n          nodeLink[m].connections[w].y\n        );\n\n        //Setting Distances;\n        //Now the graph is weighted!\n        nodeLink[m].distance[w] = Math.floor(\n          p5.dist(\n            nodeLink[m].x,\n            nodeLink[m].y,\n            nodeLink[m].connections[w].x,\n            nodeLink[m].connections[w].y\n          )\n        );\n\n        p5.stroke(\"#9bffb6\");\n        p5.line(\n          nodeLink[m].x + nodeLink[m].r / 6,\n          nodeLink[m].y,\n          nodeLink[m].connections[w].x + nodeLink[m].r / 6,\n          nodeLink[m].connections[w].y\n        );\n      }\n\n      //building cost matrix\n      for (let k = 0; k < nodeLink.length; k++) {\n        if (adjacencyMatrix[m][k] == 1) {\n          costMatrix[m][k] = Math.floor(\n            p5.dist(nodeLink[m].x, nodeLink[m].y, nodeLink[k].x, nodeLink[k].y)\n          );\n        } else if (m != k) {\n          costMatrix[m][k] = 99999;\n        } else {\n          costMatrix[m][k] = 0;\n        }\n      }\n    }\n\n    p5.noStroke();\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      //Background Circle\n      p5.fill(p5.color(nodeLink[i].bgColour));\n      p5.ellipse(\n        nodeLink[i].x + nodeLink[i].r / 6,\n        nodeLink[i].y,\n        nodeLink[i].r,\n        nodeLink[i].r\n      );\n\n      //Foreground Circle\n      p5.fill(p5.color(nodeLink[i].colour));\n      p5.ellipse(nodeLink[i].x, nodeLink[i].y, nodeLink[i].r, nodeLink[i].r);\n\n      p5.textSize(nodeLink[i].r / 2);\n      p5.fill(p5.color(\"white\")).text(\n        nodeLink[i].id,\n        nodeLink[i].x - nodeLink[i].r / 4,\n        nodeLink[i].y + nodeLink[i].r / 6\n      );\n      p5.fill(p5.color(\"#72ff98\"));\n    }\n\n    //Creating Text\n    for (let m = 0; m < nodeLink.length; m++) {\n      for (let w = 0; w < nodeLink[m].connections.length; w++) {\n        p5.noStroke();\n        p5.textSize(nodeLink[m].r / 4);\n        p5.fill(p5.color(\"white\")).text(\n          Math.floor(\n            p5.dist(\n              nodeLink[m].x,\n              nodeLink[m].y,\n              nodeLink[m].connections[w].x,\n              nodeLink[m].connections[w].y\n            )\n          ),\n          (nodeLink[m].x + nodeLink[m].connections[w].x) / 2 +\n            nodeLink[m].r / 6,\n          (nodeLink[m].y + nodeLink[m].connections[w].y) / 2 + nodeLink[m].r / 6\n        );\n      }\n    }\n  };\n\n  async function addNode() {\n    //Visiting\n    let visited = [];\n    let parent = [];\n\n    //Distance\n    let infinity = 99999;\n    let distFromStart = [];\n    let nearestNode = 0;\n\n    //For finding nearest\n    let minValue = 99999;\n    let minNode = 0;\n\n    for (let m = 0; m < nodeLink.length; m++) {\n      //Will change this to a variable to change the input\n      if (m == 0) {\n        distFromStart.push(0);\n        parent[0] = -1;\n      } else {\n        distFromStart.push(infinity);\n      }\n\n      //Sets everything to unvisited\n      visited[m] = false;\n\n      //sets all parents to themselves\n      parent[m] = m;\n    }\n\n    for (let i = 0; i < nodeLink.length; i++) {\n      //Getting the nearest node:\n\n      for (let j = 0; j < nodeLink.length; j++) {\n        if (!visited[j] && distFromStart[j] < minValue) {\n          minValue = distFromStart[j];\n          minNode = j;\n        }\n      }\n\n      visited[minNode] = true;\n\n      //updating distance;\n      for (let adj = 0; adj < nodeLink.length; adj++) {\n        //Checks if the previous distance is already smaller than the new distance\n        //Which is the distance to reach nearest PLUS cost of going from nearest to adjacent\n        if (\n          !visited[adj] &&\n          distFromStart[minNode] + costMatrix[minNode][adj] <\n            distFromStart[adj] &&\n          costMatrix[minNode][adj] != 99999\n        ) {\n          //update\n\n          distFromStart[adj] =\n            distFromStart[minNode] + costMatrix[minNode][adj];\n\n          parent[adj] = minNode;\n\n          console.log(minNode);\n        }\n      }\n\n      minValue = 99999;\n      minNode = 0;\n    }\n\n    let order = [];\n\n    let n = nodeLink.length - 1;\n    while (n > 0) {\n      order.push(n);\n      n = parent[n];\n    }\n    order.push(0);\n    order.reverse();\n    console.log(order);\n\n    for (let f = 0; f < order.length; f++) {\n      nodeLink[order[f]].colour = \"#F52F2F\";\n      nodeLink[order[f]].bgColour = \"#F66161\";\n      await sleep(1000);\n    }\n  }\n\n  async function removeNode() {\n    let temp = [...nodeLink];\n    let newTemp;\n\n    console.log(\"nodeValue: \", nodeValue);\n    console.log(\"==\", nodeValue == nodeLink[1].value);\n\n    for (let i = 0; i < temp.length; i++) {\n      nodeLink[i].colour = \"#CB391E\";\n      nodeLink[i].bgColour = \"#DD4125\";\n      await sleep(1000);\n      nodeLink[i].colour = \"#72ff98\";\n      nodeLink[i].bgColour = \"#9bffb6\";\n\n      if (temp[i].value == nodeValue) {\n        nodeLink[i].colour = \"purple\";\n        await sleep(1000);\n        if (i > 0) {\n          temp[i - 1].next = temp[i + 1];\n        }\n\n        for (let j = temp.length - 1; j > i; j--) {\n          temp[j].x = temp[j - 1].x;\n          temp[j].y = temp[j - 1].y;\n        }\n\n        temp.splice(i, 1);\n        setNodeLink(temp);\n        console.log(\"Index: \", i);\n        setNodeY(nodeY - globalHeight / 8);\n        //do nodex\n        break;\n      }\n    }\n  }\n\n  function sleep(ms) {\n    console.log(ms);\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function mouseWheel(event) {\n    console.log(event);\n    for (let m = 0; m < nodeLink.length; m++) {\n      nodeLink[m].y += event._mouseWheelDeltaY / 8;\n    }\n\n    setNodeY(nodeLink[nodeLink.length - 1].y + globalHeight / 8);\n  }\n\n  function mousePressed(p5) {\n    for (let m = 0; m < nodeLink.length; m++) {\n      console.log(nodeLink[m].active);\n    }\n    return false;\n  }\n\n  function mouseDragged(p5) {\n    let distance;\n    for (let i = 0; i < nodeLink.length; i++) {\n      distance = p5.dist(p5.mouseX, p5.mouseY, nodeLink[i].x, nodeLink[i].y);\n\n      if (distance < nodeLink[i].r) {\n        nodeLink[i].active = true;\n      }\n    }\n    for (let i = 0; i < nodeLink.length; i++) {\n      if (nodeLink[i].active) {\n        nodeLink[i].x = p5.mouseX;\n        nodeLink[i].y = p5.mouseY;\n        break;\n      }\n    }\n\n    return false;\n  }\n\n  function mouseReleased(p5) {\n    for (let i = 0; i < nodeLink.length; i++) {\n      if (nodeLink[i].active) {\n        nodeLink[i].active = false;\n      }\n    }\n  }\n\n  return (\n    <AlgorithmsWrapper className=\"BFS\">\n      <TopWrapper>\n        <BackLink as={Link} to=\"/algorithms\">\n          <BackArrow />\n        </BackLink>\n\n        <Title>dijkstra's algorithm</Title>\n      </TopWrapper>\n      <BodyWrapper>\n        <ItemRowDescription>\n          <Info\n            colour=\"#F06449\"\n            title=\"description\"\n            description=\"arrays are a way of storing data.\n            arrays are made up of ‘elements’, which\n            store one piece of data each. each\n            element is stored directly next to the\n            previous one in memory (contiguity),\n            meaning access is fast, but new elements\n            cannot be added once the array has been made\n            \"\n          />\n          <Info\n            colour=\"#6DD3CE\"\n            title=\"use cases\"\n            description=\"arrays are best used in applications\n            where data will often be accessed,\n            as accessing an element is inexpensive.\n            however, this comes at the cost of\n            a greater insertion/deletion cost than\n            something like a linked list.  \n            \"\n          />\n        </ItemRowDescription>\n        <ItemRowContent id=\"IRC\" ref={holderRef}>\n          {frameWidth < 1 && (\n            <Sketch\n              setup={setup}\n              draw={draw}\n              windowResized={windowResized}\n              mouseWheel={mouseWheel}\n              mousePressed={mousePressed}\n              mouseDragged={mouseDragged}\n              mouseReleased={mouseReleased}\n            />\n          )}\n          {frameWidth > 1 && (\n            <Sketch\n              setup={setup}\n              draw={draw}\n              windowResized={windowResized}\n              mouseWheel={mouseWheel}\n              mousePressed={mousePressed}\n              mouseDragged={mouseDragged}\n              mouseReleased={mouseReleased}\n            />\n          )}\n          <ControlHolder>\n            <InputValue\n              placeholder=\"value\"\n              onChange={(event) => setNodeValue(event.target.value)}\n            />\n\n            <AddButton onClick={() => addNode()}>\n              <p>+</p>\n            </AddButton>\n            <MinusButton onClick={() => removeNode()}>\n              <p>-</p>\n            </MinusButton>\n          </ControlHolder>\n        </ItemRowContent>\n      </BodyWrapper>\n    </AlgorithmsWrapper>\n  );\n}\n\nexport default Dijkstra;\n","import \"./App.css\";\n\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\n\n//Main Pages\nimport Algorithms from \"./Pages/Algorithms\";\nimport DataStructures from \"./Pages/DataStructures\";\n\n//Data Structures\nimport LinkedList from \"./Pages/datastructures/linkedlist/LinkedList\";\nimport ArrayVis from \"./Pages/datastructures/array/ArrayVis\";\n\n//Algorithms\nimport BinarySearch from \"./Pages/algorithms/binarysearch/BinarySearch\";\nimport QuickSort from \"./Pages/algorithms/quicksort/QuickSort\";\nimport BFS from \"./Pages/algorithms/bfs/BFS\";\nimport Dijkstra from \"./Pages/algorithms/dijkstra/Dijkstra\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        {/* main pages */}\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/algorithms\" component={Algorithms} />\n        <Route path=\"/datastructures\" component={DataStructures} />\n\n        {/* data structures */}\n        <Route path=\"/linkedlist\" component={LinkedList} />\n        <Route path=\"/array\" component={ArrayVis} />\n\n        {/* algorithms */}\n        <Route path=\"/binarysearch\" component={BinarySearch} />\n        <Route path=\"/quicksort\" component={QuickSort} />\n        <Route path=\"/bfs\" component={BFS} />\n\n        <Route path=\"/dijkstra\" component={Dijkstra} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}